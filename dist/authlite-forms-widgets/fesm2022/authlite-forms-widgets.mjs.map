{"version":3,"file":"authlite-forms-widgets.mjs","sources":["../../../projects/authlite-forms-widgets/src/lib/authlite-forms-widgets.service.ts","../../../projects/authlite-forms-widgets/src/lib/authlite-forms-widgets.component.ts","../../../projects/authlite-forms-widgets/src/lib/types/TranslationDictionaryType.ts","../../../projects/authlite-forms-widgets/src/lib/types/ThemeType.ts","../../../projects/authlite-forms-widgets/src/lib/ui/checkbox/checkbox.component.ts","../../../projects/authlite-forms-widgets/src/lib/ui/checkbox/checkbox.component.html","../../../projects/authlite-forms-widgets/src/lib/Tagline/tagline.component.ts","../../../projects/authlite-forms-widgets/src/lib/Tagline/tagline.component.html","../../../projects/authlite-forms-widgets/src/lib/shared/FormElementMessage/form-element-message.component.ts","../../../projects/authlite-forms-widgets/src/lib/shared/FormElementMessage/form-element-message.component.html","../../../projects/authlite-forms-widgets/src/lib/signinForm/signin-form.component.ts","../../../projects/authlite-forms-widgets/src/lib/signinForm/signin-form.component.html","../../../projects/authlite-forms-widgets/src/lib/SignupForm/signup-form.component.ts","../../../projects/authlite-forms-widgets/src/lib/SignupForm/signup-form.component.html","../../../projects/authlite-forms-widgets/src/lib/ForgotPasswordForm/forgot-password-form.component.ts","../../../projects/authlite-forms-widgets/src/lib/ForgotPasswordForm/forgot-password-form.component.html","../../../projects/authlite-forms-widgets/src/lib/ResendVerifyLinkForm/resend-verify-link-form.component.ts","../../../projects/authlite-forms-widgets/src/lib/ResendVerifyLinkForm/resend-verify-link-form.component.html","../../../projects/authlite-forms-widgets/src/lib/SignupSuccessPage/signup-success-page.component.ts","../../../projects/authlite-forms-widgets/src/lib/SignupSuccessPage/signup-success-page.component.html","../../../projects/authlite-forms-widgets/src/lib/Logo/logo.component.ts","../../../projects/authlite-forms-widgets/src/lib/Logo/logo.component.html","../../../projects/authlite-forms-widgets/src/lib/Header/header.component.ts","../../../projects/authlite-forms-widgets/src/lib/Header/header.component.html","../../../projects/authlite-forms-widgets/src/lib/login/MainForm/main-form.component.ts","../../../projects/authlite-forms-widgets/src/lib/login/MainForm/main-form.component.html","../../../projects/authlite-forms-widgets/src/lib/login/DesignOne/design-one.component.ts","../../../projects/authlite-forms-widgets/src/lib/login/DesignOne/design-one.component.html","../../../projects/authlite-forms-widgets/src/lib/login/login-wrapper.component.ts","../../../projects/authlite-forms-widgets/src/lib/login/login-wrapper.component.html","../../../projects/authlite-forms-widgets/src/lib/authlite-forms-widgets.module.ts","../../../projects/authlite-forms-widgets/src/public-api.ts","../../../projects/authlite-forms-widgets/src/authlite-forms-widgets.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthliteFormsWidgetsService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-authlite-forms-widgets',\r\n  template: `\r\n    <p>\r\n      authlite-forms-widgets works!\r\n    </p>\r\n  `,\r\n  styles: ``\r\n})\r\nexport class AuthliteFormsWidgetsComponent {\r\n\r\n}\r\n","export type TranslationDictionary = {\r\n    SIGNIN_FORM__LABEL_USERNAME: string,\r\n    SIGNIN_FORM__LABEL_PASSWORD: string,\r\n    SIGNIN_FORM__ACTION_SIGNIN: string,\r\n    SIGNIN_FORM__ACTION_CREATEACCOUNT: string,\r\n    SIGNIN_FORM__ACTION_FORGOTPASSWORD: string,\r\n    SIGNIN_FORM__MESSAGE_NO_ACCOUNT: string,\r\n    SIGNIN_FORM__GREETING_TITLE: string,\r\n    SIGNIN_FORM__GREETING_SUBTITLE: string,\r\n\r\n    SIGNIN_ERROR__BLANK_USERNAME: string,\r\n    SIGNIN_ERROR__INVALID_USERNAME: string,\r\n    SIGNIN_ERROR__USER_NOT_FOUND: string,\r\n    SIGNIN_ERROR__EMAIL_NOT_VERIFIED: string,\r\n    SIGNIN_ERROR__BLANK_PASSWORD: string,\r\n    SIGNIN_ERROR__INCORRECT_PASSWORD: string,\r\n    SIGNIN_ERROR__BAD_REQUEST: string,\r\n    SIGNIN_ERROR__UNKNOWN_ERROR: string,\r\n\r\n    SIGNUP_FORM__LABEL_GIVENNAME: string,\r\n    SIGNUP_FORM__LABEL_FAMILYNAME: string,\r\n    SIGNUP_FORM__LABEL_EMAIL: string,\r\n    SIGNUP_FORM__LABEL_PASSWORD: string,\r\n    SIGNUP_FORM__LABEL_RETYPEPASSWORD: string,\r\n    SIGNUP_FORM__ACTION_SIGNIN: string,\r\n    SIGNUP_FORM__ACTION_CREATEACCOUNT: string,\r\n    SIGNUP_FORM__MESSAGE_EXISTING_ACCOUNT: string;\r\n    SIGNUP_FORM__GREETING_TITLE: string,\r\n    SIGNUP_FORM__GREETING_SUBTITLE: string,\r\n\r\n    SIGNUP_ERROR__BLANK_PASSWORD: string,\r\n    SIGNUP_ERROR__BLANK_RETYPEPASSWORD: string,\r\n    SIGNUP_ERROR__BLANK_GIVENNAME: string,\r\n    SIGNUP_ERROR__BLANK_FAMILYNAME: string,\r\n    SIGNUP_ERROR__BLANK_USERNAME: string,\r\n    SIGNUP_ERROR__INVALID_USERNAME: string,\r\n    SIGNUP_ERROR__PASSWORDS_DO_NOT_MATCH: string;\r\n    SIGNUP_ERROR__USER_ALREADY_EXISTS: string,\r\n    SIGNUP_ERROR__BAD_REQUEST: string,\r\n    SIGNUP_ERROR__UNKNOWN_ERROR: string,\r\n\r\n    RESEND_VERIFY_LINK_FORM__LABEL_EMAIL: string,\r\n    RESEND_VERIFY_LINK_FORM__ACTION_SEND: string,\r\n    RESEND_VERIFY_LINK_FORM__ACTION_SIGNIN: string,\r\n    RESEND_VERIFY_LINK_FORM__MESSAGE_ALREADY_VERIFIED: string,\r\n    RESEND_VERIFY_LINK_FORM__GREETING_TITLE: string,\r\n    RESEND_VERIFY_LINK_FORM__GREETING_SUBTITLE: string,\r\n\r\n    RESEND_VERIFY_LINK_ERROR__USER_NOT_FOUND: string,\r\n    RESEND_VERIFY_LINK_ERROR__INVALID_USERNAME: string,\r\n    RESEND_VERIFY_LINK_ERROR__BAD_REQUEST: string,\r\n    RESEND_VERIFY_LINK_ERROR__UNKNOWN_ERROR: string,\r\n\r\n    FORGOT_PASSWORD_FORM__LABEL_EMAIL: string,\r\n    FORGOT_PASSWORD_FORM__ACTION_SEND: string,\r\n    FORGOT_PASSWORD_FORM__ACTION_SIGNIN: string,\r\n    FORGOT_PASSWORD_FORM__MESSAGE_REMEMBER_PASSWORD: string,\r\n    FORGOT_PASSWORD_FORM__GREETING_TITLE: string,\r\n    FORGOT_PASSWORD_FORM__GREETING_SUBTITLE: string,\r\n\r\n    FORGOT_PASSWORD_ERROR__USER_NOT_FOUND: string,\r\n    FORGOT_PASSWORD_ERROR__INVALID_USERNAME: string,\r\n    FORGOT_PASSWORD_ERROR__BAD_REQUEST: string,\r\n    FORGOT_PASSWORD_ERROR__UNKNOWN_ERROR: string,\r\n\r\n    [key: string]: string,\r\n}\r\n\r\nexport enum TranslationName {\r\n    SIGNIN_FORM__LABEL_USERNAME = \"SIGNIN_FORM__LABEL_USERNAME\",\r\n    SIGNIN_FORM__LABEL_PASSWORD = \"SIGNIN_FORM__LABEL_PASSWORD\",\r\n    SIGNIN_FORM__ACTION_SIGNIN = \"SIGNIN_FORM__ACTION_SIGNIN\",\r\n    SIGNIN_FORM__ACTION_CREATEACCOUNT = \"SIGNIN_FORM__ACTION_CREATEACCOUNT\",\r\n    SIGNIN_FORM__ACTION_FORGOTPASSWORD = \"SIGNIN_FORM__ACTION_FORGOTPASSWORD\",\r\n    SIGNIN_FORM__MESSAGE_NO_ACCOUNT = \"SIGNIN_FORM__MESSAGE_NO_ACCOUNT\",\r\n\r\n    SIGNIN_ERROR__BAD_REQUEST = \"SIGNIN_ERROR__BAD_REQUEST\",\r\n    SIGNIN_ERROR__BLANK_PASSWORD = \"SIGNIN_ERROR__BLANK_PASSWORD\",\r\n    SIGNIN_ERROR__BLANK_USERNAME = \"SIGNIN_ERROR__BLANK_USERNAME\",\r\n    SIGNIN_ERROR__INVALID_USERNAME = \"SIGNIN_ERROR__INVALID_USERNAME\",\r\n    SIGNIN_ERROR__EMAIL_NOT_VERIFIED = \"SIGNIN_ERROR__EMAIL_NOT_VERIFIED\",\r\n    SIGNIN_ERROR__INCORRECT_PASSWORD = \"SIGNIN_ERROR__INCORRECT_PASSWORD\",\r\n    SIGNIN_ERROR__UNKNOWN_ERROR = \"SIGNIN_ERROR__UNKNOWN_ERROR\",\r\n    SIGNIN_ERROR__USER_NOT_FOUND = \"SIGNIN_ERROR__USER_NOT_FOUND\",\r\n\r\n    SIGNUP_FORM__LABEL_GIVENNAME = \"SIGNUP_FORM__LABEL_GIVENNAME\",\r\n    SIGNUP_FORM__LABEL_FAMILYNAME = \"SIGNUP_FORM__LABEL_FAMILYNAME\",\r\n    SIGNUP_FORM__LABEL_EMAIL = \"SIGNUP_FORM__LABEL_EMAIL\",\r\n    SIGNUP_FORM__LABEL_PASSWORD = \"SIGNUP_FORM__LABEL_PASSWORD\",\r\n    SIGNUP_FORM__LABEL_RETYPEPASSWORD = \"SIGNUP_FORM__LABEL_RETYPEPASSWORD\",\r\n    SIGNUP_FORM__ACTION_CREATEACCOUNT = \"SIGNUP_FORM__ACTION_CREATEACCOUNT\",\r\n    SIGNUP_FORM__ACTION_SIGNIN = \"SIGNUP_FORM__ACTION_SIGNIN\",\r\n    SIGNUP_FORM__MESSAGE_EXISTING_ACCOUNT = \"SIGNUP_FORM__MESSAGE_EXISTING_ACCOUNT\",\r\n\r\n    SIGNUP_ERROR__BLANK_PASSWORD = \"SIGNUP_ERROR__BLANK_PASSWORD\",\r\n    SIGNUP_ERROR__BLANK_USERNAME = \"SIGNUP_ERROR__BLANK_USERNAME\",\r\n    SIGNUP_ERROR__INVALID_USERNAME = \"SIGNUP_ERROR__INVALID_USERNAME\",\r\n    SIGNUP_ERROR__BLANK_FAMILYNAME = \"SIGNUP_ERROR__BLANK_FAMILYNAME\",\r\n    SIGNUP_ERROR__BLANK_GIVENNAME = \"SIGNUP_ERROR__BLANK_GIVENNAME\",\r\n    SIGNUP_ERROR__BLANK_RETYPEPASSWORD = \"SIGNUP_ERROR__BLANK_RETYPEPASSWORD\",\r\n    SIGNUP_ERROR__PASSWORDS_DO_NOT_MATCH = \"SIGNUP_ERROR__PASSWORDS_DO_NOT_MATCH\",\r\n\r\n    SIGNUP_ERROR__USER_ALREADY_EXISTS = \"SIGNUP_ERROR__USER_ALREADY_EXISTS\",\r\n    SIGNUP_ERROR__BAD_REQUEST = \"SIGNUP_ERROR__BAD_REQUEST\",\r\n    SIGNUP_ERROR__UNKNOWN_ERROR = \"SIGNUP_ERROR__UNKNOWN_ERROR\",\r\n\r\n    RESEND_VERIFY_LINK_FORM__LABEL_EMAIL = \"RESEND_VERIFY_LINK_FORM__LABEL_EMAIL\",\r\n    RESEND_VERIFY_LINK_FORM__MESSAGE_ALREADY_VERIFIED = \"RESEND_VERIFY_LINK_FORM__MESSAGE_ALREADY_VERIFIED\",\r\n    RESEND_VERIFY_LINK_FORM__ACTION_SEND = \"RESEND_VERIFY_LINK_FORM__ACTION_SEND\",\r\n    RESEND_VERIFY_LINK_FORM__ACTION_SIGNIN = \"RESEND_VERIFY_LINK_FORM__ACTION_SIGNIN\",\r\n\r\n    RESEND_VERIFY_LINK_ERROR__BLANK_USERNAME = \"RESEND_VERIFY_LINK_ERROR__BLANK_USERNAME\",\r\n    RESEND_VERIFY_LINK_ERROR__USER_NOT_FOUND = \"RESEND_VERIFY_LINK_ERROR__USER_NOT_FOUND\",\r\n    RESEND_VERIFY_LINK_ERROR__INVALID_USERNAME = \"RESEND_VERIFY_LINK_ERROR__INVALID_USERNAME\",\r\n    RESEND_VERIFY_LINK_ERROR__BAD_REQUEST = \"RESEND_VERIFY_LINK_ERROR__BAD_REQUEST\",\r\n    RESEND_VERIFY_LINK_ERROR__UNKNOWN_ERROR = \"RESEND_VERIFY_LINK_ERROR__UNKNOWN_ERROR\",\r\n\r\n    FORGOT_PASSWORD_FORM__LABEL_EMAIL = \"FORGOT_PASSWORD_FORM__LABEL_EMAIL\",\r\n    FORGOT_PASSWORD_FORM__ACTION_SEND = \"FORGOT_PASSWORD_FORM__ACTION_SEND\",\r\n    FORGOT_PASSWORD_FORM__ACTION_SIGNIN = \"FORGOT_PASSWORD_FORM__ACTION_SIGNIN\",\r\n    FORGOT_PASSWORD_FORM__MESSAGE_REMEMBER_PASSWORD = \"FORGOT_PASSWORD_FORM__MESSAGE_REMEMBER_PASSWORD\",\r\n\r\n    FORGOT_PASSWORD_ERROR__BLANK_USERNAME = \"FORGOT_PASSWORD_ERROR__BLANK_USERNAME\",\r\n    FORGOT_PASSWORD_ERROR__USER_NOT_FOUND = \"FORGOT_PASSWORD_ERROR__USER_NOT_FOUND\",\r\n    FORGOT_PASSWORD_ERROR__INVALID_USERNAME = \"FORGOT_PASSWORD_ERROR__INVALID_USERNAME\",\r\n    FORGOT_PASSWORD_ERROR__BAD_REQUEST = \"FORGOT_PASSWORD_ERROR__BAD_REQUEST\",\r\n    FORGOT_PASSWORD_ERROR__UNKNOWN_ERROR = \"FORGOT_PASSWORD_ERROR__UNKNOWN_ERROR\"\r\n}\r\n\r\nexport const DEFAULT_TRANSLATION_DICTIONARY: TranslationDictionary = {\r\n    SIGNIN_FORM__LABEL_USERNAME: \"Username Or Email Address\",\r\n    SIGNIN_FORM__LABEL_PASSWORD: \"Password\",\r\n    SIGNIN_FORM__ACTION_SIGNIN: \"Sign in\",\r\n    SIGNIN_FORM__ACTION_CREATEACCOUNT: \"Create account\",\r\n    SIGNIN_FORM__ACTION_FORGOTPASSWORD: \"Forgot Password?\",\r\n    SIGNIN_FORM__MESSAGE_NO_ACCOUNT: \"Don't have an account?\",\r\n    SIGNIN_FORM__GREETING_TITLE: \"Hello again!!\",\r\n    SIGNIN_FORM__GREETING_SUBTITLE: \"Metus dui sapien phasellus arcu posuere eu adipiscing proin adipiscing mi luctus dignissim sem. hendrerit dapibus ut scelerisque tellus malesuada scelerisque vel est fermentum nullam sociosqu.\",\r\n\r\n    SIGNIN_ERROR__BAD_REQUEST: \"Bad request\",\r\n    SIGNIN_ERROR__BLANK_PASSWORD: \"Password is empty\",\r\n    SIGNIN_ERROR__BLANK_USERNAME: \"Username is empty\",\r\n    SIGNIN_ERROR__INVALID_USERNAME: \"Email is not valid\",\r\n    SIGNIN_ERROR__EMAIL_NOT_VERIFIED: \"Email verification pending\",\r\n    SIGNIN_ERROR__INCORRECT_PASSWORD: \"Password is incorrect\",\r\n    SIGNIN_ERROR__UNKNOWN_ERROR: \"Unknown error\",\r\n    SIGNIN_ERROR__USER_NOT_FOUND: \"Username does not exist\",\r\n\r\n    SIGNUP_FORM__LABEL_GIVENNAME: \"Given name\",\r\n    SIGNUP_FORM__LABEL_FAMILYNAME: \"Family name\",\r\n    SIGNUP_FORM__LABEL_EMAIL: \"Username Or Email Address\",\r\n    SIGNUP_FORM__LABEL_PASSWORD: \"Password\",\r\n    SIGNUP_FORM__LABEL_RETYPEPASSWORD: \"Retype Password\",\r\n    SIGNUP_FORM__ACTION_CREATEACCOUNT: \"Create account\",\r\n    SIGNUP_FORM__ACTION_SIGNIN: \"Sign in\",\r\n    SIGNUP_FORM__MESSAGE_EXISTING_ACCOUNT: \"Already have an account?\",\r\n    SIGNUP_FORM__GREETING_TITLE: \"Join Auth lite\",\r\n    SIGNUP_FORM__GREETING_SUBTITLE: \"Join the community of secure authentication and authorization providers.\",\r\n\r\n    SIGNUP_ERROR__BLANK_PASSWORD: \"Password is empty\",\r\n    SIGNUP_ERROR__BLANK_USERNAME: \"Username is empty\",\r\n    SIGNUP_ERROR__INVALID_USERNAME: \"Email is not valid\",\r\n    SIGNUP_ERROR__BLANK_FAMILYNAME: \"Family name is empty\",\r\n    SIGNUP_ERROR__BLANK_GIVENNAME: \"Given name is empty\",\r\n    SIGNUP_ERROR__BLANK_RETYPEPASSWORD: \"Retype password is empty\",\r\n    SIGNUP_ERROR__PASSWORDS_DO_NOT_MATCH: \"Passwords do not match\",\r\n\r\n    SIGNUP_ERROR__USER_ALREADY_EXISTS: \"Email is already taken\",\r\n    SIGNUP_ERROR__BAD_REQUEST: \"Bad request\",\r\n    SIGNUP_ERROR__UNKNOWN_ERROR: \"Unknown error\",\r\n\r\n    RESEND_VERIFY_LINK_FORM__LABEL_EMAIL: \"Email Address\",\r\n    RESEND_VERIFY_LINK_FORM__ACTION_SEND: \"Resend verification link\",\r\n    RESEND_VERIFY_LINK_FORM__ACTION_SIGNIN: \"Sign in now\",\r\n    RESEND_VERIFY_LINK_FORM__MESSAGE_ALREADY_VERIFIED: \"Already verified?\",\r\n    RESEND_VERIFY_LINK_FORM__GREETING_TITLE: \"Email confirmation link\",\r\n    RESEND_VERIFY_LINK_FORM__GREETING_SUBTITLE: \"Haven't received a confirmation link to confirm your user account? Enter your registered email address and we will send you another email confirmation link.\",\r\n\r\n    RESEND_VERIFY_LINK_ERROR__BLANK_USERNAME: \"Username is empty\",\r\n    RESEND_VERIFY_LINK_ERROR__USER_NOT_FOUND: \"User does not exist\",\r\n    RESEND_VERIFY_LINK_ERROR__INVALID_USERNAME: \"Email is not valid\",\r\n    RESEND_VERIFY_LINK_ERROR__BAD_REQUEST: \"Bad request\",\r\n    RESEND_VERIFY_LINK_ERROR__UNKNOWN_ERROR: \"Unknown error\",\r\n\r\n    FORGOT_PASSWORD_FORM__LABEL_EMAIL: \"Email Address\",\r\n    FORGOT_PASSWORD_FORM__ACTION_SEND: \"Send password reset email\",\r\n    FORGOT_PASSWORD_FORM__ACTION_SIGNIN: \"Sign in\",\r\n    FORGOT_PASSWORD_FORM__MESSAGE_REMEMBER_PASSWORD: \"Remember password?\",\r\n    FORGOT_PASSWORD_FORM__GREETING_TITLE: \"Password reset\",\r\n    FORGOT_PASSWORD_FORM__GREETING_SUBTITLE: \"Enter your registered email address and we will send you a password reset link.\",\r\n\r\n    FORGOT_PASSWORD_ERROR__BLANK_USERNAME: \"Username is empty\",\r\n    FORGOT_PASSWORD_ERROR__USER_NOT_FOUND: \"User does not exist\",\r\n    FORGOT_PASSWORD_ERROR__INVALID_USERNAME: \"Email is not valid\",\r\n    FORGOT_PASSWORD_ERROR__BAD_REQUEST: \"Bad request\",\r\n    FORGOT_PASSWORD_ERROR__UNKNOWN_ERROR: \"Unknown error\"\r\n}\r\n\r\nexport const getTranslation = (\r\n    name: TranslationName,\r\n    dictionary?: TranslationDictionary\r\n) => {\r\n    return (dictionary || DEFAULT_TRANSLATION_DICTIONARY)[name];\r\n}\r\n","enum ThemeType {\r\n    default = \"default\",\r\n    primary = \"primary\",\r\n    secondary = \"secondary\",\r\n    success = \"success\",\r\n    warning = \"warning\",\r\n    danger = \"danger\"\r\n}\r\n\r\nexport default ThemeType;","import { Component, Input } from '@angular/core';\r\nimport ThemeType from '../../types/ThemeType';\r\n\r\n@Component({\r\n  selector: 'lib-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss'],\r\n})\r\nexport class CheckboxComponent {\r\n  @Input() theme: ThemeType = ThemeType.default;\r\n}","\r\n  <label class=\"authlite-checkbox\" [class.authlite-checkbox--theme-default]=\"theme === 'default'\">\r\n    <input class=\"authlite-checkbox__input\" type=\"checkbox\"/>\r\n    <span class=\"authlite-checkbox__span\">Remember me</span>\r\n  </label>","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-tagline',\r\n  templateUrl: './tagline.component.html',\r\n  styleUrls: ['./tagline.component.scss'],\r\n})\r\nexport class TaglineComponent {\r\n  @Input() title!: string;\r\n  @Input() subtitle!: string;\r\n\r\n  constructor() { }\r\n}","<div class=\"authlite-d1-tagline\">\r\n    <div class=\"authlite-d1-tagline__title\">{{title}}</div>\r\n    <div class=\"authlite-d1-tagline__subtitle\">{{subtitle}}</div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'lib-form-element-message',\r\n  templateUrl: './form-element-message.component.html',\r\n  styleUrls: ['./form-element-message.component.scss'],\r\n})\r\nexport class FormElementMessageComponent {\r\n  @Input() email!: string;  \r\n  @Input() password!: string;\r\n  @Input() given_name!: string;\r\n  @Input() family_name!: string;\r\n  @Input() retype_password!: string;\r\n  @Input() type!: 'error' | 'warning' | 'success' | 'info' | 'label';\r\n  @Input() blankUsername!: string;\r\n  @Input() blankPassword!: string;\r\n  @Input() invalidUsername!: string;\r\n  @Input() userNotFound!: string;\r\n  @Input() incorrectPassword!: string;\r\n  @Input() blankGivenname!: string;\r\n  @Input() blankFamilyname!: string;\r\n  @Input() blankRetypePassword!: string;\r\n  @Input() RetypePasswordDoesnotmatch!: string;\r\n}\r\n","<div class=\"authlite-form-element-label\" type=\"type\">\r\n    {{email}}\r\n    {{password}}\r\n    {{given_name}}\r\n    {{family_name}}\r\n    {{retype_password}}\r\n</div>\r\n<div class=\"authlite-form-element-error\">\r\n    {{blankUsername}}\r\n    {{blankPassword}}\r\n    {{invalidUsername}}\r\n    {{userNotFound}}\r\n    {{incorrectPassword}}\r\n    {{blankGivenname}}\r\n    {{blankFamilyname}}\r\n    {{blankRetypePassword}}\r\n    {{RetypePasswordDoesnotmatch}}\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { TranslationDictionary, TranslationName, getTranslation, DEFAULT_TRANSLATION_DICTIONARY } from '../types/TranslationDictionaryType';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'lib-signin-form',\r\n  templateUrl: './signin-form.component.html',\r\n  styleUrls: ['./signin-form.component.scss'],\r\n})\r\nexport class SigninFormComponent implements OnInit {\r\n\r\n  @Input() translationDictionary: TranslationDictionary = DEFAULT_TRANSLATION_DICTIONARY;\r\n\r\n  @Input() translationName!: TranslationName;\r\n\r\n  signinForm!: FormGroup;\r\n\r\n  showPassword: boolean = true; //password eye icon functionality\r\n    \r\n  togglePassword() {\r\n    this.showPassword = !this.showPassword\r\n  }\r\n\r\n  constructor(private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  initForm(): void {\r\n    this.signinForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n  get signinGreetingTitle(): string {\r\n    return this.translationDictionary.SIGNIN_FORM__GREETING_TITLE;\r\n  }\r\n  get signinGreetingSubtitle(): string {\r\n    return this.translationDictionary.SIGNIN_FORM__GREETING_SUBTITLE;\r\n  }\r\n  get signinFormLabelUsername(): string {\r\n    return this.translationDictionary.SIGNIN_FORM__LABEL_USERNAME;\r\n  }\r\n  get signinFormLabelPassword(): string {\r\n    return this.translationDictionary.SIGNIN_FORM__LABEL_PASSWORD;\r\n  }\r\n  get signinFormUsernameErrorMessage(): string {\r\n    return this.translationDictionary.SIGNIN_ERROR__BLANK_USERNAME;\r\n  }\r\n  get signinFormPasswordErrorMessage(): string {\r\n    return this.translationDictionary.SIGNIN_ERROR__BLANK_PASSWORD;\r\n  }\r\n  get signinFormInvalidUsername(): string {\r\n    return this.translationDictionary.SIGNIN_ERROR__INVALID_USERNAME;\r\n  }\r\n  get signinFormIncorrectPassword(): string {\r\n    return this.translationDictionary.SIGNIN_ERROR__INCORRECT_PASSWORD;\r\n  }\r\n  get signinFormUserNotFound(): string {\r\n    return this.translationDictionary.SIGNIN_ERROR__USER_NOT_FOUND;\r\n  }\r\n  onSubmit(): void {\r\n    console.log('onSubmit')\r\n    if (this.signinForm.invalid) {\r\n      this.signinForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    const enteredEmail = this.signinForm.value.email;\r\n    const enteredPassword = this.signinForm.value.password;\r\n\r\n    if (!this.isUserExists(enteredEmail, enteredPassword)) {\r\n      this.signinForm.setErrors({ userNotFound: true });\r\n    }\r\n    else {\r\n      console.log('Login Successful', this.signinForm.value);\r\n    }\r\n  }\r\n  isUserExists(email: string, password: string): boolean {\r\n    return false;\r\n  }\r\n}","<form class=\"authlite-signin-form\" [formGroup]=\"signinForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"authlite-margin-top\">\r\n        <lib-tagline \r\n            [title]=\"signinGreetingTitle\"\r\n            [subtitle]=\"signinGreetingSubtitle\">\r\n        </lib-tagline>\r\n    </div>\r\n    <div class=\"authlite-margin-top\">\r\n        <lib-form-element-message \r\n            [email]=\"signinFormLabelUsername\">\r\n        </lib-form-element-message>\r\n        <input class=\"authlite-input\" autoComplete=\"off\" name=\"email\" formControlName=\"email\" type=\"email\"/>\r\n        <lib-form-element-message\r\n            *ngIf=\"signinForm.controls['email'].touched && signinForm.controls['email'].hasError('required')\"\r\n            [blankUsername]=\"signinFormUsernameErrorMessage\">\r\n        </lib-form-element-message>\r\n        <lib-form-element-message\r\n            *ngIf=\"signinForm.controls['email'].touched && signinForm.controls['email'].hasError('email')\"\r\n            [invalidUsername]=\"signinFormInvalidUsername\">\r\n        </lib-form-element-message>\r\n        <lib-form-element-message\r\n            *ngIf=\"signinForm.errors?.['userNotFound']\"\r\n            [userNotFound]=\"signinFormUserNotFound\">\r\n        </lib-form-element-message>\r\n    </div>\r\n    <div class=\"authlite-margin-top\">\r\n        <lib-form-element-message \r\n            [password]=\"signinFormLabelPassword\">\r\n        </lib-form-element-message>\r\n        <div class=\"authlite-input-container\">\r\n            <input [type]=\"showPassword?'password':'text'\" id=\"passwordId\" formControlName=\"password\" class=\"authlite-input\" name=\"password\" value=\"\">\r\n            <span (click)=\"togglePassword()\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\" *ngIf=\"!showPassword\" class=\"authlite-password-hide-icon\">\r\n                    <path d=\"M320 400c-75.9 0-137.3-58.7-142.9-133.1L72.2 185.8c-13.8 17.3-26.5 35.6-36.7 55.6a32.4 32.4 0 0 0 0 29.2C89.7 376.4 197.1 448 320 448c26.9 0 52.9-4 77.9-10.5L346 397.4a144.1 144.1 0 0 1 -26 2.6zm313.8 58.1l-110.6-85.4a331.3 331.3 0 0 0 81.3-102.1 32.4 32.4 0 0 0 0-29.2C550.3 135.6 442.9 64 320 64a308.2 308.2 0 0 0 -147.3 37.7L45.5 3.4A16 16 0 0 0 23 6.2L3.4 31.5A16 16 0 0 0 6.2 53.9l588.4 454.7a16 16 0 0 0 22.5-2.8l19.6-25.3a16 16 0 0 0 -2.8-22.5zm-183.7-142l-39.3-30.4A94.8 94.8 0 0 0 416 256a94.8 94.8 0 0 0 -121.3-92.2A47.7 47.7 0 0 1 304 192a46.6 46.6 0 0 1 -1.5 10l-73.6-56.9A142.3 142.3 0 0 1 320 112a143.9 143.9 0 0 1 144 144c0 21.6-5.3 41.8-13.9 60.1z\"/>\r\n                </svg>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\" *ngIf=\"showPassword\" class=\"authlite-password-show-icon\">\r\n                    <path d=\"M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4C142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zM144 256a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-64c0 35.3-28.7 64-64 64c-7.1 0-13.9-1.2-20.3-3.3c-5.5-1.8-11.9 1.6-11.7 7.4c.3 6.9 1.3 13.8 3.2 20.7c13.7 51.2 66.4 81.6 117.6 67.9s81.6-66.4 67.9-117.6c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3z\"/>\r\n                </svg>\r\n            </span>\r\n        </div>\r\n        <lib-form-element-message \r\n            *ngIf=\"signinForm.controls['password'].touched && signinForm.controls['password'].hasError('required')\"\r\n            [blankPassword]=\"signinFormPasswordErrorMessage\">\r\n        </lib-form-element-message>\r\n        <lib-form-element-message \r\n            *ngIf=\"signinForm.errors?.['incorrectPassword']\"\r\n            [incorrectPassword]=\"signinFormIncorrectPassword\">\r\n        </lib-form-element-message>\r\n    </div>\r\n    <div class=\"authlite-signin-form__forgot authlite-margin-top-small\">\r\n        <lib-checkbox></lib-checkbox>\r\n        <a routerLink=\"/forgot-password-form\" class=\"authlite-button-as-link\">{{translationDictionary.SIGNIN_FORM__ACTION_FORGOTPASSWORD}}</a>\r\n    </div>\r\n    <div class=\"authlite-action-bar authlite-margin-top\">\r\n        <button class=\"authlite-primary-button\" type=\"submit\">{{translationDictionary.SIGNIN_FORM__ACTION_SIGNIN}}</button>\r\n    </div>\r\n    <div class=\"authlite-margin-top authlite-action-bar-center\">\r\n        {{translationDictionary.SIGNIN_FORM__MESSAGE_NO_ACCOUNT}}\r\n        <a routerLink=\"/signup-form\" class=\"authlite-button-as-link\">{{translationDictionary.SIGNIN_FORM__ACTION_CREATEACCOUNT}}</a>\r\n    </div>\r\n</form>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { DEFAULT_TRANSLATION_DICTIONARY, TranslationDictionary, TranslationName, getTranslation } from '../types/TranslationDictionaryType';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl, NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n//import { AuthService } from \"../services/AuthenticationService\";\r\n//import { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'lib-signup-form',\r\n  templateUrl: './signup-form.component.html',\r\n  styleUrls: ['./signup-form.component.scss'],\r\n})\r\nexport class SignupFormComponent implements OnInit {\r\n\r\n  @Input() translationDictionary: TranslationDictionary = DEFAULT_TRANSLATION_DICTIONARY;\r\n\r\n  @Input() translationName!: TranslationName;\r\n\r\n  signupForm!: FormGroup;\r\n\r\n  showPassword: boolean = true;\r\n\r\n  togglePassword() {\r\n    this.showPassword = !this.showPassword\r\n  }\r\n\r\n  constructor(private fb: FormBuilder, private router: Router, /*private http: HttpClient, public authService: AuthService*/) { }\r\n\r\n\r\n  /*onSignupForm(signupForm: NgForm) {\r\n    if (signupForm.invalid) {\r\n      return;\r\n    }\r\n    this.authService.CreateUser(\r\n      signupForm.value.given_name,\r\n      signupForm.value.family_name,\r\n      signupForm.value.email,\r\n      signupForm.value.password,\r\n      signupForm.value.retype_password);\r\n  }*/\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n  initForm(): void {\r\n    this.signupForm = this.fb.group({\r\n      given_name: ['', Validators.required],\r\n      family_name: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required],\r\n      retype_password: ['', Validators.required],\r\n    },\r\n      {\r\n        validators: this.passwordMatchValidator,\r\n      });\r\n  }\r\n\r\n  get signupGreetingTitle(): string {\r\n    return this.translationDictionary.SIGNUP_FORM__GREETING_TITLE;\r\n  }\r\n  get signupGreetingSubtitle(): string {\r\n    return this.translationDictionary.SIGNUP_FORM__GREETING_SUBTITLE;\r\n  }\r\n  get signupFormLabelGivenname(): string {\r\n    return this.translationDictionary.SIGNUP_FORM__LABEL_GIVENNAME;\r\n  }\r\n  get signupFormLabelFamilyname(): string {\r\n    return this.translationDictionary.SIGNUP_FORM__LABEL_FAMILYNAME;\r\n  }\r\n  get signupFormLabelUsername(): string {\r\n    return this.translationDictionary.SIGNUP_FORM__LABEL_EMAIL;\r\n  }\r\n  get signupFormLabelPassword(): string {\r\n    return this.translationDictionary.SIGNUP_FORM__LABEL_PASSWORD;\r\n  }\r\n  get signupFormLabelRetypePassword(): string {\r\n    return this.translationDictionary.SIGNUP_FORM__LABEL_RETYPEPASSWORD;\r\n  }\r\n  get signupFormGivennameErrorMessage(): string {\r\n    return this.translationDictionary.SIGNUP_ERROR__BLANK_GIVENNAME;\r\n  }\r\n  get signupFormFamilynameErrorMessage(): string {\r\n    return this.translationDictionary.SIGNUP_ERROR__BLANK_FAMILYNAME;\r\n  }\r\n  get signupFormUsernameErrorMessage(): string {\r\n    return this.translationDictionary.SIGNUP_ERROR__BLANK_USERNAME;\r\n  }\r\n  get signupFormInvalidUsername(): string {\r\n    return this.translationDictionary.SIGNUP_ERROR__INVALID_USERNAME;\r\n  }\r\n  get signupFormPasswordErrorMessage(): string {\r\n    return this.translationDictionary.SIGNUP_ERROR__BLANK_PASSWORD;\r\n  }\r\n  get signupFormReTypePasswordErrorMessage(): string {\r\n    return this.translationDictionary.SIGNUP_ERROR__BLANK_RETYPEPASSWORD;\r\n  }\r\n  get signupFormReTypePasswordDoesnotMatch(): string {\r\n    const retypePassword = this.signupForm.get('retype_password');\r\n    return this.translationDictionary.SIGNUP_ERROR__PASSWORDS_DO_NOT_MATCH;\r\n  }\r\n  passwordMatchValidator(control: AbstractControl): { [key: string]: boolean } | null {\r\n    const password = control.get('password');\r\n    const retypePassword = control.get('retype_password');\r\n\r\n    if (password && retypePassword && password.value !== retypePassword.value) {\r\n      return { 'passwordMismatch': true };\r\n    }\r\n    return null;\r\n  }\r\n  onSubmit(): void {\r\n    if (this.signupForm.invalid) {\r\n      this.signupForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    else {\r\n      console.log('Signup Successful:', this.signupForm.value);\r\n      //this.router.navigate(['/signup-success-page']);\r\n    }\r\n  }\r\n}\r\n\r\n","<form class=\"authlite-d1-signup-form\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"authlite-margin-top\">\r\n    <lib-tagline \r\n          [title]=\"signupGreetingTitle\"\r\n          [subtitle]=\"signupGreetingSubtitle\">\r\n    </lib-tagline>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n      <lib-form-element-message \r\n          [given_name]=\"signupFormLabelGivenname\">\r\n      </lib-form-element-message> \r\n      <input type=\"text\" class=\"authlite-input\" autocomplete=\"off\" value=\"\" formControlName=\"given_name\">\r\n      <lib-form-element-message\r\n          *ngIf=\"signupForm.controls['given_name'].touched && signupForm.controls['given_name'].hasError('required')\"\r\n          [blankGivenname]=\"signupFormGivennameErrorMessage\">\r\n      </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n      <lib-form-element-message \r\n          [family_name]=\"signupFormLabelFamilyname\">\r\n      </lib-form-element-message>\r\n      <input type=\"text\" class=\"authlite-input\" autocomplete=\"off\" value=\"\" formControlName=\"family_name\">\r\n      <lib-form-element-message\r\n          *ngIf=\"signupForm.controls['family_name'].touched && signupForm.controls['family_name'].hasError('required')\"\r\n          [blankGivenname]=\"signupFormFamilynameErrorMessage\">\r\n      </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n      <lib-form-element-message \r\n          [email]=\"signupFormLabelUsername\">\r\n      </lib-form-element-message>\r\n      <input type=\"email\" id=\"userid\" formControlName=\"email\" class=\"authlite-input\" name=\"email\" autocomplete=\"off\" value=\"\">\r\n      <lib-form-element-message\r\n          *ngIf=\"signupForm.controls['email'].touched && signupForm.controls['email'].hasError('required')\"\r\n          [blankUsername]=\"signupFormUsernameErrorMessage\">\r\n      </lib-form-element-message>\r\n      <lib-form-element-message\r\n          *ngIf=\"signupForm.controls['email'].touched && signupForm.controls['email'].hasError('email')\"\r\n          [invalidUsername]=\"signupFormInvalidUsername\">\r\n      </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n      <lib-form-element-message \r\n          [password]=\"signupFormLabelPassword\">\r\n      </lib-form-element-message>\r\n      <div class=\"authlite-input-container\">\r\n        <input [type]=\"showPassword?'password':'text'\" formControlName=\"password\" class=\"authlite-input\" name=\"password\" value=\"\">\r\n        <span (click)=\"togglePassword()\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\" *ngIf=\"!showPassword\" class=\"authlite-password-hide-icon\">\r\n                <path d=\"M320 400c-75.9 0-137.3-58.7-142.9-133.1L72.2 185.8c-13.8 17.3-26.5 35.6-36.7 55.6a32.4 32.4 0 0 0 0 29.2C89.7 376.4 197.1 448 320 448c26.9 0 52.9-4 77.9-10.5L346 397.4a144.1 144.1 0 0 1 -26 2.6zm313.8 58.1l-110.6-85.4a331.3 331.3 0 0 0 81.3-102.1 32.4 32.4 0 0 0 0-29.2C550.3 135.6 442.9 64 320 64a308.2 308.2 0 0 0 -147.3 37.7L45.5 3.4A16 16 0 0 0 23 6.2L3.4 31.5A16 16 0 0 0 6.2 53.9l588.4 454.7a16 16 0 0 0 22.5-2.8l19.6-25.3a16 16 0 0 0 -2.8-22.5zm-183.7-142l-39.3-30.4A94.8 94.8 0 0 0 416 256a94.8 94.8 0 0 0 -121.3-92.2A47.7 47.7 0 0 1 304 192a46.6 46.6 0 0 1 -1.5 10l-73.6-56.9A142.3 142.3 0 0 1 320 112a143.9 143.9 0 0 1 144 144c0 21.6-5.3 41.8-13.9 60.1z\"/>\r\n            </svg>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\" *ngIf=\"showPassword\" class=\"authlite-password-show-icon\">\r\n                <path d=\"M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4C142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zM144 256a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-64c0 35.3-28.7 64-64 64c-7.1 0-13.9-1.2-20.3-3.3c-5.5-1.8-11.9 1.6-11.7 7.4c.3 6.9 1.3 13.8 3.2 20.7c13.7 51.2 66.4 81.6 117.6 67.9s81.6-66.4 67.9-117.6c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3z\"/>\r\n            </svg>\r\n        </span>\r\n    </div>\r\n      <lib-form-element-message \r\n          *ngIf=\"signupForm.controls['password'].touched && signupForm.controls['password'].hasError('required')\"\r\n          [blankPassword]=\"signupFormPasswordErrorMessage\">\r\n      </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n      <lib-form-element-message \r\n          [retype_password]=\"signupFormLabelRetypePassword\">\r\n      </lib-form-element-message>\r\n      <div class=\"authlite-input-container\">\r\n        <input [type]=\"showPassword?'password':'text'\" formControlName=\"retype_password\" class=\"authlite-input\" name=\"retype_password\" value=\"\">\r\n        <span (click)=\"togglePassword()\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\" *ngIf=\"!showPassword\" class=\"authlite-password-hide-icon\">\r\n                <path d=\"M320 400c-75.9 0-137.3-58.7-142.9-133.1L72.2 185.8c-13.8 17.3-26.5 35.6-36.7 55.6a32.4 32.4 0 0 0 0 29.2C89.7 376.4 197.1 448 320 448c26.9 0 52.9-4 77.9-10.5L346 397.4a144.1 144.1 0 0 1 -26 2.6zm313.8 58.1l-110.6-85.4a331.3 331.3 0 0 0 81.3-102.1 32.4 32.4 0 0 0 0-29.2C550.3 135.6 442.9 64 320 64a308.2 308.2 0 0 0 -147.3 37.7L45.5 3.4A16 16 0 0 0 23 6.2L3.4 31.5A16 16 0 0 0 6.2 53.9l588.4 454.7a16 16 0 0 0 22.5-2.8l19.6-25.3a16 16 0 0 0 -2.8-22.5zm-183.7-142l-39.3-30.4A94.8 94.8 0 0 0 416 256a94.8 94.8 0 0 0 -121.3-92.2A47.7 47.7 0 0 1 304 192a46.6 46.6 0 0 1 -1.5 10l-73.6-56.9A142.3 142.3 0 0 1 320 112a143.9 143.9 0 0 1 144 144c0 21.6-5.3 41.8-13.9 60.1z\"/>\r\n            </svg>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\" *ngIf=\"showPassword\" class=\"authlite-password-show-icon\">\r\n                <path d=\"M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4C142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zM144 256a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-64c0 35.3-28.7 64-64 64c-7.1 0-13.9-1.2-20.3-3.3c-5.5-1.8-11.9 1.6-11.7 7.4c.3 6.9 1.3 13.8 3.2 20.7c13.7 51.2 66.4 81.6 117.6 67.9s81.6-66.4 67.9-117.6c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3z\"/>\r\n            </svg>\r\n        </span>\r\n    </div>\r\n      <lib-form-element-message \r\n          *ngIf=\"signupForm.controls['retype_password'].touched && signupForm.controls['retype_password'].hasError('required')\"\r\n          [blankRetypePassword]=\"signupFormReTypePasswordErrorMessage\">\r\n      </lib-form-element-message>\r\n      <lib-form-element-message \r\n          *ngIf=\"signupForm.hasError('passwordMismatch') && (signupForm.controls['retype_password'].touched || signupForm.controls['password'].touched)\"\r\n          [RetypePasswordDoesnotmatch]=\"signupFormReTypePasswordDoesnotMatch\">\r\n      </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-action-bar authlite-margin-top\">\r\n      <button class=\"authlite-primary-button\" type=\"submit\">{{translationDictionary.SIGNUP_FORM__ACTION_CREATEACCOUNT}}</button>\r\n  </div>\r\n  <div class=\"authlite-margin-top authlite-action-bar-center\">\r\n      {{translationDictionary.SIGNUP_FORM__MESSAGE_EXISTING_ACCOUNT}}\r\n      <button class=\"authlite-button-as-link\" type=\"submit\" routerLink=\"/signin-form\">{{translationDictionary.SIGNUP_FORM__ACTION_SIGNIN}}</button>\r\n  </div>\r\n</form>\r\n","import { Component, Input } from '@angular/core';\r\nimport { TranslationDictionary, DEFAULT_TRANSLATION_DICTIONARY, TranslationName } from '../types/TranslationDictionaryType';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'lib-forgot-password-form',\r\n  templateUrl: './forgot-password-form.component.html',\r\n  styleUrls: ['./forgot-password-form.component.scss'],\r\n})\r\nexport class ForgotPasswordFormComponent {\r\n\r\n  @Input() translationDictionary: TranslationDictionary = DEFAULT_TRANSLATION_DICTIONARY;\r\n\r\n  @Input() translationName!: TranslationName;\r\n\r\n  forgotPasswordForm!: FormGroup;\r\n\r\n  passwordResetLinkSent: boolean = false;\r\n  email: any;\r\n\r\n  constructor(private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n  initForm(): void {\r\n    this.forgotPasswordForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n    });\r\n  }\r\n\r\n  get forgotPasswordGreetingTitle(): string {\r\n    return this.translationDictionary.FORGOT_PASSWORD_FORM__GREETING_TITLE;\r\n  }\r\n  get forgotPasswordGreetingSubtitle(): string {\r\n    return this.translationDictionary.FORGOT_PASSWORD_FORM__GREETING_SUBTITLE;\r\n  }\r\n  get forgotPasswordFormLabelEmail(): string {\r\n    return this.translationDictionary.FORGOT_PASSWORD_FORM__LABEL_EMAIL;\r\n  }\r\n  get forgotPasswordFormUsernameErrorMessage(): string {\r\n    return this.translationDictionary['FORGOT_PASSWORD_ERROR__BLANK_USERNAME'];\r\n  }\r\n  get forgotPasswordFormInvalidUsername(): string {\r\n    return this.translationDictionary.FORGOT_PASSWORD_ERROR__INVALID_USERNAME;\r\n  }\r\n  get forgotPasswordFormUserNotFound(): string {\r\n    return this.translationDictionary.FORGOT_PASSWORD_ERROR__USER_NOT_FOUND;\r\n  }\r\n  onSubmit(): void {\r\n    console.log('onSubmit')\r\n    if (this.forgotPasswordForm.invalid) {\r\n      this.forgotPasswordForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    const enteredEmail = this.forgotPasswordForm.value.email;\r\n\r\n    if (!this.isUserExists(enteredEmail)) {\r\n      this.forgotPasswordForm.setErrors({ userNotFound: true });\r\n    }\r\n    else {\r\n      console.log('reset link sent to:', this.forgotPasswordForm.value);\r\n      this.sendPasswordResetLink(enteredEmail);\r\n    }\r\n  }\r\n  isUserExists(email: string): boolean {\r\n    return false;\r\n  }\r\n  sendPasswordResetLink(email: string): void {\r\n    console.log('Password reset link sent to ${enteredEmail}', email);\r\n    this.passwordResetLinkSent = true;\r\n  }\r\n}","<form class=\"authlite-d1-forgotpassword-form\" [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"authlite-margin-top\">\r\n    <lib-tagline [title]=\"forgotPasswordGreetingTitle\" [subtitle]=\"forgotPasswordGreetingSubtitle\">\r\n    </lib-tagline>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n    <lib-form-element-message [email]=\"forgotPasswordFormLabelEmail\">\r\n    </lib-form-element-message>\r\n    <input type=\"email\" class=\"authlite-input\" name=\"email\" autocomplete=\"off\" formControlName=\"email\" value=\"\" />\r\n    <lib-form-element-message\r\n      *ngIf=\"forgotPasswordForm.controls['email'].touched && forgotPasswordForm.controls['email'].hasError('required')\"\r\n      [blankUsername]=\"forgotPasswordFormUsernameErrorMessage\">\r\n    </lib-form-element-message>\r\n    <lib-form-element-message\r\n      *ngIf=\"forgotPasswordForm.controls['email'].touched && forgotPasswordForm.controls['email'].hasError('email')\"\r\n      [invalidUsername]=\"forgotPasswordFormInvalidUsername\">\r\n    </lib-form-element-message>\r\n    <lib-form-element-message *ngIf=\"forgotPasswordForm.errors?.['userNotFound']\"\r\n      [userNotFound]=\"forgotPasswordFormUserNotFound\">\r\n    </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-action-bar authlite-margin-top\">\r\n    <button class=\"authlite-primary-button\"\r\n      type=\"submit\">{{translationDictionary.FORGOT_PASSWORD_FORM__ACTION_SEND}}</button>\r\n  </div>\r\n  <div class=\"authlite-action-bar-center authlite-margin-top\">\r\n    {{translationDictionary.FORGOT_PASSWORD_FORM__MESSAGE_REMEMBER_PASSWORD}}\r\n    <button class=\"authlite-button-as-link\"\r\n      routerLink=\"/SigninForm\">{{translationDictionary.FORGOT_PASSWORD_FORM__ACTION_SIGNIN}}</button>\r\n  </div>\r\n</form>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { DEFAULT_TRANSLATION_DICTIONARY, TranslationDictionary, TranslationName, getTranslation } from '../types/TranslationDictionaryType';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'lib-resend-verify-link-form',\r\n  templateUrl: './resend-verify-link-form.component.html',\r\n  styleUrls: ['./resend-verify-link-form.component.scss'],\r\n})\r\nexport class ResendVerifyLinkFormComponent implements OnInit {\r\n\r\n  @Input() translationDictionary: TranslationDictionary = DEFAULT_TRANSLATION_DICTIONARY;\r\n\r\n  @Input() translationName!: TranslationName;\r\n\r\n  resendVerifyLinkForm!: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n  initForm(): void {\r\n    this.resendVerifyLinkForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n    });\r\n  }\r\n  get resendVerifyLinkFormGreetingTitle(): string {\r\n    return this.translationDictionary.RESEND_VERIFY_LINK_FORM__GREETING_TITLE;\r\n  }\r\n  get resendVerifyLinkFormGreetingSubtitle(): string {\r\n    return this.translationDictionary.RESEND_VERIFY_LINK_FORM__GREETING_SUBTITLE;\r\n  }\r\n  get resendVerifyLinkFormLabelEmail(): string {\r\n    return this.translationDictionary.RESEND_VERIFY_LINK_FORM__LABEL_EMAIL;\r\n  }\r\n  get resendVerifyLinkFormUsernameErrorMessage(): string {\r\n    return this.translationDictionary['RESEND_VERIFY_LINK_ERROR__BLANK_USERNAME'];\r\n  }\r\n  get resendVerifyLinkFormInvalidUsername(): string {\r\n    return this.translationDictionary.RESEND_VERIFY_LINK_ERROR__INVALID_USERNAME;\r\n  }\r\n  get resendVerifyLinkFormUserNotFound(): string {\r\n    return this.translationDictionary.RESEND_VERIFY_LINK_ERROR__USER_NOT_FOUND;\r\n  }\r\n  onSubmit(): void {\r\n    console.log('onSubmit')\r\n    if (this.resendVerifyLinkForm.invalid) {\r\n      this.resendVerifyLinkForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    const enteredEmail = this.resendVerifyLinkForm.value.email;\r\n\r\n    if (!this.isUserExists(enteredEmail)) {\r\n      this.resendVerifyLinkForm.setErrors({ userNotFound: true });\r\n    }\r\n    else {\r\n      console.log('reset link sent to:', this.resendVerifyLinkForm.value);\r\n    }\r\n  }\r\n  isUserExists(_email: string): boolean {\r\n    return false;\r\n  }\r\n}\r\n","<form [formGroup]=\"resendVerifyLinkForm\" (ngSubmit)=\"onSubmit()\" class=\"authlite-resendverifylink-form\">\r\n  <div class=\"authlite-margin-top\">\r\n    <lib-tagline [title]=\"resendVerifyLinkFormGreetingTitle\" [subtitle]=\"resendVerifyLinkFormGreetingSubtitle\">\r\n    </lib-tagline>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n    <lib-form-element-message [email]=\"resendVerifyLinkFormLabelEmail\"></lib-form-element-message>\r\n    <input type=\"email\" formControlName=\"email\" class=\"authlite-input\" name=\"email\" autocomplete=\"off\" value=\"\" />\r\n    <lib-form-element-message\r\n      *ngIf=\"resendVerifyLinkForm.controls['email'].touched && resendVerifyLinkForm.controls['email'].hasError('required')\"\r\n      [blankUsername]=\"resendVerifyLinkFormUsernameErrorMessage\">\r\n    </lib-form-element-message>\r\n    <lib-form-element-message\r\n      *ngIf=\"resendVerifyLinkForm.controls['email'].touched && resendVerifyLinkForm.controls['email'].hasError('email')\"\r\n      [invalidUsername]=\"resendVerifyLinkFormInvalidUsername\">\r\n    </lib-form-element-message>\r\n    <lib-form-element-message *ngIf=\"resendVerifyLinkForm.errors?.['userNotFound']\"\r\n      [userNotFound]=\"resendVerifyLinkFormUserNotFound\">\r\n    </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-action-bar authlite-margin-top\">\r\n    <button class=\"authlite-primary-button\" type=\"submit\">\r\n      {{ translationDictionary.RESEND_VERIFY_LINK_FORM__ACTION_SEND }}\r\n    </button>\r\n  </div>\r\n  <div class=\"authlite-action-bar-center authlite-margin-top\">\r\n    {{ translationDictionary.RESEND_VERIFY_LINK_FORM__MESSAGE_ALREADY_VERIFIED }}\r\n    <button class=\"authlite-button-as-link\" type=\"submit\">\r\n      {{ translationDictionary.RESEND_VERIFY_LINK_FORM__ACTION_SIGNIN }}\r\n    </button>\r\n  </div>\r\n</form>","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-signup-success-page',\r\n  templateUrl: './signup-success-page.component.html',\r\n  styleUrls: ['./signup-success-page.component.scss'],\r\n})\r\nexport class SignupSuccessPageComponent {\r\n  @Input() heading: string = '';\r\n  @Input() children: any;\r\n}\r\n","<div class=\"authlite-infopage\">\r\n    <h1>{{ heading }}</h1>\r\n    <ng-container *ngIf=\"children\">{{ children }}</ng-container>\r\n  </div>","import { Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-logo',\r\n  templateUrl: './logo.component.html',\r\n  styleUrls: ['./logo.component.scss'],\r\n})\r\nexport class LogoComponent {\r\n\r\n}","<div class=\"authlite-d1-logo\">\r\n    <img src=\"https://authlite-widgets.ioak.io/static/media/authlite_black.449e265c.svg\" alt=\"Authlite logo\"/>\r\n</div>","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent {\r\n  @Input() logo: any;\r\n  @Input() header!: string;\r\n}","<div class=\"authlite-d1-header\">\r\n    <lib-logo></lib-logo>\r\n    {{header}}\r\n  </div>","\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-main-form',\r\n  templateUrl: './main-form.component.html',\r\n  styleUrls: ['./main-form.component.scss'],\r\n})\r\nexport class MainFormComponent {\r\n  @Input() logo: any;\r\n  @Input() placeholder: any;\r\n}\r\n","\r\n<div class=\"authlite-mainform\">\r\n    <lib-header></lib-header>\r\n    <lib-signin-form></lib-signin-form>\r\n    <!--<lib-signup-form></lib-signup-form>\r\n    <app-forgot-password-form></app-forgot-password-form>\r\n    <app-resend-verify-link-form></app-resend-verify-link-form>\r\n    <app-signup-success-page></app-signup-success-page>-->\r\n</div>\r\n","import { Component, Input} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-design-one',\r\n  templateUrl: './design-one.component.html',\r\n  styleUrls: ['./design-one.component.scss'],\r\n})\r\nexport class DesignOneComponent{\r\n  @Input() logo: any;\r\n}","<div class=\"authlite-d1\">\r\n  <div class=\"authlite-d1__left\"></div>\r\n  <div class=\"authlite-d1__right\">\r\n    <lib-main-form></lib-main-form>\r\n  </div>\r\n</div>","\r\nimport { Component, Input} from '@angular/core';\r\nimport { TranslationDictionary, TranslationName, getTranslation } from '../types/TranslationDictionaryType';\r\n\r\n@Component({\r\n  selector: 'lib-login',\r\n  templateUrl: './login-wrapper.component.html',\r\n  styleUrls: ['./style.css'],\r\n})\r\n\r\nexport class LoginWrapperComponent{\r\n  @Input() translationDictionary!: TranslationDictionary;\r\n  @Input() signinGreetingTitle!: string;\r\n  @Input() signinGreetingSubtitle!: string;\r\n  @Input() signinFormLabelUsername!: string;\r\n  @Input() signinFormLabelPassword!: string;\r\n  @Input() signupGreetingTitle!: string;\r\n  @Input() signupGreetingSubtitle!: string;\r\n  @Input() signupFormLabelGivenname!: string;\r\n  @Input() signupFormLabelFamilyname!: string;\r\n  @Input() signupFormLabelEmail!: string;\r\n  @Input() signupFormLabelPassword!: string;\r\n  @Input() signupFormLabelRetypePassword!: string;\r\n  @Input() forgotPasswordGreetingTitle!: string;\r\n  @Input() forgotPasswordGreetingSubtitle!: string;\r\n  @Input() forgotPasswordFormLabelEmail!: string;\r\n  @Input() resendVerifyLinkFormGreetingTitle!:string;\r\n  @Input() resendVerifyLinkFormGreetingSubtitle!: string;\r\n  @Input() resendVerifyLinkFormLabelEmail!:string;\r\n  @Input() heading: string = '';\r\n  @Input() children: any;\r\n}\r\n","<div class=\"authlite-login\">\r\n  <lib-design-one></lib-design-one>\r\n</div>","import { CommonModule } from '@angular/common';\r\nimport { NgModule} from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n//import { AppRoutingModule } from '../../../../src/app/app-routing.module';\r\nimport { AuthliteFormsWidgetsComponent } from './authlite-forms-widgets.component';\r\nimport { SigninFormComponent } from './signinForm/signin-form.component';\r\nimport { SignupFormComponent } from './SignupForm/signup-form.component';\r\nimport { ForgotPasswordFormComponent } from './ForgotPasswordForm/forgot-password-form.component';\r\nimport { ResendVerifyLinkFormComponent } from './ResendVerifyLinkForm/resend-verify-link-form.component';\r\nimport { SignupSuccessPageComponent } from './SignupSuccessPage/signup-success-page.component';\r\nimport { CheckboxComponent } from './ui/checkbox/checkbox.component';\r\nimport { TaglineComponent } from './Tagline/tagline.component';\r\nimport { FormElementMessageComponent } from './shared/FormElementMessage/form-element-message.component';\r\nimport { MainFormComponent } from './login/MainForm/main-form.component';\r\nimport { DesignOneComponent } from './login/DesignOne/design-one.component';\r\nimport { LoginWrapperComponent } from './login/login-wrapper.component';\r\nimport { LogoComponent } from './Logo/logo.component';\r\nimport { HeaderComponent } from './Header/header.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AuthliteFormsWidgetsComponent,\r\n    SigninFormComponent,\r\n    SignupFormComponent,\r\n    ForgotPasswordFormComponent,\r\n    ResendVerifyLinkFormComponent,\r\n    SignupSuccessPageComponent,\r\n    CheckboxComponent,\r\n    TaglineComponent,\r\n    FormElementMessageComponent,\r\n    LogoComponent,\r\n    MainFormComponent,\r\n    DesignOneComponent,\r\n    LoginWrapperComponent,\r\n    HeaderComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    //AppRoutingModule\r\n    \r\n  ],\r\n  exports:[\r\n    AuthliteFormsWidgetsComponent,\r\n    SigninFormComponent,\r\n    SignupFormComponent,\r\n    ForgotPasswordFormComponent,\r\n    ResendVerifyLinkFormComponent,\r\n    SignupSuccessPageComponent,\r\n    CheckboxComponent,\r\n    TaglineComponent,\r\n    FormElementMessageComponent,\r\n    LogoComponent,\r\n    MainFormComponent,\r\n    DesignOneComponent,\r\n    LoginWrapperComponent,\r\n    HeaderComponent\r\n  ]\r\n})\r\nexport class AuthliteFormsWidgetsModule { }\r\n","/*\r\n * Public API Surface of authlite-forms-widgets\r\n */\r\n\r\nexport * from './lib/authlite-forms-widgets.service';\r\nexport * from './lib/authlite-forms-widgets.component';\r\nexport * from './lib/authlite-forms-widgets.module';\r\nexport * from './lib/signinForm/signin-form.component';\r\nexport * from './lib/Logo/logo.component';\r\nexport * from './lib/Tagline/tagline.component';\r\nexport * from './lib/shared/FormElementMessage/form-element-message.component';\r\nexport * from './lib/Header/header.component';\r\nexport * from './lib/ui/checkbox/checkbox.component';\r\nexport * from './lib/login/DesignOne/design-one.component';\r\nexport * from './lib/login/MainForm/main-form.component';\r\nexport * from './lib/login/login-wrapper.component';\r\nexport * from './lib/types/TranslationDictionaryType';\r\nexport * from './lib/types/ThemeType';\r\nexport * from './lib/ForgotPasswordForm/forgot-password-form.component';\r\nexport * from './lib/SignupSuccessPage/signup-success-page.component';\r\nexport * from './lib/SignupForm/signup-form.component';\r\nexport * from './lib/ResendVerifyLinkForm/resend-verify-link-form.component';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["ThemeType","i3","i4.CheckboxComponent","i5.TaglineComponent","i6.FormElementMessageComponent","i2","i4.TaglineComponent","i5.FormElementMessageComponent","i3.TaglineComponent","i4.FormElementMessageComponent","i1","i1.LogoComponent","i1.SigninFormComponent","i2.HeaderComponent","i1.MainFormComponent","i1.DesignOneComponent"],"mappings":"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"}