import * as i0 from '@angular/core';
import { Injectable, Component, Input, NgModule } from '@angular/core';
import * as i2 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i1 from '@angular/forms';
import { Validators, ReactiveFormsModule, FormsModule } from '@angular/forms';
import * as i2$1 from '@angular/router';
import { RouterModule } from '@angular/router';

class AuthliteFormsWidgetsService {
    constructor() { }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: AuthliteFormsWidgetsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: AuthliteFormsWidgetsService, providedIn: 'root' }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: AuthliteFormsWidgetsService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: () => [] });

class AuthliteFormsWidgetsComponent {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: AuthliteFormsWidgetsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.2", type: AuthliteFormsWidgetsComponent, selector: "lib-authlite-forms-widgets", ngImport: i0, template: `
    <p>
      authlite-forms-widgets works!
    </p>
  `, isInline: true, styles: [""] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: AuthliteFormsWidgetsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-authlite-forms-widgets', template: `
    <p>
      authlite-forms-widgets works!
    </p>
  ` }]
        }] });

var TranslationName;
(function (TranslationName) {
    TranslationName["SIGNIN_FORM__LABEL_USERNAME"] = "SIGNIN_FORM__LABEL_USERNAME";
    TranslationName["SIGNIN_FORM__LABEL_PASSWORD"] = "SIGNIN_FORM__LABEL_PASSWORD";
    TranslationName["SIGNIN_FORM__ACTION_SIGNIN"] = "SIGNIN_FORM__ACTION_SIGNIN";
    TranslationName["SIGNIN_FORM__ACTION_CREATEACCOUNT"] = "SIGNIN_FORM__ACTION_CREATEACCOUNT";
    TranslationName["SIGNIN_FORM__ACTION_FORGOTPASSWORD"] = "SIGNIN_FORM__ACTION_FORGOTPASSWORD";
    TranslationName["SIGNIN_FORM__MESSAGE_NO_ACCOUNT"] = "SIGNIN_FORM__MESSAGE_NO_ACCOUNT";
    TranslationName["SIGNIN_ERROR__BAD_REQUEST"] = "SIGNIN_ERROR__BAD_REQUEST";
    TranslationName["SIGNIN_ERROR__BLANK_PASSWORD"] = "SIGNIN_ERROR__BLANK_PASSWORD";
    TranslationName["SIGNIN_ERROR__BLANK_USERNAME"] = "SIGNIN_ERROR__BLANK_USERNAME";
    TranslationName["SIGNIN_ERROR__INVALID_USERNAME"] = "SIGNIN_ERROR__INVALID_USERNAME";
    TranslationName["SIGNIN_ERROR__EMAIL_NOT_VERIFIED"] = "SIGNIN_ERROR__EMAIL_NOT_VERIFIED";
    TranslationName["SIGNIN_ERROR__INCORRECT_PASSWORD"] = "SIGNIN_ERROR__INCORRECT_PASSWORD";
    TranslationName["SIGNIN_ERROR__UNKNOWN_ERROR"] = "SIGNIN_ERROR__UNKNOWN_ERROR";
    TranslationName["SIGNIN_ERROR__USER_NOT_FOUND"] = "SIGNIN_ERROR__USER_NOT_FOUND";
    TranslationName["SIGNUP_FORM__LABEL_GIVENNAME"] = "SIGNUP_FORM__LABEL_GIVENNAME";
    TranslationName["SIGNUP_FORM__LABEL_FAMILYNAME"] = "SIGNUP_FORM__LABEL_FAMILYNAME";
    TranslationName["SIGNUP_FORM__LABEL_EMAIL"] = "SIGNUP_FORM__LABEL_EMAIL";
    TranslationName["SIGNUP_FORM__LABEL_PASSWORD"] = "SIGNUP_FORM__LABEL_PASSWORD";
    TranslationName["SIGNUP_FORM__LABEL_RETYPEPASSWORD"] = "SIGNUP_FORM__LABEL_RETYPEPASSWORD";
    TranslationName["SIGNUP_FORM__ACTION_CREATEACCOUNT"] = "SIGNUP_FORM__ACTION_CREATEACCOUNT";
    TranslationName["SIGNUP_FORM__ACTION_SIGNIN"] = "SIGNUP_FORM__ACTION_SIGNIN";
    TranslationName["SIGNUP_FORM__MESSAGE_EXISTING_ACCOUNT"] = "SIGNUP_FORM__MESSAGE_EXISTING_ACCOUNT";
    TranslationName["SIGNUP_ERROR__BLANK_PASSWORD"] = "SIGNUP_ERROR__BLANK_PASSWORD";
    TranslationName["SIGNUP_ERROR__BLANK_USERNAME"] = "SIGNUP_ERROR__BLANK_USERNAME";
    TranslationName["SIGNUP_ERROR__INVALID_USERNAME"] = "SIGNUP_ERROR__INVALID_USERNAME";
    TranslationName["SIGNUP_ERROR__BLANK_FAMILYNAME"] = "SIGNUP_ERROR__BLANK_FAMILYNAME";
    TranslationName["SIGNUP_ERROR__BLANK_GIVENNAME"] = "SIGNUP_ERROR__BLANK_GIVENNAME";
    TranslationName["SIGNUP_ERROR__BLANK_RETYPEPASSWORD"] = "SIGNUP_ERROR__BLANK_RETYPEPASSWORD";
    TranslationName["SIGNUP_ERROR__PASSWORDS_DO_NOT_MATCH"] = "SIGNUP_ERROR__PASSWORDS_DO_NOT_MATCH";
    TranslationName["SIGNUP_ERROR__USER_ALREADY_EXISTS"] = "SIGNUP_ERROR__USER_ALREADY_EXISTS";
    TranslationName["SIGNUP_ERROR__BAD_REQUEST"] = "SIGNUP_ERROR__BAD_REQUEST";
    TranslationName["SIGNUP_ERROR__UNKNOWN_ERROR"] = "SIGNUP_ERROR__UNKNOWN_ERROR";
    TranslationName["RESEND_VERIFY_LINK_FORM__LABEL_EMAIL"] = "RESEND_VERIFY_LINK_FORM__LABEL_EMAIL";
    TranslationName["RESEND_VERIFY_LINK_FORM__MESSAGE_ALREADY_VERIFIED"] = "RESEND_VERIFY_LINK_FORM__MESSAGE_ALREADY_VERIFIED";
    TranslationName["RESEND_VERIFY_LINK_FORM__ACTION_SEND"] = "RESEND_VERIFY_LINK_FORM__ACTION_SEND";
    TranslationName["RESEND_VERIFY_LINK_FORM__ACTION_SIGNIN"] = "RESEND_VERIFY_LINK_FORM__ACTION_SIGNIN";
    TranslationName["RESEND_VERIFY_LINK_ERROR__BLANK_USERNAME"] = "RESEND_VERIFY_LINK_ERROR__BLANK_USERNAME";
    TranslationName["RESEND_VERIFY_LINK_ERROR__USER_NOT_FOUND"] = "RESEND_VERIFY_LINK_ERROR__USER_NOT_FOUND";
    TranslationName["RESEND_VERIFY_LINK_ERROR__INVALID_USERNAME"] = "RESEND_VERIFY_LINK_ERROR__INVALID_USERNAME";
    TranslationName["RESEND_VERIFY_LINK_ERROR__BAD_REQUEST"] = "RESEND_VERIFY_LINK_ERROR__BAD_REQUEST";
    TranslationName["RESEND_VERIFY_LINK_ERROR__UNKNOWN_ERROR"] = "RESEND_VERIFY_LINK_ERROR__UNKNOWN_ERROR";
    TranslationName["FORGOT_PASSWORD_FORM__LABEL_EMAIL"] = "FORGOT_PASSWORD_FORM__LABEL_EMAIL";
    TranslationName["FORGOT_PASSWORD_FORM__ACTION_SEND"] = "FORGOT_PASSWORD_FORM__ACTION_SEND";
    TranslationName["FORGOT_PASSWORD_FORM__ACTION_SIGNIN"] = "FORGOT_PASSWORD_FORM__ACTION_SIGNIN";
    TranslationName["FORGOT_PASSWORD_FORM__MESSAGE_REMEMBER_PASSWORD"] = "FORGOT_PASSWORD_FORM__MESSAGE_REMEMBER_PASSWORD";
    TranslationName["FORGOT_PASSWORD_ERROR__BLANK_USERNAME"] = "FORGOT_PASSWORD_ERROR__BLANK_USERNAME";
    TranslationName["FORGOT_PASSWORD_ERROR__USER_NOT_FOUND"] = "FORGOT_PASSWORD_ERROR__USER_NOT_FOUND";
    TranslationName["FORGOT_PASSWORD_ERROR__INVALID_USERNAME"] = "FORGOT_PASSWORD_ERROR__INVALID_USERNAME";
    TranslationName["FORGOT_PASSWORD_ERROR__BAD_REQUEST"] = "FORGOT_PASSWORD_ERROR__BAD_REQUEST";
    TranslationName["FORGOT_PASSWORD_ERROR__UNKNOWN_ERROR"] = "FORGOT_PASSWORD_ERROR__UNKNOWN_ERROR";
})(TranslationName || (TranslationName = {}));
const DEFAULT_TRANSLATION_DICTIONARY = {
    SIGNIN_FORM__LABEL_USERNAME: "Username Or Email Address",
    SIGNIN_FORM__LABEL_PASSWORD: "Password",
    SIGNIN_FORM__ACTION_SIGNIN: "Sign in",
    SIGNIN_FORM__ACTION_CREATEACCOUNT: "Create account",
    SIGNIN_FORM__ACTION_FORGOTPASSWORD: "Forgot Password?",
    SIGNIN_FORM__MESSAGE_NO_ACCOUNT: "Don't have an account?",
    SIGNIN_FORM__GREETING_TITLE: "Hello again!!",
    SIGNIN_FORM__GREETING_SUBTITLE: "Metus dui sapien phasellus arcu posuere eu adipiscing proin adipiscing mi luctus dignissim sem. hendrerit dapibus ut scelerisque tellus malesuada scelerisque vel est fermentum nullam sociosqu.",
    SIGNIN_ERROR__BAD_REQUEST: "Bad request",
    SIGNIN_ERROR__BLANK_PASSWORD: "Password is empty",
    SIGNIN_ERROR__BLANK_USERNAME: "Username is empty",
    SIGNIN_ERROR__INVALID_USERNAME: "Email is not valid",
    SIGNIN_ERROR__EMAIL_NOT_VERIFIED: "Email verification pending",
    SIGNIN_ERROR__INCORRECT_PASSWORD: "Password is incorrect",
    SIGNIN_ERROR__UNKNOWN_ERROR: "Unknown error",
    SIGNIN_ERROR__USER_NOT_FOUND: "Username does not exist",
    SIGNUP_FORM__LABEL_GIVENNAME: "Given name",
    SIGNUP_FORM__LABEL_FAMILYNAME: "Family name",
    SIGNUP_FORM__LABEL_EMAIL: "Username Or Email Address",
    SIGNUP_FORM__LABEL_PASSWORD: "Password",
    SIGNUP_FORM__LABEL_RETYPEPASSWORD: "Retype Password",
    SIGNUP_FORM__ACTION_CREATEACCOUNT: "Create account",
    SIGNUP_FORM__ACTION_SIGNIN: "Sign in",
    SIGNUP_FORM__MESSAGE_EXISTING_ACCOUNT: "Already have an account?",
    SIGNUP_FORM__GREETING_TITLE: "Join Auth lite",
    SIGNUP_FORM__GREETING_SUBTITLE: "Join the community of secure authentication and authorization providers.",
    SIGNUP_ERROR__BLANK_PASSWORD: "Password is empty",
    SIGNUP_ERROR__BLANK_USERNAME: "Username is empty",
    SIGNUP_ERROR__INVALID_USERNAME: "Email is not valid",
    SIGNUP_ERROR__BLANK_FAMILYNAME: "Family name is empty",
    SIGNUP_ERROR__BLANK_GIVENNAME: "Given name is empty",
    SIGNUP_ERROR__BLANK_RETYPEPASSWORD: "Retype password is empty",
    SIGNUP_ERROR__PASSWORDS_DO_NOT_MATCH: "Passwords do not match",
    SIGNUP_ERROR__USER_ALREADY_EXISTS: "Email is already taken",
    SIGNUP_ERROR__BAD_REQUEST: "Bad request",
    SIGNUP_ERROR__UNKNOWN_ERROR: "Unknown error",
    RESEND_VERIFY_LINK_FORM__LABEL_EMAIL: "Email Address",
    RESEND_VERIFY_LINK_FORM__ACTION_SEND: "Resend verification link",
    RESEND_VERIFY_LINK_FORM__ACTION_SIGNIN: "Sign in now",
    RESEND_VERIFY_LINK_FORM__MESSAGE_ALREADY_VERIFIED: "Already verified?",
    RESEND_VERIFY_LINK_FORM__GREETING_TITLE: "Email confirmation link",
    RESEND_VERIFY_LINK_FORM__GREETING_SUBTITLE: "Haven't received a confirmation link to confirm your user account? Enter your registered email address and we will send you another email confirmation link.",
    RESEND_VERIFY_LINK_ERROR__BLANK_USERNAME: "Username is empty",
    RESEND_VERIFY_LINK_ERROR__USER_NOT_FOUND: "User does not exist",
    RESEND_VERIFY_LINK_ERROR__INVALID_USERNAME: "Email is not valid",
    RESEND_VERIFY_LINK_ERROR__BAD_REQUEST: "Bad request",
    RESEND_VERIFY_LINK_ERROR__UNKNOWN_ERROR: "Unknown error",
    FORGOT_PASSWORD_FORM__LABEL_EMAIL: "Email Address",
    FORGOT_PASSWORD_FORM__ACTION_SEND: "Send password reset email",
    FORGOT_PASSWORD_FORM__ACTION_SIGNIN: "Sign in",
    FORGOT_PASSWORD_FORM__MESSAGE_REMEMBER_PASSWORD: "Remember password?",
    FORGOT_PASSWORD_FORM__GREETING_TITLE: "Password reset",
    FORGOT_PASSWORD_FORM__GREETING_SUBTITLE: "Enter your registered email address and we will send you a password reset link.",
    FORGOT_PASSWORD_ERROR__BLANK_USERNAME: "Username is empty",
    FORGOT_PASSWORD_ERROR__USER_NOT_FOUND: "User does not exist",
    FORGOT_PASSWORD_ERROR__INVALID_USERNAME: "Email is not valid",
    FORGOT_PASSWORD_ERROR__BAD_REQUEST: "Bad request",
    FORGOT_PASSWORD_ERROR__UNKNOWN_ERROR: "Unknown error"
};
const getTranslation = (name, dictionary) => {
    return (dictionary || DEFAULT_TRANSLATION_DICTIONARY)[name];
};

var ThemeType;
(function (ThemeType) {
    ThemeType["default"] = "default";
    ThemeType["primary"] = "primary";
    ThemeType["secondary"] = "secondary";
    ThemeType["success"] = "success";
    ThemeType["warning"] = "warning";
    ThemeType["danger"] = "danger";
})(ThemeType || (ThemeType = {}));
var ThemeType$1 = ThemeType;

class CheckboxComponent {
    constructor() {
        this.theme = ThemeType$1.default;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: CheckboxComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.2", type: CheckboxComponent, selector: "lib-checkbox", inputs: { theme: "theme" }, ngImport: i0, template: "\r\n  <label class=\"authlite-checkbox\" [class.authlite-checkbox--theme-default]=\"theme === 'default'\">\r\n    <input class=\"authlite-checkbox__input\" type=\"checkbox\"/>\r\n    <span class=\"authlite-checkbox__span\">Remember me</span>\r\n  </label>", styles: ["*{--theme-color-primary: #107cc4;--theme-color-primary-alt: #219ef1;--theme-color-grey: #4c4c4c}*{--theme-black-900: #020202;--theme-black-800: #080808;--theme-black-700: #0e0e0e;--theme-black-600: #141414;--theme-black-500: #1a1a1a;--theme-black-400: #202020;--theme-black-300: #262626;--theme-black-200: #2c2c2c;--theme-black-100: #323232;--theme-black-50: #383838;--theme-black-900i: #fff;--theme-black-800i: #fff;--theme-black-700i: #fff;--theme-black-600i: #fff;--theme-black-500i: #fff;--theme-black-400i: #fff;--theme-black-300i: #fff;--theme-black-200i: #fff;--theme-black-100i: #fff;--theme-black-50i: #fff}*{--theme-white-900: #c6c6c6;--theme-white-800: #cccccc;--theme-white-700: #d2d2d2;--theme-white-600: #d8d8d8;--theme-white-500: #dedede;--theme-white-400: #e4e4e4;--theme-white-300: #eaeaea;--theme-white-200: #f0f0f0;--theme-white-100: #f6f6f6;--theme-white-50: #fcfcfc;--theme-white-900i: #000;--theme-white-800i: #000;--theme-white-700i: #000;--theme-white-600i: #000;--theme-white-500i: #000;--theme-white-400i: #000;--theme-white-300i: #000;--theme-white-200i: #000;--theme-white-100i: #000;--theme-white-50i: #000}*{--theme-black-extended-900: #3e3e3e;--theme-black-extended-800: #444444;--theme-black-extended-700: #4a4a4a;--theme-black-extended-600: #505050;--theme-black-extended-500: #565656;--theme-black-extended-400: #5c5c5c;--theme-black-extended-300: #626262;--theme-black-extended-200: #686868;--theme-black-extended-100: #6e6e6e;--theme-black-extended-50: #747474;--theme-black-extended-900i: #fff;--theme-black-extended-800i: #fff;--theme-black-extended-700i: #fff;--theme-black-extended-600i: #fff;--theme-black-extended-500i: #fff;--theme-black-extended-400i: #fff;--theme-black-extended-300i: #fff;--theme-black-extended-200i: #fff;--theme-black-extended-100i: #fff;--theme-black-extended-50i: #fff}*{--theme-white-extended-900: #8a8a8a;--theme-white-extended-800: #909090;--theme-white-extended-700: #969696;--theme-white-extended-600: #9c9c9c;--theme-white-extended-500: #a2a2a2;--theme-white-extended-400: #a8a8a8;--theme-white-extended-300: #aeaeae;--theme-white-extended-200: #b4b4b4;--theme-white-extended-100: #bababa;--theme-white-extended-50: #c0c0c0;--theme-white-extended-900i: #000;--theme-white-extended-800i: #000;--theme-white-extended-700i: #000;--theme-white-extended-600i: #000;--theme-white-extended-500i: #000;--theme-white-extended-400i: #000;--theme-white-extended-300i: #000;--theme-white-extended-200i: #000;--theme-white-extended-100i: #000;--theme-white-extended-50i: #000}.authlite-light{color:var(--theme-black-900)}.authlite-dark{color:var(--theme-white-50)}.authlite-input{padding:10px;text-overflow:ellipsis;font-size:14px;font-weight:400;height:40px;width:100%;line-height:24px;background-color:#f8f8f8;border:1px solid #e3e3e3;border-radius:4px;outline:none;transition:background-color .25s ease-in-out,border-color .25s ease-in-out}.authlite-input:focus{border-color:var(--theme-color-primary-alt)}.authlite-button-as-link,.authlite-button,.authlite-primary-button{padding:0 20px;font-size:14px;font-weight:400;outline:none;border:none;cursor:pointer;transition:background-color .25s ease-in-out,color .25s ease-in-out,border-color .25s ease-in-out}.authlite-button,.authlite-primary-button{height:40px;line-height:24px;border-radius:4px;background-color:#e4e4e4;color:#000}.authlite-button:hover,.authlite-button:focus{background-color:#d7d7d7}.authlite-primary-button{background-color:var(--theme-color-primary-alt);color:#fff}.authlite-primary-button:hover,.authlite-primary-button:focus{background-color:var(--theme-color-primary);color:#fff}.authlite-button-as-link{background-color:transparent;border:none;outline:none;cursor:pointer;padding:0 0 2px;color:var(--theme-color-grey);border-bottom:1px dotted transparent;border-bottom:1px dotted var(--theme-color-grey)}.authlite-button-as-link:hover,.authlite-button-as-link:focus{color:var(--theme-color-primary);border-color:var(--theme-color-primary)}.authlite-form-element-error,.authlite-form-element-warning,.authlite-form-element-success,.authlite-form-element-info{margin-top:4px;font-size:10px;color:#cc2936}.authlite-form-element-warning{color:#ffd25a}.authlite-form-element-success{color:#86cd82}.authlite-form-element-info,.authlite-dark .authlite-form-element-info{color:#666b6a}.authlite-form-element-label{display:block;font-size:12px;margin-bottom:4px;text-transform:capitalize;word-break:keep-all;color:#666b6a}a{transition:.25s color ease-in-out,.25s border-color ease-in-out;cursor:pointer}a,a:hover,a:focus,a:active{text-decoration:none}a{color:var(--theme-color-primary);border-bottom:1px dotted transparent}a:hover,a:focus{color:var(--theme-color-primary-alt);border-color:var(--theme-color-primary-alt)}html{font-size:100%;font-size:14px}body{line-height:1.5}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6{margin-top:0;margin-bottom:.5rem;line-height:1.3}p,.p{margin-top:0;margin-bottom:1rem;font-size:1rem}h1,.h1{font-size:3.052rem}h2,.h2{font-size:2.441rem}h3,.h3{font-size:1.953rem}h4,.h4{font-size:1.563rem}h5,.h5{font-size:1.25rem}h6,.h6{font-size:1rem;font-weight:400}small,.small{font-size:.8rem}b,strong{font-weight:700}mark,.mark{background-color:#fae5c2}.authlite-margin-top{margin-top:20px}.authlite-margin-top-small{margin-top:10px}.authlite-action-bar,.authlite-action-bar-center{display:grid;grid-auto-flow:column;align-items:center;column-gap:10px}.authlite-action-bar-center{justify-content:center}*{box-sizing:border-box}*{--authlite-checkbox-height: 20px;--authlite-checkbox-label-offset: 6px;--authlite-checkbox-font-size: var(--authlite-formelement-font-size);--authlite-checkbox-font-weight: var(--authlite-formelement-font-weight);--authlite-checkbox-border-radius: 2px;--authlite-checkbox-border-thickness: 1px;--authlite-checkbox-background-color: none;--authlite-checkbox-checkmark-width: 6px;--authlite-checkbox-checkmark-height: 12px;--authlite-checkbox-checkmark-offset-left: 6.2px;--authlite-checkbox-checkmark-offset-bottom: -1px}*{--authlite-checkbox-background-color: none}.authlite-checkbox--theme-default,.authlite-radio--theme-default{--authlite-checkbox-border-color: var(--theme-white-extended-500);--authlite-checkbox-checkmark-color: var(--theme-black-500);--authlite-checkbox-background-color-hover: var(--theme-default-transparent-100);--authlite-checkbox-border-color-hover: var(--theme-white-extended-500);--authlite-checkbox-background-color-checked: transparent;--authlite-checkbox-border-color-checked: var(--theme-white-extended-500)}.authlite-checkbox{cursor:pointer;position:relative;display:inline-block;vertical-align:middle}.authlite-checkbox__input{margin:0;padding:0;appearance:none;width:var(--authlite-checkbox-height);height:var(--authlite-checkbox-height);border:var(--authlite-checkbox-border-thickness) solid var(--authlite-checkbox-border-color);background-color:var(--authlite-checkbox-background-color);outline:0;cursor:pointer;border-radius:var(--authlite-checkbox-border-radius);display:inline-block;vertical-align:middle;transition:.25s border-color ease-in-out,.25s background-color ease-in-out,.25s color ease-in-out}.authlite-checkbox__input:checked{background-color:var(--authlite-checkbox-background-color-checked);border-color:var(--authlite-checkbox-border-color-checked)}.authlite-checkbox__input:hover,.authlite-checkbox__input:focus,.authlite-checkbox__input:checked:hover,.authlite-checkbox__input:checked:focus{background-color:var(--authlite-checkbox-background-color-hover);border-color:var(--authlite-checkbox-border-color-hover)}.authlite-checkbox__input:checked:after{content:\"\";display:block;position:relative;width:var(--authlite-checkbox-checkmark-width);height:var(--authlite-checkbox-checkmark-height);border-bottom:1px solid var(--authlite-checkbox-checkmark-color);border-right:1px solid var(--authlite-checkbox-checkmark-color);left:var(--authlite-checkbox-checkmark-offset-left);bottom:var(--authlite-checkbox-checkmark-offset-bottom);transform:rotate(40deg)}.authlite-checkbox__span{font-size:14px;font-weight:var(--authlite-checkbox-font-weight);margin-left:var(--authlite-checkbox-label-offset)}\n"] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: CheckboxComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-checkbox', template: "\r\n  <label class=\"authlite-checkbox\" [class.authlite-checkbox--theme-default]=\"theme === 'default'\">\r\n    <input class=\"authlite-checkbox__input\" type=\"checkbox\"/>\r\n    <span class=\"authlite-checkbox__span\">Remember me</span>\r\n  </label>", styles: ["*{--theme-color-primary: #107cc4;--theme-color-primary-alt: #219ef1;--theme-color-grey: #4c4c4c}*{--theme-black-900: #020202;--theme-black-800: #080808;--theme-black-700: #0e0e0e;--theme-black-600: #141414;--theme-black-500: #1a1a1a;--theme-black-400: #202020;--theme-black-300: #262626;--theme-black-200: #2c2c2c;--theme-black-100: #323232;--theme-black-50: #383838;--theme-black-900i: #fff;--theme-black-800i: #fff;--theme-black-700i: #fff;--theme-black-600i: #fff;--theme-black-500i: #fff;--theme-black-400i: #fff;--theme-black-300i: #fff;--theme-black-200i: #fff;--theme-black-100i: #fff;--theme-black-50i: #fff}*{--theme-white-900: #c6c6c6;--theme-white-800: #cccccc;--theme-white-700: #d2d2d2;--theme-white-600: #d8d8d8;--theme-white-500: #dedede;--theme-white-400: #e4e4e4;--theme-white-300: #eaeaea;--theme-white-200: #f0f0f0;--theme-white-100: #f6f6f6;--theme-white-50: #fcfcfc;--theme-white-900i: #000;--theme-white-800i: #000;--theme-white-700i: #000;--theme-white-600i: #000;--theme-white-500i: #000;--theme-white-400i: #000;--theme-white-300i: #000;--theme-white-200i: #000;--theme-white-100i: #000;--theme-white-50i: #000}*{--theme-black-extended-900: #3e3e3e;--theme-black-extended-800: #444444;--theme-black-extended-700: #4a4a4a;--theme-black-extended-600: #505050;--theme-black-extended-500: #565656;--theme-black-extended-400: #5c5c5c;--theme-black-extended-300: #626262;--theme-black-extended-200: #686868;--theme-black-extended-100: #6e6e6e;--theme-black-extended-50: #747474;--theme-black-extended-900i: #fff;--theme-black-extended-800i: #fff;--theme-black-extended-700i: #fff;--theme-black-extended-600i: #fff;--theme-black-extended-500i: #fff;--theme-black-extended-400i: #fff;--theme-black-extended-300i: #fff;--theme-black-extended-200i: #fff;--theme-black-extended-100i: #fff;--theme-black-extended-50i: #fff}*{--theme-white-extended-900: #8a8a8a;--theme-white-extended-800: #909090;--theme-white-extended-700: #969696;--theme-white-extended-600: #9c9c9c;--theme-white-extended-500: #a2a2a2;--theme-white-extended-400: #a8a8a8;--theme-white-extended-300: #aeaeae;--theme-white-extended-200: #b4b4b4;--theme-white-extended-100: #bababa;--theme-white-extended-50: #c0c0c0;--theme-white-extended-900i: #000;--theme-white-extended-800i: #000;--theme-white-extended-700i: #000;--theme-white-extended-600i: #000;--theme-white-extended-500i: #000;--theme-white-extended-400i: #000;--theme-white-extended-300i: #000;--theme-white-extended-200i: #000;--theme-white-extended-100i: #000;--theme-white-extended-50i: #000}.authlite-light{color:var(--theme-black-900)}.authlite-dark{color:var(--theme-white-50)}.authlite-input{padding:10px;text-overflow:ellipsis;font-size:14px;font-weight:400;height:40px;width:100%;line-height:24px;background-color:#f8f8f8;border:1px solid #e3e3e3;border-radius:4px;outline:none;transition:background-color .25s ease-in-out,border-color .25s ease-in-out}.authlite-input:focus{border-color:var(--theme-color-primary-alt)}.authlite-button-as-link,.authlite-button,.authlite-primary-button{padding:0 20px;font-size:14px;font-weight:400;outline:none;border:none;cursor:pointer;transition:background-color .25s ease-in-out,color .25s ease-in-out,border-color .25s ease-in-out}.authlite-button,.authlite-primary-button{height:40px;line-height:24px;border-radius:4px;background-color:#e4e4e4;color:#000}.authlite-button:hover,.authlite-button:focus{background-color:#d7d7d7}.authlite-primary-button{background-color:var(--theme-color-primary-alt);color:#fff}.authlite-primary-button:hover,.authlite-primary-button:focus{background-color:var(--theme-color-primary);color:#fff}.authlite-button-as-link{background-color:transparent;border:none;outline:none;cursor:pointer;padding:0 0 2px;color:var(--theme-color-grey);border-bottom:1px dotted transparent;border-bottom:1px dotted var(--theme-color-grey)}.authlite-button-as-link:hover,.authlite-button-as-link:focus{color:var(--theme-color-primary);border-color:var(--theme-color-primary)}.authlite-form-element-error,.authlite-form-element-warning,.authlite-form-element-success,.authlite-form-element-info{margin-top:4px;font-size:10px;color:#cc2936}.authlite-form-element-warning{color:#ffd25a}.authlite-form-element-success{color:#86cd82}.authlite-form-element-info,.authlite-dark .authlite-form-element-info{color:#666b6a}.authlite-form-element-label{display:block;font-size:12px;margin-bottom:4px;text-transform:capitalize;word-break:keep-all;color:#666b6a}a{transition:.25s color ease-in-out,.25s border-color ease-in-out;cursor:pointer}a,a:hover,a:focus,a:active{text-decoration:none}a{color:var(--theme-color-primary);border-bottom:1px dotted transparent}a:hover,a:focus{color:var(--theme-color-primary-alt);border-color:var(--theme-color-primary-alt)}html{font-size:100%;font-size:14px}body{line-height:1.5}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6{margin-top:0;margin-bottom:.5rem;line-height:1.3}p,.p{margin-top:0;margin-bottom:1rem;font-size:1rem}h1,.h1{font-size:3.052rem}h2,.h2{font-size:2.441rem}h3,.h3{font-size:1.953rem}h4,.h4{font-size:1.563rem}h5,.h5{font-size:1.25rem}h6,.h6{font-size:1rem;font-weight:400}small,.small{font-size:.8rem}b,strong{font-weight:700}mark,.mark{background-color:#fae5c2}.authlite-margin-top{margin-top:20px}.authlite-margin-top-small{margin-top:10px}.authlite-action-bar,.authlite-action-bar-center{display:grid;grid-auto-flow:column;align-items:center;column-gap:10px}.authlite-action-bar-center{justify-content:center}*{box-sizing:border-box}*{--authlite-checkbox-height: 20px;--authlite-checkbox-label-offset: 6px;--authlite-checkbox-font-size: var(--authlite-formelement-font-size);--authlite-checkbox-font-weight: var(--authlite-formelement-font-weight);--authlite-checkbox-border-radius: 2px;--authlite-checkbox-border-thickness: 1px;--authlite-checkbox-background-color: none;--authlite-checkbox-checkmark-width: 6px;--authlite-checkbox-checkmark-height: 12px;--authlite-checkbox-checkmark-offset-left: 6.2px;--authlite-checkbox-checkmark-offset-bottom: -1px}*{--authlite-checkbox-background-color: none}.authlite-checkbox--theme-default,.authlite-radio--theme-default{--authlite-checkbox-border-color: var(--theme-white-extended-500);--authlite-checkbox-checkmark-color: var(--theme-black-500);--authlite-checkbox-background-color-hover: var(--theme-default-transparent-100);--authlite-checkbox-border-color-hover: var(--theme-white-extended-500);--authlite-checkbox-background-color-checked: transparent;--authlite-checkbox-border-color-checked: var(--theme-white-extended-500)}.authlite-checkbox{cursor:pointer;position:relative;display:inline-block;vertical-align:middle}.authlite-checkbox__input{margin:0;padding:0;appearance:none;width:var(--authlite-checkbox-height);height:var(--authlite-checkbox-height);border:var(--authlite-checkbox-border-thickness) solid var(--authlite-checkbox-border-color);background-color:var(--authlite-checkbox-background-color);outline:0;cursor:pointer;border-radius:var(--authlite-checkbox-border-radius);display:inline-block;vertical-align:middle;transition:.25s border-color ease-in-out,.25s background-color ease-in-out,.25s color ease-in-out}.authlite-checkbox__input:checked{background-color:var(--authlite-checkbox-background-color-checked);border-color:var(--authlite-checkbox-border-color-checked)}.authlite-checkbox__input:hover,.authlite-checkbox__input:focus,.authlite-checkbox__input:checked:hover,.authlite-checkbox__input:checked:focus{background-color:var(--authlite-checkbox-background-color-hover);border-color:var(--authlite-checkbox-border-color-hover)}.authlite-checkbox__input:checked:after{content:\"\";display:block;position:relative;width:var(--authlite-checkbox-checkmark-width);height:var(--authlite-checkbox-checkmark-height);border-bottom:1px solid var(--authlite-checkbox-checkmark-color);border-right:1px solid var(--authlite-checkbox-checkmark-color);left:var(--authlite-checkbox-checkmark-offset-left);bottom:var(--authlite-checkbox-checkmark-offset-bottom);transform:rotate(40deg)}.authlite-checkbox__span{font-size:14px;font-weight:var(--authlite-checkbox-font-weight);margin-left:var(--authlite-checkbox-label-offset)}\n"] }]
        }], propDecorators: { theme: [{
                type: Input
            }] } });

class TaglineComponent {
    constructor() { }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: TaglineComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.2", type: TaglineComponent, selector: "lib-tagline", inputs: { title: "title", subtitle: "subtitle" }, ngImport: i0, template: "<div class=\"authlite-d1-tagline\">\r\n    <div class=\"authlite-d1-tagline__title\">{{title}}</div>\r\n    <div class=\"authlite-d1-tagline__subtitle\">{{subtitle}}</div>\r\n</div>", styles: [".authlite-d1-tagline{text-align:center;display:grid;grid-auto-flow:row;row-gap:6px}.authlite-d1-tagline__title{font-size:20px}.authlite-d1-tagline__subtitle{font-size:12px;opacity:.6}\n"] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: TaglineComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-tagline', template: "<div class=\"authlite-d1-tagline\">\r\n    <div class=\"authlite-d1-tagline__title\">{{title}}</div>\r\n    <div class=\"authlite-d1-tagline__subtitle\">{{subtitle}}</div>\r\n</div>", styles: [".authlite-d1-tagline{text-align:center;display:grid;grid-auto-flow:row;row-gap:6px}.authlite-d1-tagline__title{font-size:20px}.authlite-d1-tagline__subtitle{font-size:12px;opacity:.6}\n"] }]
        }], ctorParameters: () => [], propDecorators: { title: [{
                type: Input
            }], subtitle: [{
                type: Input
            }] } });

class FormElementMessageComponent {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: FormElementMessageComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.2", type: FormElementMessageComponent, selector: "lib-form-element-message", inputs: { email: "email", password: "password", given_name: "given_name", family_name: "family_name", retype_password: "retype_password", type: "type", blankUsername: "blankUsername", blankPassword: "blankPassword", invalidUsername: "invalidUsername", userNotFound: "userNotFound", incorrectPassword: "incorrectPassword", blankGivenname: "blankGivenname", blankFamilyname: "blankFamilyname", blankRetypePassword: "blankRetypePassword", RetypePasswordDoesnotmatch: "RetypePasswordDoesnotmatch" }, ngImport: i0, template: "<div class=\"authlite-form-element-label\" type=\"type\">\r\n    {{email}}\r\n    {{password}}\r\n    {{given_name}}\r\n    {{family_name}}\r\n    {{retype_password}}\r\n</div>\r\n<div class=\"authlite-form-element-error\">\r\n    {{blankUsername}}\r\n    {{blankPassword}}\r\n    {{invalidUsername}}\r\n    {{userNotFound}}\r\n    {{incorrectPassword}}\r\n    {{blankGivenname}}\r\n    {{blankFamilyname}}\r\n    {{blankRetypePassword}}\r\n    {{RetypePasswordDoesnotmatch}}\r\n</div>", styles: ["*{--theme-color-primary: #107cc4;--theme-color-primary-alt: #219ef1;--theme-color-grey: #4c4c4c}*{--theme-black-900: #020202;--theme-black-800: #080808;--theme-black-700: #0e0e0e;--theme-black-600: #141414;--theme-black-500: #1a1a1a;--theme-black-400: #202020;--theme-black-300: #262626;--theme-black-200: #2c2c2c;--theme-black-100: #323232;--theme-black-50: #383838;--theme-black-900i: #fff;--theme-black-800i: #fff;--theme-black-700i: #fff;--theme-black-600i: #fff;--theme-black-500i: #fff;--theme-black-400i: #fff;--theme-black-300i: #fff;--theme-black-200i: #fff;--theme-black-100i: #fff;--theme-black-50i: #fff}*{--theme-white-900: #c6c6c6;--theme-white-800: #cccccc;--theme-white-700: #d2d2d2;--theme-white-600: #d8d8d8;--theme-white-500: #dedede;--theme-white-400: #e4e4e4;--theme-white-300: #eaeaea;--theme-white-200: #f0f0f0;--theme-white-100: #f6f6f6;--theme-white-50: #fcfcfc;--theme-white-900i: #000;--theme-white-800i: #000;--theme-white-700i: #000;--theme-white-600i: #000;--theme-white-500i: #000;--theme-white-400i: #000;--theme-white-300i: #000;--theme-white-200i: #000;--theme-white-100i: #000;--theme-white-50i: #000}*{--theme-black-extended-900: #3e3e3e;--theme-black-extended-800: #444444;--theme-black-extended-700: #4a4a4a;--theme-black-extended-600: #505050;--theme-black-extended-500: #565656;--theme-black-extended-400: #5c5c5c;--theme-black-extended-300: #626262;--theme-black-extended-200: #686868;--theme-black-extended-100: #6e6e6e;--theme-black-extended-50: #747474;--theme-black-extended-900i: #fff;--theme-black-extended-800i: #fff;--theme-black-extended-700i: #fff;--theme-black-extended-600i: #fff;--theme-black-extended-500i: #fff;--theme-black-extended-400i: #fff;--theme-black-extended-300i: #fff;--theme-black-extended-200i: #fff;--theme-black-extended-100i: #fff;--theme-black-extended-50i: #fff}*{--theme-white-extended-900: #8a8a8a;--theme-white-extended-800: #909090;--theme-white-extended-700: #969696;--theme-white-extended-600: #9c9c9c;--theme-white-extended-500: #a2a2a2;--theme-white-extended-400: #a8a8a8;--theme-white-extended-300: #aeaeae;--theme-white-extended-200: #b4b4b4;--theme-white-extended-100: #bababa;--theme-white-extended-50: #c0c0c0;--theme-white-extended-900i: #000;--theme-white-extended-800i: #000;--theme-white-extended-700i: #000;--theme-white-extended-600i: #000;--theme-white-extended-500i: #000;--theme-white-extended-400i: #000;--theme-white-extended-300i: #000;--theme-white-extended-200i: #000;--theme-white-extended-100i: #000;--theme-white-extended-50i: #000}.authlite-light{color:var(--theme-black-900)}.authlite-dark{color:var(--theme-white-50)}.authlite-input{padding:10px;text-overflow:ellipsis;font-size:14px;font-weight:400;height:40px;width:100%;line-height:24px;background-color:#f8f8f8;border:1px solid #e3e3e3;border-radius:4px;outline:none;transition:background-color .25s ease-in-out,border-color .25s ease-in-out}.authlite-input:focus{border-color:var(--theme-color-primary-alt)}.authlite-button-as-link,.authlite-button,.authlite-primary-button{padding:0 20px;font-size:14px;font-weight:400;outline:none;border:none;cursor:pointer;transition:background-color .25s ease-in-out,color .25s ease-in-out,border-color .25s ease-in-out}.authlite-button,.authlite-primary-button{height:40px;line-height:24px;border-radius:4px;background-color:#e4e4e4;color:#000}.authlite-button:hover,.authlite-button:focus{background-color:#d7d7d7}.authlite-primary-button{background-color:var(--theme-color-primary-alt);color:#fff}.authlite-primary-button:hover,.authlite-primary-button:focus{background-color:var(--theme-color-primary);color:#fff}.authlite-button-as-link{background-color:transparent;border:none;outline:none;cursor:pointer;padding:0 0 2px;color:var(--theme-color-grey);border-bottom:1px dotted transparent;border-bottom:1px dotted var(--theme-color-grey)}.authlite-button-as-link:hover,.authlite-button-as-link:focus{color:var(--theme-color-primary);border-color:var(--theme-color-primary)}.authlite-form-element-error,.authlite-form-element-warning,.authlite-form-element-success,.authlite-form-element-info{margin-top:4px;font-size:10px;color:#cc2936}.authlite-form-element-warning{color:#ffd25a}.authlite-form-element-success{color:#86cd82}.authlite-form-element-info,.authlite-dark .authlite-form-element-info{color:#666b6a}.authlite-form-element-label{display:block;font-size:12px;margin-bottom:4px;text-transform:capitalize;word-break:keep-all;color:#666b6a}a{transition:.25s color ease-in-out,.25s border-color ease-in-out;cursor:pointer}a,a:hover,a:focus,a:active{text-decoration:none}a{color:var(--theme-color-primary);border-bottom:1px dotted transparent}a:hover,a:focus{color:var(--theme-color-primary-alt);border-color:var(--theme-color-primary-alt)}html{font-size:100%;font-size:14px}body{line-height:1.5}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6{margin-top:0;margin-bottom:.5rem;line-height:1.3}p,.p{margin-top:0;margin-bottom:1rem;font-size:1rem}h1,.h1{font-size:3.052rem}h2,.h2{font-size:2.441rem}h3,.h3{font-size:1.953rem}h4,.h4{font-size:1.563rem}h5,.h5{font-size:1.25rem}h6,.h6{font-size:1rem;font-weight:400}small,.small{font-size:.8rem}b,strong{font-weight:700}mark,.mark{background-color:#fae5c2}.authlite-margin-top{margin-top:20px}.authlite-margin-top-small{margin-top:10px}.authlite-action-bar,.authlite-action-bar-center{display:grid;grid-auto-flow:column;align-items:center;column-gap:10px}.authlite-action-bar-center{justify-content:center}*{box-sizing:border-box}\n"] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: FormElementMessageComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-form-element-message', template: "<div class=\"authlite-form-element-label\" type=\"type\">\r\n    {{email}}\r\n    {{password}}\r\n    {{given_name}}\r\n    {{family_name}}\r\n    {{retype_password}}\r\n</div>\r\n<div class=\"authlite-form-element-error\">\r\n    {{blankUsername}}\r\n    {{blankPassword}}\r\n    {{invalidUsername}}\r\n    {{userNotFound}}\r\n    {{incorrectPassword}}\r\n    {{blankGivenname}}\r\n    {{blankFamilyname}}\r\n    {{blankRetypePassword}}\r\n    {{RetypePasswordDoesnotmatch}}\r\n</div>", styles: ["*{--theme-color-primary: #107cc4;--theme-color-primary-alt: #219ef1;--theme-color-grey: #4c4c4c}*{--theme-black-900: #020202;--theme-black-800: #080808;--theme-black-700: #0e0e0e;--theme-black-600: #141414;--theme-black-500: #1a1a1a;--theme-black-400: #202020;--theme-black-300: #262626;--theme-black-200: #2c2c2c;--theme-black-100: #323232;--theme-black-50: #383838;--theme-black-900i: #fff;--theme-black-800i: #fff;--theme-black-700i: #fff;--theme-black-600i: #fff;--theme-black-500i: #fff;--theme-black-400i: #fff;--theme-black-300i: #fff;--theme-black-200i: #fff;--theme-black-100i: #fff;--theme-black-50i: #fff}*{--theme-white-900: #c6c6c6;--theme-white-800: #cccccc;--theme-white-700: #d2d2d2;--theme-white-600: #d8d8d8;--theme-white-500: #dedede;--theme-white-400: #e4e4e4;--theme-white-300: #eaeaea;--theme-white-200: #f0f0f0;--theme-white-100: #f6f6f6;--theme-white-50: #fcfcfc;--theme-white-900i: #000;--theme-white-800i: #000;--theme-white-700i: #000;--theme-white-600i: #000;--theme-white-500i: #000;--theme-white-400i: #000;--theme-white-300i: #000;--theme-white-200i: #000;--theme-white-100i: #000;--theme-white-50i: #000}*{--theme-black-extended-900: #3e3e3e;--theme-black-extended-800: #444444;--theme-black-extended-700: #4a4a4a;--theme-black-extended-600: #505050;--theme-black-extended-500: #565656;--theme-black-extended-400: #5c5c5c;--theme-black-extended-300: #626262;--theme-black-extended-200: #686868;--theme-black-extended-100: #6e6e6e;--theme-black-extended-50: #747474;--theme-black-extended-900i: #fff;--theme-black-extended-800i: #fff;--theme-black-extended-700i: #fff;--theme-black-extended-600i: #fff;--theme-black-extended-500i: #fff;--theme-black-extended-400i: #fff;--theme-black-extended-300i: #fff;--theme-black-extended-200i: #fff;--theme-black-extended-100i: #fff;--theme-black-extended-50i: #fff}*{--theme-white-extended-900: #8a8a8a;--theme-white-extended-800: #909090;--theme-white-extended-700: #969696;--theme-white-extended-600: #9c9c9c;--theme-white-extended-500: #a2a2a2;--theme-white-extended-400: #a8a8a8;--theme-white-extended-300: #aeaeae;--theme-white-extended-200: #b4b4b4;--theme-white-extended-100: #bababa;--theme-white-extended-50: #c0c0c0;--theme-white-extended-900i: #000;--theme-white-extended-800i: #000;--theme-white-extended-700i: #000;--theme-white-extended-600i: #000;--theme-white-extended-500i: #000;--theme-white-extended-400i: #000;--theme-white-extended-300i: #000;--theme-white-extended-200i: #000;--theme-white-extended-100i: #000;--theme-white-extended-50i: #000}.authlite-light{color:var(--theme-black-900)}.authlite-dark{color:var(--theme-white-50)}.authlite-input{padding:10px;text-overflow:ellipsis;font-size:14px;font-weight:400;height:40px;width:100%;line-height:24px;background-color:#f8f8f8;border:1px solid #e3e3e3;border-radius:4px;outline:none;transition:background-color .25s ease-in-out,border-color .25s ease-in-out}.authlite-input:focus{border-color:var(--theme-color-primary-alt)}.authlite-button-as-link,.authlite-button,.authlite-primary-button{padding:0 20px;font-size:14px;font-weight:400;outline:none;border:none;cursor:pointer;transition:background-color .25s ease-in-out,color .25s ease-in-out,border-color .25s ease-in-out}.authlite-button,.authlite-primary-button{height:40px;line-height:24px;border-radius:4px;background-color:#e4e4e4;color:#000}.authlite-button:hover,.authlite-button:focus{background-color:#d7d7d7}.authlite-primary-button{background-color:var(--theme-color-primary-alt);color:#fff}.authlite-primary-button:hover,.authlite-primary-button:focus{background-color:var(--theme-color-primary);color:#fff}.authlite-button-as-link{background-color:transparent;border:none;outline:none;cursor:pointer;padding:0 0 2px;color:var(--theme-color-grey);border-bottom:1px dotted transparent;border-bottom:1px dotted var(--theme-color-grey)}.authlite-button-as-link:hover,.authlite-button-as-link:focus{color:var(--theme-color-primary);border-color:var(--theme-color-primary)}.authlite-form-element-error,.authlite-form-element-warning,.authlite-form-element-success,.authlite-form-element-info{margin-top:4px;font-size:10px;color:#cc2936}.authlite-form-element-warning{color:#ffd25a}.authlite-form-element-success{color:#86cd82}.authlite-form-element-info,.authlite-dark .authlite-form-element-info{color:#666b6a}.authlite-form-element-label{display:block;font-size:12px;margin-bottom:4px;text-transform:capitalize;word-break:keep-all;color:#666b6a}a{transition:.25s color ease-in-out,.25s border-color ease-in-out;cursor:pointer}a,a:hover,a:focus,a:active{text-decoration:none}a{color:var(--theme-color-primary);border-bottom:1px dotted transparent}a:hover,a:focus{color:var(--theme-color-primary-alt);border-color:var(--theme-color-primary-alt)}html{font-size:100%;font-size:14px}body{line-height:1.5}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6{margin-top:0;margin-bottom:.5rem;line-height:1.3}p,.p{margin-top:0;margin-bottom:1rem;font-size:1rem}h1,.h1{font-size:3.052rem}h2,.h2{font-size:2.441rem}h3,.h3{font-size:1.953rem}h4,.h4{font-size:1.563rem}h5,.h5{font-size:1.25rem}h6,.h6{font-size:1rem;font-weight:400}small,.small{font-size:.8rem}b,strong{font-weight:700}mark,.mark{background-color:#fae5c2}.authlite-margin-top{margin-top:20px}.authlite-margin-top-small{margin-top:10px}.authlite-action-bar,.authlite-action-bar-center{display:grid;grid-auto-flow:column;align-items:center;column-gap:10px}.authlite-action-bar-center{justify-content:center}*{box-sizing:border-box}\n"] }]
        }], propDecorators: { email: [{
                type: Input
            }], password: [{
                type: Input
            }], given_name: [{
                type: Input
            }], family_name: [{
                type: Input
            }], retype_password: [{
                type: Input
            }], type: [{
                type: Input
            }], blankUsername: [{
                type: Input
            }], blankPassword: [{
                type: Input
            }], invalidUsername: [{
                type: Input
            }], userNotFound: [{
                type: Input
            }], incorrectPassword: [{
                type: Input
            }], blankGivenname: [{
                type: Input
            }], blankFamilyname: [{
                type: Input
            }], blankRetypePassword: [{
                type: Input
            }], RetypePasswordDoesnotmatch: [{
                type: Input
            }] } });

class SigninFormComponent {
    togglePassword() {
        this.showPassword = !this.showPassword;
    }
    constructor(fb) {
        this.fb = fb;
        this.translationDictionary = DEFAULT_TRANSLATION_DICTIONARY;
        this.showPassword = true; //password eye icon functionality
    }
    ngOnInit() {
        this.initForm();
    }
    initForm() {
        this.signinForm = this.fb.group({
            email: ['', [Validators.required, Validators.email]],
            password: ['', Validators.required],
        });
    }
    get signinGreetingTitle() {
        return this.translationDictionary.SIGNIN_FORM__GREETING_TITLE;
    }
    get signinGreetingSubtitle() {
        return this.translationDictionary.SIGNIN_FORM__GREETING_SUBTITLE;
    }
    get signinFormLabelUsername() {
        return this.translationDictionary.SIGNIN_FORM__LABEL_USERNAME;
    }
    get signinFormLabelPassword() {
        return this.translationDictionary.SIGNIN_FORM__LABEL_PASSWORD;
    }
    get signinFormUsernameErrorMessage() {
        return this.translationDictionary.SIGNIN_ERROR__BLANK_USERNAME;
    }
    get signinFormPasswordErrorMessage() {
        return this.translationDictionary.SIGNIN_ERROR__BLANK_PASSWORD;
    }
    get signinFormInvalidUsername() {
        return this.translationDictionary.SIGNIN_ERROR__INVALID_USERNAME;
    }
    get signinFormIncorrectPassword() {
        return this.translationDictionary.SIGNIN_ERROR__INCORRECT_PASSWORD;
    }
    get signinFormUserNotFound() {
        return this.translationDictionary.SIGNIN_ERROR__USER_NOT_FOUND;
    }
    onSubmit() {
        console.log('onSubmit');
        if (this.signinForm.invalid) {
            this.signinForm.markAllAsTouched();
            return;
        }
        const enteredEmail = this.signinForm.value.email;
        const enteredPassword = this.signinForm.value.password;
        if (!this.isUserExists(enteredEmail, enteredPassword)) {
            this.signinForm.setErrors({ userNotFound: true });
        }
        else {
            console.log('Login Successful', this.signinForm.value);
        }
    }
    isUserExists(email, password) {
        return false;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: SigninFormComponent, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.2", type: SigninFormComponent, selector: "lib-signin-form", inputs: { translationDictionary: "translationDictionary", translationName: "translationName" }, ngImport: i0, template: "<form class=\"authlite-signin-form\" [formGroup]=\"signinForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"authlite-margin-top\">\r\n        <lib-tagline \r\n            [title]=\"signinGreetingTitle\"\r\n            [subtitle]=\"signinGreetingSubtitle\">\r\n        </lib-tagline>\r\n    </div>\r\n    <div class=\"authlite-margin-top\">\r\n        <lib-form-element-message \r\n            [email]=\"signinFormLabelUsername\">\r\n        </lib-form-element-message>\r\n        <input class=\"authlite-input\" autoComplete=\"off\" name=\"email\" formControlName=\"email\" type=\"email\"/>\r\n        <lib-form-element-message\r\n            *ngIf=\"signinForm.controls['email'].touched && signinForm.controls['email'].hasError('required')\"\r\n            [blankUsername]=\"signinFormUsernameErrorMessage\">\r\n        </lib-form-element-message>\r\n        <lib-form-element-message\r\n            *ngIf=\"signinForm.controls['email'].touched && signinForm.controls['email'].hasError('email')\"\r\n            [invalidUsername]=\"signinFormInvalidUsername\">\r\n        </lib-form-element-message>\r\n        <lib-form-element-message\r\n            *ngIf=\"signinForm.errors?.['userNotFound']\"\r\n            [userNotFound]=\"signinFormUserNotFound\">\r\n        </lib-form-element-message>\r\n    </div>\r\n    <div class=\"authlite-margin-top\">\r\n        <lib-form-element-message \r\n            [password]=\"signinFormLabelPassword\">\r\n        </lib-form-element-message>\r\n        <div class=\"authlite-input-container\">\r\n            <input [type]=\"showPassword?'password':'text'\" id=\"passwordId\" formControlName=\"password\" class=\"authlite-input\" name=\"password\" value=\"\">\r\n            <span (click)=\"togglePassword()\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\" *ngIf=\"!showPassword\" class=\"authlite-password-hide-icon\">\r\n                    <path d=\"M320 400c-75.9 0-137.3-58.7-142.9-133.1L72.2 185.8c-13.8 17.3-26.5 35.6-36.7 55.6a32.4 32.4 0 0 0 0 29.2C89.7 376.4 197.1 448 320 448c26.9 0 52.9-4 77.9-10.5L346 397.4a144.1 144.1 0 0 1 -26 2.6zm313.8 58.1l-110.6-85.4a331.3 331.3 0 0 0 81.3-102.1 32.4 32.4 0 0 0 0-29.2C550.3 135.6 442.9 64 320 64a308.2 308.2 0 0 0 -147.3 37.7L45.5 3.4A16 16 0 0 0 23 6.2L3.4 31.5A16 16 0 0 0 6.2 53.9l588.4 454.7a16 16 0 0 0 22.5-2.8l19.6-25.3a16 16 0 0 0 -2.8-22.5zm-183.7-142l-39.3-30.4A94.8 94.8 0 0 0 416 256a94.8 94.8 0 0 0 -121.3-92.2A47.7 47.7 0 0 1 304 192a46.6 46.6 0 0 1 -1.5 10l-73.6-56.9A142.3 142.3 0 0 1 320 112a143.9 143.9 0 0 1 144 144c0 21.6-5.3 41.8-13.9 60.1z\"/>\r\n                </svg>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\" *ngIf=\"showPassword\" class=\"authlite-password-show-icon\">\r\n                    <path d=\"M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4C142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zM144 256a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-64c0 35.3-28.7 64-64 64c-7.1 0-13.9-1.2-20.3-3.3c-5.5-1.8-11.9 1.6-11.7 7.4c.3 6.9 1.3 13.8 3.2 20.7c13.7 51.2 66.4 81.6 117.6 67.9s81.6-66.4 67.9-117.6c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3z\"/>\r\n                </svg>\r\n            </span>\r\n        </div>\r\n        <lib-form-element-message \r\n            *ngIf=\"signinForm.controls['password'].touched && signinForm.controls['password'].hasError('required')\"\r\n            [blankPassword]=\"signinFormPasswordErrorMessage\">\r\n        </lib-form-element-message>\r\n        <lib-form-element-message \r\n            *ngIf=\"signinForm.errors?.['incorrectPassword']\"\r\n            [incorrectPassword]=\"signinFormIncorrectPassword\">\r\n        </lib-form-element-message>\r\n    </div>\r\n    <div class=\"authlite-signin-form__forgot authlite-margin-top-small\">\r\n        <lib-checkbox></lib-checkbox>\r\n        <a routerLink=\"/forgot-password-form\" class=\"authlite-button-as-link\">{{translationDictionary.SIGNIN_FORM__ACTION_FORGOTPASSWORD}}</a>\r\n    </div>\r\n    <div class=\"authlite-action-bar authlite-margin-top\">\r\n        <button class=\"authlite-primary-button\" type=\"submit\">{{translationDictionary.SIGNIN_FORM__ACTION_SIGNIN}}</button>\r\n    </div>\r\n    <div class=\"authlite-margin-top authlite-action-bar-center\">\r\n        {{translationDictionary.SIGNIN_FORM__MESSAGE_NO_ACCOUNT}}\r\n        <a routerLink=\"/signup-form\" class=\"authlite-button-as-link\">{{translationDictionary.SIGNIN_FORM__ACTION_CREATEACCOUNT}}</a>\r\n    </div>\r\n</form>", styles: ["*{--theme-color-primary: #107cc4;--theme-color-primary-alt: #219ef1;--theme-color-grey: #4c4c4c}*{--theme-black-900: #020202;--theme-black-800: #080808;--theme-black-700: #0e0e0e;--theme-black-600: #141414;--theme-black-500: #1a1a1a;--theme-black-400: #202020;--theme-black-300: #262626;--theme-black-200: #2c2c2c;--theme-black-100: #323232;--theme-black-50: #383838;--theme-black-900i: #fff;--theme-black-800i: #fff;--theme-black-700i: #fff;--theme-black-600i: #fff;--theme-black-500i: #fff;--theme-black-400i: #fff;--theme-black-300i: #fff;--theme-black-200i: #fff;--theme-black-100i: #fff;--theme-black-50i: #fff}*{--theme-white-900: #c6c6c6;--theme-white-800: #cccccc;--theme-white-700: #d2d2d2;--theme-white-600: #d8d8d8;--theme-white-500: #dedede;--theme-white-400: #e4e4e4;--theme-white-300: #eaeaea;--theme-white-200: #f0f0f0;--theme-white-100: #f6f6f6;--theme-white-50: #fcfcfc;--theme-white-900i: #000;--theme-white-800i: #000;--theme-white-700i: #000;--theme-white-600i: #000;--theme-white-500i: #000;--theme-white-400i: #000;--theme-white-300i: #000;--theme-white-200i: #000;--theme-white-100i: #000;--theme-white-50i: #000}*{--theme-black-extended-900: #3e3e3e;--theme-black-extended-800: #444444;--theme-black-extended-700: #4a4a4a;--theme-black-extended-600: #505050;--theme-black-extended-500: #565656;--theme-black-extended-400: #5c5c5c;--theme-black-extended-300: #626262;--theme-black-extended-200: #686868;--theme-black-extended-100: #6e6e6e;--theme-black-extended-50: #747474;--theme-black-extended-900i: #fff;--theme-black-extended-800i: #fff;--theme-black-extended-700i: #fff;--theme-black-extended-600i: #fff;--theme-black-extended-500i: #fff;--theme-black-extended-400i: #fff;--theme-black-extended-300i: #fff;--theme-black-extended-200i: #fff;--theme-black-extended-100i: #fff;--theme-black-extended-50i: #fff}*{--theme-white-extended-900: #8a8a8a;--theme-white-extended-800: #909090;--theme-white-extended-700: #969696;--theme-white-extended-600: #9c9c9c;--theme-white-extended-500: #a2a2a2;--theme-white-extended-400: #a8a8a8;--theme-white-extended-300: #aeaeae;--theme-white-extended-200: #b4b4b4;--theme-white-extended-100: #bababa;--theme-white-extended-50: #c0c0c0;--theme-white-extended-900i: #000;--theme-white-extended-800i: #000;--theme-white-extended-700i: #000;--theme-white-extended-600i: #000;--theme-white-extended-500i: #000;--theme-white-extended-400i: #000;--theme-white-extended-300i: #000;--theme-white-extended-200i: #000;--theme-white-extended-100i: #000;--theme-white-extended-50i: #000}.authlite-light{color:var(--theme-black-900)}.authlite-dark{color:var(--theme-white-50)}.authlite-input{padding:10px;text-overflow:ellipsis;font-size:14px;font-weight:400;height:40px;width:100%;line-height:24px;background-color:#f8f8f8;border:1px solid #e3e3e3;border-radius:4px;outline:none;transition:background-color .25s ease-in-out,border-color .25s ease-in-out}.authlite-input:focus{border-color:var(--theme-color-primary-alt)}.authlite-button-as-link,.authlite-button,.authlite-primary-button{padding:0 20px;font-size:14px;font-weight:400;outline:none;border:none;cursor:pointer;transition:background-color .25s ease-in-out,color .25s ease-in-out,border-color .25s ease-in-out}.authlite-button,.authlite-primary-button{height:40px;line-height:24px;border-radius:4px;background-color:#e4e4e4;color:#000}.authlite-button:hover,.authlite-button:focus{background-color:#d7d7d7}.authlite-primary-button{background-color:var(--theme-color-primary-alt);color:#fff}.authlite-primary-button:hover,.authlite-primary-button:focus{background-color:var(--theme-color-primary);color:#fff}.authlite-button-as-link{background-color:transparent;border:none;outline:none;cursor:pointer;padding:0 0 2px;color:var(--theme-color-grey);border-bottom:1px dotted transparent;border-bottom:1px dotted var(--theme-color-grey)}.authlite-button-as-link:hover,.authlite-button-as-link:focus{color:var(--theme-color-primary);border-color:var(--theme-color-primary)}.authlite-form-element-error,.authlite-form-element-warning,.authlite-form-element-success,.authlite-form-element-info{margin-top:4px;font-size:10px;color:#cc2936}.authlite-form-element-warning{color:#ffd25a}.authlite-form-element-success{color:#86cd82}.authlite-form-element-info,.authlite-dark .authlite-form-element-info{color:#666b6a}.authlite-form-element-label{display:block;font-size:12px;margin-bottom:4px;text-transform:capitalize;word-break:keep-all;color:#666b6a}a{transition:.25s color ease-in-out,.25s border-color ease-in-out;cursor:pointer}a,a:hover,a:focus,a:active{text-decoration:none}a{color:var(--theme-color-primary);border-bottom:1px dotted transparent}a:hover,a:focus{color:var(--theme-color-primary-alt);border-color:var(--theme-color-primary-alt)}html{font-size:100%;font-size:14px}body{line-height:1.5}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6{margin-top:0;margin-bottom:.5rem;line-height:1.3}p,.p{margin-top:0;margin-bottom:1rem;font-size:1rem}h1,.h1{font-size:3.052rem}h2,.h2{font-size:2.441rem}h3,.h3{font-size:1.953rem}h4,.h4{font-size:1.563rem}h5,.h5{font-size:1.25rem}h6,.h6{font-size:1rem;font-weight:400}small,.small{font-size:.8rem}b,strong{font-weight:700}mark,.mark{background-color:#fae5c2}.authlite-margin-top{margin-top:20px}.authlite-margin-top-small{margin-top:10px}.authlite-action-bar,.authlite-action-bar-center{display:grid;grid-auto-flow:column;align-items:center;column-gap:10px}.authlite-action-bar-center{justify-content:center}*{box-sizing:border-box}*{font-family:Roboto,sans-serif}.authlite-signin-form{display:grid;grid-auto-flow:row;width:100%}.authlite-signin-form__forgot{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:space-between}.authlite-d1-tagline{text-align:center;display:grid;grid-auto-flow:row;row-gap:6px}.authlite-d1-tagline__title{font-size:20px}.authlite-d1-tagline__subtitle{font-size:12px;opacity:.6}.authlite-action-bar,.authlite-action-bar-center{font-size:12px}.authlite-input-container{position:relative}.authlite-input{width:100%;padding:10px;margin-bottom:10px}.authlite-password-hide-icon,.authlite-password-show-icon{position:absolute;top:40%;right:10px;transform:translateY(-50%);cursor:pointer;width:4%}.authlite-password-show-icon{width:4%}.authlite-input-container.show-password .authlite-password-hide-icon{display:none}.authlite-input-container.show-password .authlite-password-show-icon{display:block}\n"], dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i1.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "directive", type: i2$1.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "info", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "component", type: CheckboxComponent, selector: "lib-checkbox", inputs: ["theme"] }, { kind: "component", type: TaglineComponent, selector: "lib-tagline", inputs: ["title", "subtitle"] }, { kind: "component", type: FormElementMessageComponent, selector: "lib-form-element-message", inputs: ["email", "password", "given_name", "family_name", "retype_password", "type", "blankUsername", "blankPassword", "invalidUsername", "userNotFound", "incorrectPassword", "blankGivenname", "blankFamilyname", "blankRetypePassword", "RetypePasswordDoesnotmatch"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: SigninFormComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-signin-form', template: "<form class=\"authlite-signin-form\" [formGroup]=\"signinForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"authlite-margin-top\">\r\n        <lib-tagline \r\n            [title]=\"signinGreetingTitle\"\r\n            [subtitle]=\"signinGreetingSubtitle\">\r\n        </lib-tagline>\r\n    </div>\r\n    <div class=\"authlite-margin-top\">\r\n        <lib-form-element-message \r\n            [email]=\"signinFormLabelUsername\">\r\n        </lib-form-element-message>\r\n        <input class=\"authlite-input\" autoComplete=\"off\" name=\"email\" formControlName=\"email\" type=\"email\"/>\r\n        <lib-form-element-message\r\n            *ngIf=\"signinForm.controls['email'].touched && signinForm.controls['email'].hasError('required')\"\r\n            [blankUsername]=\"signinFormUsernameErrorMessage\">\r\n        </lib-form-element-message>\r\n        <lib-form-element-message\r\n            *ngIf=\"signinForm.controls['email'].touched && signinForm.controls['email'].hasError('email')\"\r\n            [invalidUsername]=\"signinFormInvalidUsername\">\r\n        </lib-form-element-message>\r\n        <lib-form-element-message\r\n            *ngIf=\"signinForm.errors?.['userNotFound']\"\r\n            [userNotFound]=\"signinFormUserNotFound\">\r\n        </lib-form-element-message>\r\n    </div>\r\n    <div class=\"authlite-margin-top\">\r\n        <lib-form-element-message \r\n            [password]=\"signinFormLabelPassword\">\r\n        </lib-form-element-message>\r\n        <div class=\"authlite-input-container\">\r\n            <input [type]=\"showPassword?'password':'text'\" id=\"passwordId\" formControlName=\"password\" class=\"authlite-input\" name=\"password\" value=\"\">\r\n            <span (click)=\"togglePassword()\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\" *ngIf=\"!showPassword\" class=\"authlite-password-hide-icon\">\r\n                    <path d=\"M320 400c-75.9 0-137.3-58.7-142.9-133.1L72.2 185.8c-13.8 17.3-26.5 35.6-36.7 55.6a32.4 32.4 0 0 0 0 29.2C89.7 376.4 197.1 448 320 448c26.9 0 52.9-4 77.9-10.5L346 397.4a144.1 144.1 0 0 1 -26 2.6zm313.8 58.1l-110.6-85.4a331.3 331.3 0 0 0 81.3-102.1 32.4 32.4 0 0 0 0-29.2C550.3 135.6 442.9 64 320 64a308.2 308.2 0 0 0 -147.3 37.7L45.5 3.4A16 16 0 0 0 23 6.2L3.4 31.5A16 16 0 0 0 6.2 53.9l588.4 454.7a16 16 0 0 0 22.5-2.8l19.6-25.3a16 16 0 0 0 -2.8-22.5zm-183.7-142l-39.3-30.4A94.8 94.8 0 0 0 416 256a94.8 94.8 0 0 0 -121.3-92.2A47.7 47.7 0 0 1 304 192a46.6 46.6 0 0 1 -1.5 10l-73.6-56.9A142.3 142.3 0 0 1 320 112a143.9 143.9 0 0 1 144 144c0 21.6-5.3 41.8-13.9 60.1z\"/>\r\n                </svg>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\" *ngIf=\"showPassword\" class=\"authlite-password-show-icon\">\r\n                    <path d=\"M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4C142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zM144 256a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-64c0 35.3-28.7 64-64 64c-7.1 0-13.9-1.2-20.3-3.3c-5.5-1.8-11.9 1.6-11.7 7.4c.3 6.9 1.3 13.8 3.2 20.7c13.7 51.2 66.4 81.6 117.6 67.9s81.6-66.4 67.9-117.6c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3z\"/>\r\n                </svg>\r\n            </span>\r\n        </div>\r\n        <lib-form-element-message \r\n            *ngIf=\"signinForm.controls['password'].touched && signinForm.controls['password'].hasError('required')\"\r\n            [blankPassword]=\"signinFormPasswordErrorMessage\">\r\n        </lib-form-element-message>\r\n        <lib-form-element-message \r\n            *ngIf=\"signinForm.errors?.['incorrectPassword']\"\r\n            [incorrectPassword]=\"signinFormIncorrectPassword\">\r\n        </lib-form-element-message>\r\n    </div>\r\n    <div class=\"authlite-signin-form__forgot authlite-margin-top-small\">\r\n        <lib-checkbox></lib-checkbox>\r\n        <a routerLink=\"/forgot-password-form\" class=\"authlite-button-as-link\">{{translationDictionary.SIGNIN_FORM__ACTION_FORGOTPASSWORD}}</a>\r\n    </div>\r\n    <div class=\"authlite-action-bar authlite-margin-top\">\r\n        <button class=\"authlite-primary-button\" type=\"submit\">{{translationDictionary.SIGNIN_FORM__ACTION_SIGNIN}}</button>\r\n    </div>\r\n    <div class=\"authlite-margin-top authlite-action-bar-center\">\r\n        {{translationDictionary.SIGNIN_FORM__MESSAGE_NO_ACCOUNT}}\r\n        <a routerLink=\"/signup-form\" class=\"authlite-button-as-link\">{{translationDictionary.SIGNIN_FORM__ACTION_CREATEACCOUNT}}</a>\r\n    </div>\r\n</form>", styles: ["*{--theme-color-primary: #107cc4;--theme-color-primary-alt: #219ef1;--theme-color-grey: #4c4c4c}*{--theme-black-900: #020202;--theme-black-800: #080808;--theme-black-700: #0e0e0e;--theme-black-600: #141414;--theme-black-500: #1a1a1a;--theme-black-400: #202020;--theme-black-300: #262626;--theme-black-200: #2c2c2c;--theme-black-100: #323232;--theme-black-50: #383838;--theme-black-900i: #fff;--theme-black-800i: #fff;--theme-black-700i: #fff;--theme-black-600i: #fff;--theme-black-500i: #fff;--theme-black-400i: #fff;--theme-black-300i: #fff;--theme-black-200i: #fff;--theme-black-100i: #fff;--theme-black-50i: #fff}*{--theme-white-900: #c6c6c6;--theme-white-800: #cccccc;--theme-white-700: #d2d2d2;--theme-white-600: #d8d8d8;--theme-white-500: #dedede;--theme-white-400: #e4e4e4;--theme-white-300: #eaeaea;--theme-white-200: #f0f0f0;--theme-white-100: #f6f6f6;--theme-white-50: #fcfcfc;--theme-white-900i: #000;--theme-white-800i: #000;--theme-white-700i: #000;--theme-white-600i: #000;--theme-white-500i: #000;--theme-white-400i: #000;--theme-white-300i: #000;--theme-white-200i: #000;--theme-white-100i: #000;--theme-white-50i: #000}*{--theme-black-extended-900: #3e3e3e;--theme-black-extended-800: #444444;--theme-black-extended-700: #4a4a4a;--theme-black-extended-600: #505050;--theme-black-extended-500: #565656;--theme-black-extended-400: #5c5c5c;--theme-black-extended-300: #626262;--theme-black-extended-200: #686868;--theme-black-extended-100: #6e6e6e;--theme-black-extended-50: #747474;--theme-black-extended-900i: #fff;--theme-black-extended-800i: #fff;--theme-black-extended-700i: #fff;--theme-black-extended-600i: #fff;--theme-black-extended-500i: #fff;--theme-black-extended-400i: #fff;--theme-black-extended-300i: #fff;--theme-black-extended-200i: #fff;--theme-black-extended-100i: #fff;--theme-black-extended-50i: #fff}*{--theme-white-extended-900: #8a8a8a;--theme-white-extended-800: #909090;--theme-white-extended-700: #969696;--theme-white-extended-600: #9c9c9c;--theme-white-extended-500: #a2a2a2;--theme-white-extended-400: #a8a8a8;--theme-white-extended-300: #aeaeae;--theme-white-extended-200: #b4b4b4;--theme-white-extended-100: #bababa;--theme-white-extended-50: #c0c0c0;--theme-white-extended-900i: #000;--theme-white-extended-800i: #000;--theme-white-extended-700i: #000;--theme-white-extended-600i: #000;--theme-white-extended-500i: #000;--theme-white-extended-400i: #000;--theme-white-extended-300i: #000;--theme-white-extended-200i: #000;--theme-white-extended-100i: #000;--theme-white-extended-50i: #000}.authlite-light{color:var(--theme-black-900)}.authlite-dark{color:var(--theme-white-50)}.authlite-input{padding:10px;text-overflow:ellipsis;font-size:14px;font-weight:400;height:40px;width:100%;line-height:24px;background-color:#f8f8f8;border:1px solid #e3e3e3;border-radius:4px;outline:none;transition:background-color .25s ease-in-out,border-color .25s ease-in-out}.authlite-input:focus{border-color:var(--theme-color-primary-alt)}.authlite-button-as-link,.authlite-button,.authlite-primary-button{padding:0 20px;font-size:14px;font-weight:400;outline:none;border:none;cursor:pointer;transition:background-color .25s ease-in-out,color .25s ease-in-out,border-color .25s ease-in-out}.authlite-button,.authlite-primary-button{height:40px;line-height:24px;border-radius:4px;background-color:#e4e4e4;color:#000}.authlite-button:hover,.authlite-button:focus{background-color:#d7d7d7}.authlite-primary-button{background-color:var(--theme-color-primary-alt);color:#fff}.authlite-primary-button:hover,.authlite-primary-button:focus{background-color:var(--theme-color-primary);color:#fff}.authlite-button-as-link{background-color:transparent;border:none;outline:none;cursor:pointer;padding:0 0 2px;color:var(--theme-color-grey);border-bottom:1px dotted transparent;border-bottom:1px dotted var(--theme-color-grey)}.authlite-button-as-link:hover,.authlite-button-as-link:focus{color:var(--theme-color-primary);border-color:var(--theme-color-primary)}.authlite-form-element-error,.authlite-form-element-warning,.authlite-form-element-success,.authlite-form-element-info{margin-top:4px;font-size:10px;color:#cc2936}.authlite-form-element-warning{color:#ffd25a}.authlite-form-element-success{color:#86cd82}.authlite-form-element-info,.authlite-dark .authlite-form-element-info{color:#666b6a}.authlite-form-element-label{display:block;font-size:12px;margin-bottom:4px;text-transform:capitalize;word-break:keep-all;color:#666b6a}a{transition:.25s color ease-in-out,.25s border-color ease-in-out;cursor:pointer}a,a:hover,a:focus,a:active{text-decoration:none}a{color:var(--theme-color-primary);border-bottom:1px dotted transparent}a:hover,a:focus{color:var(--theme-color-primary-alt);border-color:var(--theme-color-primary-alt)}html{font-size:100%;font-size:14px}body{line-height:1.5}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6{margin-top:0;margin-bottom:.5rem;line-height:1.3}p,.p{margin-top:0;margin-bottom:1rem;font-size:1rem}h1,.h1{font-size:3.052rem}h2,.h2{font-size:2.441rem}h3,.h3{font-size:1.953rem}h4,.h4{font-size:1.563rem}h5,.h5{font-size:1.25rem}h6,.h6{font-size:1rem;font-weight:400}small,.small{font-size:.8rem}b,strong{font-weight:700}mark,.mark{background-color:#fae5c2}.authlite-margin-top{margin-top:20px}.authlite-margin-top-small{margin-top:10px}.authlite-action-bar,.authlite-action-bar-center{display:grid;grid-auto-flow:column;align-items:center;column-gap:10px}.authlite-action-bar-center{justify-content:center}*{box-sizing:border-box}*{font-family:Roboto,sans-serif}.authlite-signin-form{display:grid;grid-auto-flow:row;width:100%}.authlite-signin-form__forgot{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:space-between}.authlite-d1-tagline{text-align:center;display:grid;grid-auto-flow:row;row-gap:6px}.authlite-d1-tagline__title{font-size:20px}.authlite-d1-tagline__subtitle{font-size:12px;opacity:.6}.authlite-action-bar,.authlite-action-bar-center{font-size:12px}.authlite-input-container{position:relative}.authlite-input{width:100%;padding:10px;margin-bottom:10px}.authlite-password-hide-icon,.authlite-password-show-icon{position:absolute;top:40%;right:10px;transform:translateY(-50%);cursor:pointer;width:4%}.authlite-password-show-icon{width:4%}.authlite-input-container.show-password .authlite-password-hide-icon{display:none}.authlite-input-container.show-password .authlite-password-show-icon{display:block}\n"] }]
        }], ctorParameters: () => [{ type: i1.FormBuilder }], propDecorators: { translationDictionary: [{
                type: Input
            }], translationName: [{
                type: Input
            }] } });

//import { AuthService } from "../services/AuthenticationService";
//import { HttpClient } from '@angular/common/http';
class SignupFormComponent {
    togglePassword() {
        this.showPassword = !this.showPassword;
    }
    constructor(fb, router) {
        this.fb = fb;
        this.router = router;
        this.translationDictionary = DEFAULT_TRANSLATION_DICTIONARY;
        this.showPassword = true;
    }
    /*onSignupForm(signupForm: NgForm) {
      if (signupForm.invalid) {
        return;
      }
      this.authService.CreateUser(
        signupForm.value.given_name,
        signupForm.value.family_name,
        signupForm.value.email,
        signupForm.value.password,
        signupForm.value.retype_password);
    }*/
    ngOnInit() {
        this.initForm();
    }
    initForm() {
        this.signupForm = this.fb.group({
            given_name: ['', Validators.required],
            family_name: ['', Validators.required],
            email: ['', [Validators.required, Validators.email]],
            password: ['', Validators.required],
            retype_password: ['', Validators.required],
        }, {
            validators: this.passwordMatchValidator,
        });
    }
    get signupGreetingTitle() {
        return this.translationDictionary.SIGNUP_FORM__GREETING_TITLE;
    }
    get signupGreetingSubtitle() {
        return this.translationDictionary.SIGNUP_FORM__GREETING_SUBTITLE;
    }
    get signupFormLabelGivenname() {
        return this.translationDictionary.SIGNUP_FORM__LABEL_GIVENNAME;
    }
    get signupFormLabelFamilyname() {
        return this.translationDictionary.SIGNUP_FORM__LABEL_FAMILYNAME;
    }
    get signupFormLabelUsername() {
        return this.translationDictionary.SIGNUP_FORM__LABEL_EMAIL;
    }
    get signupFormLabelPassword() {
        return this.translationDictionary.SIGNUP_FORM__LABEL_PASSWORD;
    }
    get signupFormLabelRetypePassword() {
        return this.translationDictionary.SIGNUP_FORM__LABEL_RETYPEPASSWORD;
    }
    get signupFormGivennameErrorMessage() {
        return this.translationDictionary.SIGNUP_ERROR__BLANK_GIVENNAME;
    }
    get signupFormFamilynameErrorMessage() {
        return this.translationDictionary.SIGNUP_ERROR__BLANK_FAMILYNAME;
    }
    get signupFormUsernameErrorMessage() {
        return this.translationDictionary.SIGNUP_ERROR__BLANK_USERNAME;
    }
    get signupFormInvalidUsername() {
        return this.translationDictionary.SIGNUP_ERROR__INVALID_USERNAME;
    }
    get signupFormPasswordErrorMessage() {
        return this.translationDictionary.SIGNUP_ERROR__BLANK_PASSWORD;
    }
    get signupFormReTypePasswordErrorMessage() {
        return this.translationDictionary.SIGNUP_ERROR__BLANK_RETYPEPASSWORD;
    }
    get signupFormReTypePasswordDoesnotMatch() {
        const retypePassword = this.signupForm.get('retype_password');
        return this.translationDictionary.SIGNUP_ERROR__PASSWORDS_DO_NOT_MATCH;
    }
    passwordMatchValidator(control) {
        const password = control.get('password');
        const retypePassword = control.get('retype_password');
        if (password && retypePassword && password.value !== retypePassword.value) {
            return { 'passwordMismatch': true };
        }
        return null;
    }
    onSubmit() {
        if (this.signupForm.invalid) {
            this.signupForm.markAllAsTouched();
            return;
        }
        else {
            console.log('Signup Successful:', this.signupForm.value);
            //this.router.navigate(['/signup-success-page']);
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: SignupFormComponent, deps: [{ token: i1.FormBuilder }, { token: i2$1.Router }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.2", type: SignupFormComponent, selector: "lib-signup-form", inputs: { translationDictionary: "translationDictionary", translationName: "translationName" }, ngImport: i0, template: "<form class=\"authlite-d1-signup-form\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"authlite-margin-top\">\r\n    <lib-tagline \r\n          [title]=\"signupGreetingTitle\"\r\n          [subtitle]=\"signupGreetingSubtitle\">\r\n    </lib-tagline>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n      <lib-form-element-message \r\n          [given_name]=\"signupFormLabelGivenname\">\r\n      </lib-form-element-message> \r\n      <input type=\"text\" class=\"authlite-input\" autocomplete=\"off\" value=\"\" formControlName=\"given_name\">\r\n      <lib-form-element-message\r\n          *ngIf=\"signupForm.controls['given_name'].touched && signupForm.controls['given_name'].hasError('required')\"\r\n          [blankGivenname]=\"signupFormGivennameErrorMessage\">\r\n      </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n      <lib-form-element-message \r\n          [family_name]=\"signupFormLabelFamilyname\">\r\n      </lib-form-element-message>\r\n      <input type=\"text\" class=\"authlite-input\" autocomplete=\"off\" value=\"\" formControlName=\"family_name\">\r\n      <lib-form-element-message\r\n          *ngIf=\"signupForm.controls['family_name'].touched && signupForm.controls['family_name'].hasError('required')\"\r\n          [blankGivenname]=\"signupFormFamilynameErrorMessage\">\r\n      </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n      <lib-form-element-message \r\n          [email]=\"signupFormLabelUsername\">\r\n      </lib-form-element-message>\r\n      <input type=\"email\" id=\"userid\" formControlName=\"email\" class=\"authlite-input\" name=\"email\" autocomplete=\"off\" value=\"\">\r\n      <lib-form-element-message\r\n          *ngIf=\"signupForm.controls['email'].touched && signupForm.controls['email'].hasError('required')\"\r\n          [blankUsername]=\"signupFormUsernameErrorMessage\">\r\n      </lib-form-element-message>\r\n      <lib-form-element-message\r\n          *ngIf=\"signupForm.controls['email'].touched && signupForm.controls['email'].hasError('email')\"\r\n          [invalidUsername]=\"signupFormInvalidUsername\">\r\n      </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n      <lib-form-element-message \r\n          [password]=\"signupFormLabelPassword\">\r\n      </lib-form-element-message>\r\n      <div class=\"authlite-input-container\">\r\n        <input [type]=\"showPassword?'password':'text'\" formControlName=\"password\" class=\"authlite-input\" name=\"password\" value=\"\">\r\n        <span (click)=\"togglePassword()\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\" *ngIf=\"!showPassword\" class=\"authlite-password-hide-icon\">\r\n                <path d=\"M320 400c-75.9 0-137.3-58.7-142.9-133.1L72.2 185.8c-13.8 17.3-26.5 35.6-36.7 55.6a32.4 32.4 0 0 0 0 29.2C89.7 376.4 197.1 448 320 448c26.9 0 52.9-4 77.9-10.5L346 397.4a144.1 144.1 0 0 1 -26 2.6zm313.8 58.1l-110.6-85.4a331.3 331.3 0 0 0 81.3-102.1 32.4 32.4 0 0 0 0-29.2C550.3 135.6 442.9 64 320 64a308.2 308.2 0 0 0 -147.3 37.7L45.5 3.4A16 16 0 0 0 23 6.2L3.4 31.5A16 16 0 0 0 6.2 53.9l588.4 454.7a16 16 0 0 0 22.5-2.8l19.6-25.3a16 16 0 0 0 -2.8-22.5zm-183.7-142l-39.3-30.4A94.8 94.8 0 0 0 416 256a94.8 94.8 0 0 0 -121.3-92.2A47.7 47.7 0 0 1 304 192a46.6 46.6 0 0 1 -1.5 10l-73.6-56.9A142.3 142.3 0 0 1 320 112a143.9 143.9 0 0 1 144 144c0 21.6-5.3 41.8-13.9 60.1z\"/>\r\n            </svg>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\" *ngIf=\"showPassword\" class=\"authlite-password-show-icon\">\r\n                <path d=\"M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4C142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zM144 256a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-64c0 35.3-28.7 64-64 64c-7.1 0-13.9-1.2-20.3-3.3c-5.5-1.8-11.9 1.6-11.7 7.4c.3 6.9 1.3 13.8 3.2 20.7c13.7 51.2 66.4 81.6 117.6 67.9s81.6-66.4 67.9-117.6c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3z\"/>\r\n            </svg>\r\n        </span>\r\n    </div>\r\n      <lib-form-element-message \r\n          *ngIf=\"signupForm.controls['password'].touched && signupForm.controls['password'].hasError('required')\"\r\n          [blankPassword]=\"signupFormPasswordErrorMessage\">\r\n      </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n      <lib-form-element-message \r\n          [retype_password]=\"signupFormLabelRetypePassword\">\r\n      </lib-form-element-message>\r\n      <div class=\"authlite-input-container\">\r\n        <input [type]=\"showPassword?'password':'text'\" formControlName=\"retype_password\" class=\"authlite-input\" name=\"retype_password\" value=\"\">\r\n        <span (click)=\"togglePassword()\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\" *ngIf=\"!showPassword\" class=\"authlite-password-hide-icon\">\r\n                <path d=\"M320 400c-75.9 0-137.3-58.7-142.9-133.1L72.2 185.8c-13.8 17.3-26.5 35.6-36.7 55.6a32.4 32.4 0 0 0 0 29.2C89.7 376.4 197.1 448 320 448c26.9 0 52.9-4 77.9-10.5L346 397.4a144.1 144.1 0 0 1 -26 2.6zm313.8 58.1l-110.6-85.4a331.3 331.3 0 0 0 81.3-102.1 32.4 32.4 0 0 0 0-29.2C550.3 135.6 442.9 64 320 64a308.2 308.2 0 0 0 -147.3 37.7L45.5 3.4A16 16 0 0 0 23 6.2L3.4 31.5A16 16 0 0 0 6.2 53.9l588.4 454.7a16 16 0 0 0 22.5-2.8l19.6-25.3a16 16 0 0 0 -2.8-22.5zm-183.7-142l-39.3-30.4A94.8 94.8 0 0 0 416 256a94.8 94.8 0 0 0 -121.3-92.2A47.7 47.7 0 0 1 304 192a46.6 46.6 0 0 1 -1.5 10l-73.6-56.9A142.3 142.3 0 0 1 320 112a143.9 143.9 0 0 1 144 144c0 21.6-5.3 41.8-13.9 60.1z\"/>\r\n            </svg>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\" *ngIf=\"showPassword\" class=\"authlite-password-show-icon\">\r\n                <path d=\"M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4C142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zM144 256a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-64c0 35.3-28.7 64-64 64c-7.1 0-13.9-1.2-20.3-3.3c-5.5-1.8-11.9 1.6-11.7 7.4c.3 6.9 1.3 13.8 3.2 20.7c13.7 51.2 66.4 81.6 117.6 67.9s81.6-66.4 67.9-117.6c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3z\"/>\r\n            </svg>\r\n        </span>\r\n    </div>\r\n      <lib-form-element-message \r\n          *ngIf=\"signupForm.controls['retype_password'].touched && signupForm.controls['retype_password'].hasError('required')\"\r\n          [blankRetypePassword]=\"signupFormReTypePasswordErrorMessage\">\r\n      </lib-form-element-message>\r\n      <lib-form-element-message \r\n          *ngIf=\"signupForm.hasError('passwordMismatch') && (signupForm.controls['retype_password'].touched || signupForm.controls['password'].touched)\"\r\n          [RetypePasswordDoesnotmatch]=\"signupFormReTypePasswordDoesnotMatch\">\r\n      </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-action-bar authlite-margin-top\">\r\n      <button class=\"authlite-primary-button\" type=\"submit\">{{translationDictionary.SIGNUP_FORM__ACTION_CREATEACCOUNT}}</button>\r\n  </div>\r\n  <div class=\"authlite-margin-top authlite-action-bar-center\">\r\n      {{translationDictionary.SIGNUP_FORM__MESSAGE_EXISTING_ACCOUNT}}\r\n      <button class=\"authlite-button-as-link\" type=\"submit\" routerLink=\"/signin-form\">{{translationDictionary.SIGNUP_FORM__ACTION_SIGNIN}}</button>\r\n  </div>\r\n</form>\r\n", styles: ["*{--theme-color-primary: #107cc4;--theme-color-primary-alt: #219ef1;--theme-color-grey: #4c4c4c}*{--theme-black-900: #020202;--theme-black-800: #080808;--theme-black-700: #0e0e0e;--theme-black-600: #141414;--theme-black-500: #1a1a1a;--theme-black-400: #202020;--theme-black-300: #262626;--theme-black-200: #2c2c2c;--theme-black-100: #323232;--theme-black-50: #383838;--theme-black-900i: #fff;--theme-black-800i: #fff;--theme-black-700i: #fff;--theme-black-600i: #fff;--theme-black-500i: #fff;--theme-black-400i: #fff;--theme-black-300i: #fff;--theme-black-200i: #fff;--theme-black-100i: #fff;--theme-black-50i: #fff}*{--theme-white-900: #c6c6c6;--theme-white-800: #cccccc;--theme-white-700: #d2d2d2;--theme-white-600: #d8d8d8;--theme-white-500: #dedede;--theme-white-400: #e4e4e4;--theme-white-300: #eaeaea;--theme-white-200: #f0f0f0;--theme-white-100: #f6f6f6;--theme-white-50: #fcfcfc;--theme-white-900i: #000;--theme-white-800i: #000;--theme-white-700i: #000;--theme-white-600i: #000;--theme-white-500i: #000;--theme-white-400i: #000;--theme-white-300i: #000;--theme-white-200i: #000;--theme-white-100i: #000;--theme-white-50i: #000}*{--theme-black-extended-900: #3e3e3e;--theme-black-extended-800: #444444;--theme-black-extended-700: #4a4a4a;--theme-black-extended-600: #505050;--theme-black-extended-500: #565656;--theme-black-extended-400: #5c5c5c;--theme-black-extended-300: #626262;--theme-black-extended-200: #686868;--theme-black-extended-100: #6e6e6e;--theme-black-extended-50: #747474;--theme-black-extended-900i: #fff;--theme-black-extended-800i: #fff;--theme-black-extended-700i: #fff;--theme-black-extended-600i: #fff;--theme-black-extended-500i: #fff;--theme-black-extended-400i: #fff;--theme-black-extended-300i: #fff;--theme-black-extended-200i: #fff;--theme-black-extended-100i: #fff;--theme-black-extended-50i: #fff}*{--theme-white-extended-900: #8a8a8a;--theme-white-extended-800: #909090;--theme-white-extended-700: #969696;--theme-white-extended-600: #9c9c9c;--theme-white-extended-500: #a2a2a2;--theme-white-extended-400: #a8a8a8;--theme-white-extended-300: #aeaeae;--theme-white-extended-200: #b4b4b4;--theme-white-extended-100: #bababa;--theme-white-extended-50: #c0c0c0;--theme-white-extended-900i: #000;--theme-white-extended-800i: #000;--theme-white-extended-700i: #000;--theme-white-extended-600i: #000;--theme-white-extended-500i: #000;--theme-white-extended-400i: #000;--theme-white-extended-300i: #000;--theme-white-extended-200i: #000;--theme-white-extended-100i: #000;--theme-white-extended-50i: #000}.authlite-light{color:var(--theme-black-900)}.authlite-dark{color:var(--theme-white-50)}.authlite-input{padding:10px;text-overflow:ellipsis;font-size:14px;font-weight:400;height:40px;width:100%;line-height:24px;background-color:#f8f8f8;border:1px solid #e3e3e3;border-radius:4px;outline:none;transition:background-color .25s ease-in-out,border-color .25s ease-in-out}.authlite-input:focus{border-color:var(--theme-color-primary-alt)}.authlite-button-as-link,.authlite-button,.authlite-primary-button{padding:0 20px;font-size:14px;font-weight:400;outline:none;border:none;cursor:pointer;transition:background-color .25s ease-in-out,color .25s ease-in-out,border-color .25s ease-in-out}.authlite-button,.authlite-primary-button{height:40px;line-height:24px;border-radius:4px;background-color:#e4e4e4;color:#000}.authlite-button:hover,.authlite-button:focus{background-color:#d7d7d7}.authlite-primary-button{background-color:var(--theme-color-primary-alt);color:#fff}.authlite-primary-button:hover,.authlite-primary-button:focus{background-color:var(--theme-color-primary);color:#fff}.authlite-button-as-link{background-color:transparent;border:none;outline:none;cursor:pointer;padding:0 0 2px;color:var(--theme-color-grey);border-bottom:1px dotted transparent;border-bottom:1px dotted var(--theme-color-grey)}.authlite-button-as-link:hover,.authlite-button-as-link:focus{color:var(--theme-color-primary);border-color:var(--theme-color-primary)}.authlite-form-element-error,.authlite-form-element-warning,.authlite-form-element-success,.authlite-form-element-info{margin-top:4px;font-size:10px;color:#cc2936}.authlite-form-element-warning{color:#ffd25a}.authlite-form-element-success{color:#86cd82}.authlite-form-element-info,.authlite-dark .authlite-form-element-info{color:#666b6a}.authlite-form-element-label{display:block;font-size:12px;margin-bottom:4px;text-transform:capitalize;word-break:keep-all;color:#666b6a}a{transition:.25s color ease-in-out,.25s border-color ease-in-out;cursor:pointer}a,a:hover,a:focus,a:active{text-decoration:none}a{color:var(--theme-color-primary);border-bottom:1px dotted transparent}a:hover,a:focus{color:var(--theme-color-primary-alt);border-color:var(--theme-color-primary-alt)}html{font-size:100%;font-size:14px}body{line-height:1.5}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6{margin-top:0;margin-bottom:.5rem;line-height:1.3}p,.p{margin-top:0;margin-bottom:1rem;font-size:1rem}h1,.h1{font-size:3.052rem}h2,.h2{font-size:2.441rem}h3,.h3{font-size:1.953rem}h4,.h4{font-size:1.563rem}h5,.h5{font-size:1.25rem}h6,.h6{font-size:1rem;font-weight:400}small,.small{font-size:.8rem}b,strong{font-weight:700}mark,.mark{background-color:#fae5c2}.authlite-margin-top{margin-top:20px}.authlite-margin-top-small{margin-top:10px}.authlite-action-bar,.authlite-action-bar-center{display:grid;grid-auto-flow:column;align-items:center;column-gap:10px}.authlite-action-bar-center{justify-content:center}*{box-sizing:border-box}.authlite-action-bar,.authlite-action-bar-center{font-size:12px}.authlite-input-container{position:relative}.authlite-input{width:100%;padding:10px;margin-bottom:10px}.authlite-password-hide-icon,.authlite-password-show-icon{position:absolute;top:40%;right:10px;transform:translateY(-50%);cursor:pointer;width:4%}.authlite-password-show-icon{width:4%}.authlite-input-container.show-password .authlite-password-hide-icon{display:none}.authlite-input-container.show-password .authlite-password-show-icon{display:block}\n"], dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i1.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "directive", type: i2$1.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "info", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "component", type: TaglineComponent, selector: "lib-tagline", inputs: ["title", "subtitle"] }, { kind: "component", type: FormElementMessageComponent, selector: "lib-form-element-message", inputs: ["email", "password", "given_name", "family_name", "retype_password", "type", "blankUsername", "blankPassword", "invalidUsername", "userNotFound", "incorrectPassword", "blankGivenname", "blankFamilyname", "blankRetypePassword", "RetypePasswordDoesnotmatch"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: SignupFormComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-signup-form', template: "<form class=\"authlite-d1-signup-form\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"authlite-margin-top\">\r\n    <lib-tagline \r\n          [title]=\"signupGreetingTitle\"\r\n          [subtitle]=\"signupGreetingSubtitle\">\r\n    </lib-tagline>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n      <lib-form-element-message \r\n          [given_name]=\"signupFormLabelGivenname\">\r\n      </lib-form-element-message> \r\n      <input type=\"text\" class=\"authlite-input\" autocomplete=\"off\" value=\"\" formControlName=\"given_name\">\r\n      <lib-form-element-message\r\n          *ngIf=\"signupForm.controls['given_name'].touched && signupForm.controls['given_name'].hasError('required')\"\r\n          [blankGivenname]=\"signupFormGivennameErrorMessage\">\r\n      </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n      <lib-form-element-message \r\n          [family_name]=\"signupFormLabelFamilyname\">\r\n      </lib-form-element-message>\r\n      <input type=\"text\" class=\"authlite-input\" autocomplete=\"off\" value=\"\" formControlName=\"family_name\">\r\n      <lib-form-element-message\r\n          *ngIf=\"signupForm.controls['family_name'].touched && signupForm.controls['family_name'].hasError('required')\"\r\n          [blankGivenname]=\"signupFormFamilynameErrorMessage\">\r\n      </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n      <lib-form-element-message \r\n          [email]=\"signupFormLabelUsername\">\r\n      </lib-form-element-message>\r\n      <input type=\"email\" id=\"userid\" formControlName=\"email\" class=\"authlite-input\" name=\"email\" autocomplete=\"off\" value=\"\">\r\n      <lib-form-element-message\r\n          *ngIf=\"signupForm.controls['email'].touched && signupForm.controls['email'].hasError('required')\"\r\n          [blankUsername]=\"signupFormUsernameErrorMessage\">\r\n      </lib-form-element-message>\r\n      <lib-form-element-message\r\n          *ngIf=\"signupForm.controls['email'].touched && signupForm.controls['email'].hasError('email')\"\r\n          [invalidUsername]=\"signupFormInvalidUsername\">\r\n      </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n      <lib-form-element-message \r\n          [password]=\"signupFormLabelPassword\">\r\n      </lib-form-element-message>\r\n      <div class=\"authlite-input-container\">\r\n        <input [type]=\"showPassword?'password':'text'\" formControlName=\"password\" class=\"authlite-input\" name=\"password\" value=\"\">\r\n        <span (click)=\"togglePassword()\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\" *ngIf=\"!showPassword\" class=\"authlite-password-hide-icon\">\r\n                <path d=\"M320 400c-75.9 0-137.3-58.7-142.9-133.1L72.2 185.8c-13.8 17.3-26.5 35.6-36.7 55.6a32.4 32.4 0 0 0 0 29.2C89.7 376.4 197.1 448 320 448c26.9 0 52.9-4 77.9-10.5L346 397.4a144.1 144.1 0 0 1 -26 2.6zm313.8 58.1l-110.6-85.4a331.3 331.3 0 0 0 81.3-102.1 32.4 32.4 0 0 0 0-29.2C550.3 135.6 442.9 64 320 64a308.2 308.2 0 0 0 -147.3 37.7L45.5 3.4A16 16 0 0 0 23 6.2L3.4 31.5A16 16 0 0 0 6.2 53.9l588.4 454.7a16 16 0 0 0 22.5-2.8l19.6-25.3a16 16 0 0 0 -2.8-22.5zm-183.7-142l-39.3-30.4A94.8 94.8 0 0 0 416 256a94.8 94.8 0 0 0 -121.3-92.2A47.7 47.7 0 0 1 304 192a46.6 46.6 0 0 1 -1.5 10l-73.6-56.9A142.3 142.3 0 0 1 320 112a143.9 143.9 0 0 1 144 144c0 21.6-5.3 41.8-13.9 60.1z\"/>\r\n            </svg>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\" *ngIf=\"showPassword\" class=\"authlite-password-show-icon\">\r\n                <path d=\"M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4C142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zM144 256a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-64c0 35.3-28.7 64-64 64c-7.1 0-13.9-1.2-20.3-3.3c-5.5-1.8-11.9 1.6-11.7 7.4c.3 6.9 1.3 13.8 3.2 20.7c13.7 51.2 66.4 81.6 117.6 67.9s81.6-66.4 67.9-117.6c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3z\"/>\r\n            </svg>\r\n        </span>\r\n    </div>\r\n      <lib-form-element-message \r\n          *ngIf=\"signupForm.controls['password'].touched && signupForm.controls['password'].hasError('required')\"\r\n          [blankPassword]=\"signupFormPasswordErrorMessage\">\r\n      </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n      <lib-form-element-message \r\n          [retype_password]=\"signupFormLabelRetypePassword\">\r\n      </lib-form-element-message>\r\n      <div class=\"authlite-input-container\">\r\n        <input [type]=\"showPassword?'password':'text'\" formControlName=\"retype_password\" class=\"authlite-input\" name=\"retype_password\" value=\"\">\r\n        <span (click)=\"togglePassword()\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\" *ngIf=\"!showPassword\" class=\"authlite-password-hide-icon\">\r\n                <path d=\"M320 400c-75.9 0-137.3-58.7-142.9-133.1L72.2 185.8c-13.8 17.3-26.5 35.6-36.7 55.6a32.4 32.4 0 0 0 0 29.2C89.7 376.4 197.1 448 320 448c26.9 0 52.9-4 77.9-10.5L346 397.4a144.1 144.1 0 0 1 -26 2.6zm313.8 58.1l-110.6-85.4a331.3 331.3 0 0 0 81.3-102.1 32.4 32.4 0 0 0 0-29.2C550.3 135.6 442.9 64 320 64a308.2 308.2 0 0 0 -147.3 37.7L45.5 3.4A16 16 0 0 0 23 6.2L3.4 31.5A16 16 0 0 0 6.2 53.9l588.4 454.7a16 16 0 0 0 22.5-2.8l19.6-25.3a16 16 0 0 0 -2.8-22.5zm-183.7-142l-39.3-30.4A94.8 94.8 0 0 0 416 256a94.8 94.8 0 0 0 -121.3-92.2A47.7 47.7 0 0 1 304 192a46.6 46.6 0 0 1 -1.5 10l-73.6-56.9A142.3 142.3 0 0 1 320 112a143.9 143.9 0 0 1 144 144c0 21.6-5.3 41.8-13.9 60.1z\"/>\r\n            </svg>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\" *ngIf=\"showPassword\" class=\"authlite-password-show-icon\">\r\n                <path d=\"M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4C142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zM144 256a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-64c0 35.3-28.7 64-64 64c-7.1 0-13.9-1.2-20.3-3.3c-5.5-1.8-11.9 1.6-11.7 7.4c.3 6.9 1.3 13.8 3.2 20.7c13.7 51.2 66.4 81.6 117.6 67.9s81.6-66.4 67.9-117.6c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3z\"/>\r\n            </svg>\r\n        </span>\r\n    </div>\r\n      <lib-form-element-message \r\n          *ngIf=\"signupForm.controls['retype_password'].touched && signupForm.controls['retype_password'].hasError('required')\"\r\n          [blankRetypePassword]=\"signupFormReTypePasswordErrorMessage\">\r\n      </lib-form-element-message>\r\n      <lib-form-element-message \r\n          *ngIf=\"signupForm.hasError('passwordMismatch') && (signupForm.controls['retype_password'].touched || signupForm.controls['password'].touched)\"\r\n          [RetypePasswordDoesnotmatch]=\"signupFormReTypePasswordDoesnotMatch\">\r\n      </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-action-bar authlite-margin-top\">\r\n      <button class=\"authlite-primary-button\" type=\"submit\">{{translationDictionary.SIGNUP_FORM__ACTION_CREATEACCOUNT}}</button>\r\n  </div>\r\n  <div class=\"authlite-margin-top authlite-action-bar-center\">\r\n      {{translationDictionary.SIGNUP_FORM__MESSAGE_EXISTING_ACCOUNT}}\r\n      <button class=\"authlite-button-as-link\" type=\"submit\" routerLink=\"/signin-form\">{{translationDictionary.SIGNUP_FORM__ACTION_SIGNIN}}</button>\r\n  </div>\r\n</form>\r\n", styles: ["*{--theme-color-primary: #107cc4;--theme-color-primary-alt: #219ef1;--theme-color-grey: #4c4c4c}*{--theme-black-900: #020202;--theme-black-800: #080808;--theme-black-700: #0e0e0e;--theme-black-600: #141414;--theme-black-500: #1a1a1a;--theme-black-400: #202020;--theme-black-300: #262626;--theme-black-200: #2c2c2c;--theme-black-100: #323232;--theme-black-50: #383838;--theme-black-900i: #fff;--theme-black-800i: #fff;--theme-black-700i: #fff;--theme-black-600i: #fff;--theme-black-500i: #fff;--theme-black-400i: #fff;--theme-black-300i: #fff;--theme-black-200i: #fff;--theme-black-100i: #fff;--theme-black-50i: #fff}*{--theme-white-900: #c6c6c6;--theme-white-800: #cccccc;--theme-white-700: #d2d2d2;--theme-white-600: #d8d8d8;--theme-white-500: #dedede;--theme-white-400: #e4e4e4;--theme-white-300: #eaeaea;--theme-white-200: #f0f0f0;--theme-white-100: #f6f6f6;--theme-white-50: #fcfcfc;--theme-white-900i: #000;--theme-white-800i: #000;--theme-white-700i: #000;--theme-white-600i: #000;--theme-white-500i: #000;--theme-white-400i: #000;--theme-white-300i: #000;--theme-white-200i: #000;--theme-white-100i: #000;--theme-white-50i: #000}*{--theme-black-extended-900: #3e3e3e;--theme-black-extended-800: #444444;--theme-black-extended-700: #4a4a4a;--theme-black-extended-600: #505050;--theme-black-extended-500: #565656;--theme-black-extended-400: #5c5c5c;--theme-black-extended-300: #626262;--theme-black-extended-200: #686868;--theme-black-extended-100: #6e6e6e;--theme-black-extended-50: #747474;--theme-black-extended-900i: #fff;--theme-black-extended-800i: #fff;--theme-black-extended-700i: #fff;--theme-black-extended-600i: #fff;--theme-black-extended-500i: #fff;--theme-black-extended-400i: #fff;--theme-black-extended-300i: #fff;--theme-black-extended-200i: #fff;--theme-black-extended-100i: #fff;--theme-black-extended-50i: #fff}*{--theme-white-extended-900: #8a8a8a;--theme-white-extended-800: #909090;--theme-white-extended-700: #969696;--theme-white-extended-600: #9c9c9c;--theme-white-extended-500: #a2a2a2;--theme-white-extended-400: #a8a8a8;--theme-white-extended-300: #aeaeae;--theme-white-extended-200: #b4b4b4;--theme-white-extended-100: #bababa;--theme-white-extended-50: #c0c0c0;--theme-white-extended-900i: #000;--theme-white-extended-800i: #000;--theme-white-extended-700i: #000;--theme-white-extended-600i: #000;--theme-white-extended-500i: #000;--theme-white-extended-400i: #000;--theme-white-extended-300i: #000;--theme-white-extended-200i: #000;--theme-white-extended-100i: #000;--theme-white-extended-50i: #000}.authlite-light{color:var(--theme-black-900)}.authlite-dark{color:var(--theme-white-50)}.authlite-input{padding:10px;text-overflow:ellipsis;font-size:14px;font-weight:400;height:40px;width:100%;line-height:24px;background-color:#f8f8f8;border:1px solid #e3e3e3;border-radius:4px;outline:none;transition:background-color .25s ease-in-out,border-color .25s ease-in-out}.authlite-input:focus{border-color:var(--theme-color-primary-alt)}.authlite-button-as-link,.authlite-button,.authlite-primary-button{padding:0 20px;font-size:14px;font-weight:400;outline:none;border:none;cursor:pointer;transition:background-color .25s ease-in-out,color .25s ease-in-out,border-color .25s ease-in-out}.authlite-button,.authlite-primary-button{height:40px;line-height:24px;border-radius:4px;background-color:#e4e4e4;color:#000}.authlite-button:hover,.authlite-button:focus{background-color:#d7d7d7}.authlite-primary-button{background-color:var(--theme-color-primary-alt);color:#fff}.authlite-primary-button:hover,.authlite-primary-button:focus{background-color:var(--theme-color-primary);color:#fff}.authlite-button-as-link{background-color:transparent;border:none;outline:none;cursor:pointer;padding:0 0 2px;color:var(--theme-color-grey);border-bottom:1px dotted transparent;border-bottom:1px dotted var(--theme-color-grey)}.authlite-button-as-link:hover,.authlite-button-as-link:focus{color:var(--theme-color-primary);border-color:var(--theme-color-primary)}.authlite-form-element-error,.authlite-form-element-warning,.authlite-form-element-success,.authlite-form-element-info{margin-top:4px;font-size:10px;color:#cc2936}.authlite-form-element-warning{color:#ffd25a}.authlite-form-element-success{color:#86cd82}.authlite-form-element-info,.authlite-dark .authlite-form-element-info{color:#666b6a}.authlite-form-element-label{display:block;font-size:12px;margin-bottom:4px;text-transform:capitalize;word-break:keep-all;color:#666b6a}a{transition:.25s color ease-in-out,.25s border-color ease-in-out;cursor:pointer}a,a:hover,a:focus,a:active{text-decoration:none}a{color:var(--theme-color-primary);border-bottom:1px dotted transparent}a:hover,a:focus{color:var(--theme-color-primary-alt);border-color:var(--theme-color-primary-alt)}html{font-size:100%;font-size:14px}body{line-height:1.5}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6{margin-top:0;margin-bottom:.5rem;line-height:1.3}p,.p{margin-top:0;margin-bottom:1rem;font-size:1rem}h1,.h1{font-size:3.052rem}h2,.h2{font-size:2.441rem}h3,.h3{font-size:1.953rem}h4,.h4{font-size:1.563rem}h5,.h5{font-size:1.25rem}h6,.h6{font-size:1rem;font-weight:400}small,.small{font-size:.8rem}b,strong{font-weight:700}mark,.mark{background-color:#fae5c2}.authlite-margin-top{margin-top:20px}.authlite-margin-top-small{margin-top:10px}.authlite-action-bar,.authlite-action-bar-center{display:grid;grid-auto-flow:column;align-items:center;column-gap:10px}.authlite-action-bar-center{justify-content:center}*{box-sizing:border-box}.authlite-action-bar,.authlite-action-bar-center{font-size:12px}.authlite-input-container{position:relative}.authlite-input{width:100%;padding:10px;margin-bottom:10px}.authlite-password-hide-icon,.authlite-password-show-icon{position:absolute;top:40%;right:10px;transform:translateY(-50%);cursor:pointer;width:4%}.authlite-password-show-icon{width:4%}.authlite-input-container.show-password .authlite-password-hide-icon{display:none}.authlite-input-container.show-password .authlite-password-show-icon{display:block}\n"] }]
        }], ctorParameters: () => [{ type: i1.FormBuilder }, { type: i2$1.Router }], propDecorators: { translationDictionary: [{
                type: Input
            }], translationName: [{
                type: Input
            }] } });

class ForgotPasswordFormComponent {
    constructor(fb) {
        this.fb = fb;
        this.translationDictionary = DEFAULT_TRANSLATION_DICTIONARY;
        this.passwordResetLinkSent = false;
    }
    ngOnInit() {
        this.initForm();
    }
    initForm() {
        this.forgotPasswordForm = this.fb.group({
            email: ['', [Validators.required, Validators.email]],
        });
    }
    get forgotPasswordGreetingTitle() {
        return this.translationDictionary.FORGOT_PASSWORD_FORM__GREETING_TITLE;
    }
    get forgotPasswordGreetingSubtitle() {
        return this.translationDictionary.FORGOT_PASSWORD_FORM__GREETING_SUBTITLE;
    }
    get forgotPasswordFormLabelEmail() {
        return this.translationDictionary.FORGOT_PASSWORD_FORM__LABEL_EMAIL;
    }
    get forgotPasswordFormUsernameErrorMessage() {
        return this.translationDictionary['FORGOT_PASSWORD_ERROR__BLANK_USERNAME'];
    }
    get forgotPasswordFormInvalidUsername() {
        return this.translationDictionary.FORGOT_PASSWORD_ERROR__INVALID_USERNAME;
    }
    get forgotPasswordFormUserNotFound() {
        return this.translationDictionary.FORGOT_PASSWORD_ERROR__USER_NOT_FOUND;
    }
    onSubmit() {
        console.log('onSubmit');
        if (this.forgotPasswordForm.invalid) {
            this.forgotPasswordForm.markAllAsTouched();
            return;
        }
        const enteredEmail = this.forgotPasswordForm.value.email;
        if (!this.isUserExists(enteredEmail)) {
            this.forgotPasswordForm.setErrors({ userNotFound: true });
        }
        else {
            console.log('reset link sent to:', this.forgotPasswordForm.value);
            this.sendPasswordResetLink(enteredEmail);
        }
    }
    isUserExists(email) {
        return false;
    }
    sendPasswordResetLink(email) {
        console.log('Password reset link sent to ${enteredEmail}', email);
        this.passwordResetLinkSent = true;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: ForgotPasswordFormComponent, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.2", type: ForgotPasswordFormComponent, selector: "lib-forgot-password-form", inputs: { translationDictionary: "translationDictionary", translationName: "translationName" }, ngImport: i0, template: "<form class=\"authlite-d1-forgotpassword-form\" [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"authlite-margin-top\">\r\n    <lib-tagline [title]=\"forgotPasswordGreetingTitle\" [subtitle]=\"forgotPasswordGreetingSubtitle\">\r\n    </lib-tagline>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n    <lib-form-element-message [email]=\"forgotPasswordFormLabelEmail\">\r\n    </lib-form-element-message>\r\n    <input type=\"email\" class=\"authlite-input\" name=\"email\" autocomplete=\"off\" formControlName=\"email\" value=\"\" />\r\n    <lib-form-element-message\r\n      *ngIf=\"forgotPasswordForm.controls['email'].touched && forgotPasswordForm.controls['email'].hasError('required')\"\r\n      [blankUsername]=\"forgotPasswordFormUsernameErrorMessage\">\r\n    </lib-form-element-message>\r\n    <lib-form-element-message\r\n      *ngIf=\"forgotPasswordForm.controls['email'].touched && forgotPasswordForm.controls['email'].hasError('email')\"\r\n      [invalidUsername]=\"forgotPasswordFormInvalidUsername\">\r\n    </lib-form-element-message>\r\n    <lib-form-element-message *ngIf=\"forgotPasswordForm.errors?.['userNotFound']\"\r\n      [userNotFound]=\"forgotPasswordFormUserNotFound\">\r\n    </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-action-bar authlite-margin-top\">\r\n    <button class=\"authlite-primary-button\"\r\n      type=\"submit\">{{translationDictionary.FORGOT_PASSWORD_FORM__ACTION_SEND}}</button>\r\n  </div>\r\n  <div class=\"authlite-action-bar-center authlite-margin-top\">\r\n    {{translationDictionary.FORGOT_PASSWORD_FORM__MESSAGE_REMEMBER_PASSWORD}}\r\n    <button class=\"authlite-button-as-link\"\r\n      routerLink=\"/SigninForm\">{{translationDictionary.FORGOT_PASSWORD_FORM__ACTION_SIGNIN}}</button>\r\n  </div>\r\n</form>", styles: ["*{--theme-color-primary: #107cc4;--theme-color-primary-alt: #219ef1;--theme-color-grey: #4c4c4c}*{--theme-black-900: #020202;--theme-black-800: #080808;--theme-black-700: #0e0e0e;--theme-black-600: #141414;--theme-black-500: #1a1a1a;--theme-black-400: #202020;--theme-black-300: #262626;--theme-black-200: #2c2c2c;--theme-black-100: #323232;--theme-black-50: #383838;--theme-black-900i: #fff;--theme-black-800i: #fff;--theme-black-700i: #fff;--theme-black-600i: #fff;--theme-black-500i: #fff;--theme-black-400i: #fff;--theme-black-300i: #fff;--theme-black-200i: #fff;--theme-black-100i: #fff;--theme-black-50i: #fff}*{--theme-white-900: #c6c6c6;--theme-white-800: #cccccc;--theme-white-700: #d2d2d2;--theme-white-600: #d8d8d8;--theme-white-500: #dedede;--theme-white-400: #e4e4e4;--theme-white-300: #eaeaea;--theme-white-200: #f0f0f0;--theme-white-100: #f6f6f6;--theme-white-50: #fcfcfc;--theme-white-900i: #000;--theme-white-800i: #000;--theme-white-700i: #000;--theme-white-600i: #000;--theme-white-500i: #000;--theme-white-400i: #000;--theme-white-300i: #000;--theme-white-200i: #000;--theme-white-100i: #000;--theme-white-50i: #000}*{--theme-black-extended-900: #3e3e3e;--theme-black-extended-800: #444444;--theme-black-extended-700: #4a4a4a;--theme-black-extended-600: #505050;--theme-black-extended-500: #565656;--theme-black-extended-400: #5c5c5c;--theme-black-extended-300: #626262;--theme-black-extended-200: #686868;--theme-black-extended-100: #6e6e6e;--theme-black-extended-50: #747474;--theme-black-extended-900i: #fff;--theme-black-extended-800i: #fff;--theme-black-extended-700i: #fff;--theme-black-extended-600i: #fff;--theme-black-extended-500i: #fff;--theme-black-extended-400i: #fff;--theme-black-extended-300i: #fff;--theme-black-extended-200i: #fff;--theme-black-extended-100i: #fff;--theme-black-extended-50i: #fff}*{--theme-white-extended-900: #8a8a8a;--theme-white-extended-800: #909090;--theme-white-extended-700: #969696;--theme-white-extended-600: #9c9c9c;--theme-white-extended-500: #a2a2a2;--theme-white-extended-400: #a8a8a8;--theme-white-extended-300: #aeaeae;--theme-white-extended-200: #b4b4b4;--theme-white-extended-100: #bababa;--theme-white-extended-50: #c0c0c0;--theme-white-extended-900i: #000;--theme-white-extended-800i: #000;--theme-white-extended-700i: #000;--theme-white-extended-600i: #000;--theme-white-extended-500i: #000;--theme-white-extended-400i: #000;--theme-white-extended-300i: #000;--theme-white-extended-200i: #000;--theme-white-extended-100i: #000;--theme-white-extended-50i: #000}.authlite-light{color:var(--theme-black-900)}.authlite-dark{color:var(--theme-white-50)}.authlite-input{padding:10px;text-overflow:ellipsis;font-size:14px;font-weight:400;height:40px;width:100%;line-height:24px;background-color:#f8f8f8;border:1px solid #e3e3e3;border-radius:4px;outline:none;transition:background-color .25s ease-in-out,border-color .25s ease-in-out}.authlite-input:focus{border-color:var(--theme-color-primary-alt)}.authlite-button-as-link,.authlite-button,.authlite-primary-button{padding:0 20px;font-size:14px;font-weight:400;outline:none;border:none;cursor:pointer;transition:background-color .25s ease-in-out,color .25s ease-in-out,border-color .25s ease-in-out}.authlite-button,.authlite-primary-button{height:40px;line-height:24px;border-radius:4px;background-color:#e4e4e4;color:#000}.authlite-button:hover,.authlite-button:focus{background-color:#d7d7d7}.authlite-primary-button{background-color:var(--theme-color-primary-alt);color:#fff}.authlite-primary-button:hover,.authlite-primary-button:focus{background-color:var(--theme-color-primary);color:#fff}.authlite-button-as-link{background-color:transparent;border:none;outline:none;cursor:pointer;padding:0 0 2px;color:var(--theme-color-grey);border-bottom:1px dotted transparent;border-bottom:1px dotted var(--theme-color-grey)}.authlite-button-as-link:hover,.authlite-button-as-link:focus{color:var(--theme-color-primary);border-color:var(--theme-color-primary)}.authlite-form-element-error,.authlite-form-element-warning,.authlite-form-element-success,.authlite-form-element-info{margin-top:4px;font-size:10px;color:#cc2936}.authlite-form-element-warning{color:#ffd25a}.authlite-form-element-success{color:#86cd82}.authlite-form-element-info,.authlite-dark .authlite-form-element-info{color:#666b6a}.authlite-form-element-label{display:block;font-size:12px;margin-bottom:4px;text-transform:capitalize;word-break:keep-all;color:#666b6a}a{transition:.25s color ease-in-out,.25s border-color ease-in-out;cursor:pointer}a,a:hover,a:focus,a:active{text-decoration:none}a{color:var(--theme-color-primary);border-bottom:1px dotted transparent}a:hover,a:focus{color:var(--theme-color-primary-alt);border-color:var(--theme-color-primary-alt)}html{font-size:100%;font-size:14px}body{line-height:1.5}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6{margin-top:0;margin-bottom:.5rem;line-height:1.3}p,.p{margin-top:0;margin-bottom:1rem;font-size:1rem}h1,.h1{font-size:3.052rem}h2,.h2{font-size:2.441rem}h3,.h3{font-size:1.953rem}h4,.h4{font-size:1.563rem}h5,.h5{font-size:1.25rem}h6,.h6{font-size:1rem;font-weight:400}small,.small{font-size:.8rem}b,strong{font-weight:700}mark,.mark{background-color:#fae5c2}.authlite-margin-top{margin-top:20px}.authlite-margin-top-small{margin-top:10px}.authlite-action-bar,.authlite-action-bar-center{display:grid;grid-auto-flow:column;align-items:center;column-gap:10px}.authlite-action-bar-center{justify-content:center}*{box-sizing:border-box}.authlite-action-bar,.authlite-action-bar-center{font-size:12px}\n"], dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i1.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "directive", type: i2$1.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "info", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "component", type: TaglineComponent, selector: "lib-tagline", inputs: ["title", "subtitle"] }, { kind: "component", type: FormElementMessageComponent, selector: "lib-form-element-message", inputs: ["email", "password", "given_name", "family_name", "retype_password", "type", "blankUsername", "blankPassword", "invalidUsername", "userNotFound", "incorrectPassword", "blankGivenname", "blankFamilyname", "blankRetypePassword", "RetypePasswordDoesnotmatch"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: ForgotPasswordFormComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-forgot-password-form', template: "<form class=\"authlite-d1-forgotpassword-form\" [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"authlite-margin-top\">\r\n    <lib-tagline [title]=\"forgotPasswordGreetingTitle\" [subtitle]=\"forgotPasswordGreetingSubtitle\">\r\n    </lib-tagline>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n    <lib-form-element-message [email]=\"forgotPasswordFormLabelEmail\">\r\n    </lib-form-element-message>\r\n    <input type=\"email\" class=\"authlite-input\" name=\"email\" autocomplete=\"off\" formControlName=\"email\" value=\"\" />\r\n    <lib-form-element-message\r\n      *ngIf=\"forgotPasswordForm.controls['email'].touched && forgotPasswordForm.controls['email'].hasError('required')\"\r\n      [blankUsername]=\"forgotPasswordFormUsernameErrorMessage\">\r\n    </lib-form-element-message>\r\n    <lib-form-element-message\r\n      *ngIf=\"forgotPasswordForm.controls['email'].touched && forgotPasswordForm.controls['email'].hasError('email')\"\r\n      [invalidUsername]=\"forgotPasswordFormInvalidUsername\">\r\n    </lib-form-element-message>\r\n    <lib-form-element-message *ngIf=\"forgotPasswordForm.errors?.['userNotFound']\"\r\n      [userNotFound]=\"forgotPasswordFormUserNotFound\">\r\n    </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-action-bar authlite-margin-top\">\r\n    <button class=\"authlite-primary-button\"\r\n      type=\"submit\">{{translationDictionary.FORGOT_PASSWORD_FORM__ACTION_SEND}}</button>\r\n  </div>\r\n  <div class=\"authlite-action-bar-center authlite-margin-top\">\r\n    {{translationDictionary.FORGOT_PASSWORD_FORM__MESSAGE_REMEMBER_PASSWORD}}\r\n    <button class=\"authlite-button-as-link\"\r\n      routerLink=\"/SigninForm\">{{translationDictionary.FORGOT_PASSWORD_FORM__ACTION_SIGNIN}}</button>\r\n  </div>\r\n</form>", styles: ["*{--theme-color-primary: #107cc4;--theme-color-primary-alt: #219ef1;--theme-color-grey: #4c4c4c}*{--theme-black-900: #020202;--theme-black-800: #080808;--theme-black-700: #0e0e0e;--theme-black-600: #141414;--theme-black-500: #1a1a1a;--theme-black-400: #202020;--theme-black-300: #262626;--theme-black-200: #2c2c2c;--theme-black-100: #323232;--theme-black-50: #383838;--theme-black-900i: #fff;--theme-black-800i: #fff;--theme-black-700i: #fff;--theme-black-600i: #fff;--theme-black-500i: #fff;--theme-black-400i: #fff;--theme-black-300i: #fff;--theme-black-200i: #fff;--theme-black-100i: #fff;--theme-black-50i: #fff}*{--theme-white-900: #c6c6c6;--theme-white-800: #cccccc;--theme-white-700: #d2d2d2;--theme-white-600: #d8d8d8;--theme-white-500: #dedede;--theme-white-400: #e4e4e4;--theme-white-300: #eaeaea;--theme-white-200: #f0f0f0;--theme-white-100: #f6f6f6;--theme-white-50: #fcfcfc;--theme-white-900i: #000;--theme-white-800i: #000;--theme-white-700i: #000;--theme-white-600i: #000;--theme-white-500i: #000;--theme-white-400i: #000;--theme-white-300i: #000;--theme-white-200i: #000;--theme-white-100i: #000;--theme-white-50i: #000}*{--theme-black-extended-900: #3e3e3e;--theme-black-extended-800: #444444;--theme-black-extended-700: #4a4a4a;--theme-black-extended-600: #505050;--theme-black-extended-500: #565656;--theme-black-extended-400: #5c5c5c;--theme-black-extended-300: #626262;--theme-black-extended-200: #686868;--theme-black-extended-100: #6e6e6e;--theme-black-extended-50: #747474;--theme-black-extended-900i: #fff;--theme-black-extended-800i: #fff;--theme-black-extended-700i: #fff;--theme-black-extended-600i: #fff;--theme-black-extended-500i: #fff;--theme-black-extended-400i: #fff;--theme-black-extended-300i: #fff;--theme-black-extended-200i: #fff;--theme-black-extended-100i: #fff;--theme-black-extended-50i: #fff}*{--theme-white-extended-900: #8a8a8a;--theme-white-extended-800: #909090;--theme-white-extended-700: #969696;--theme-white-extended-600: #9c9c9c;--theme-white-extended-500: #a2a2a2;--theme-white-extended-400: #a8a8a8;--theme-white-extended-300: #aeaeae;--theme-white-extended-200: #b4b4b4;--theme-white-extended-100: #bababa;--theme-white-extended-50: #c0c0c0;--theme-white-extended-900i: #000;--theme-white-extended-800i: #000;--theme-white-extended-700i: #000;--theme-white-extended-600i: #000;--theme-white-extended-500i: #000;--theme-white-extended-400i: #000;--theme-white-extended-300i: #000;--theme-white-extended-200i: #000;--theme-white-extended-100i: #000;--theme-white-extended-50i: #000}.authlite-light{color:var(--theme-black-900)}.authlite-dark{color:var(--theme-white-50)}.authlite-input{padding:10px;text-overflow:ellipsis;font-size:14px;font-weight:400;height:40px;width:100%;line-height:24px;background-color:#f8f8f8;border:1px solid #e3e3e3;border-radius:4px;outline:none;transition:background-color .25s ease-in-out,border-color .25s ease-in-out}.authlite-input:focus{border-color:var(--theme-color-primary-alt)}.authlite-button-as-link,.authlite-button,.authlite-primary-button{padding:0 20px;font-size:14px;font-weight:400;outline:none;border:none;cursor:pointer;transition:background-color .25s ease-in-out,color .25s ease-in-out,border-color .25s ease-in-out}.authlite-button,.authlite-primary-button{height:40px;line-height:24px;border-radius:4px;background-color:#e4e4e4;color:#000}.authlite-button:hover,.authlite-button:focus{background-color:#d7d7d7}.authlite-primary-button{background-color:var(--theme-color-primary-alt);color:#fff}.authlite-primary-button:hover,.authlite-primary-button:focus{background-color:var(--theme-color-primary);color:#fff}.authlite-button-as-link{background-color:transparent;border:none;outline:none;cursor:pointer;padding:0 0 2px;color:var(--theme-color-grey);border-bottom:1px dotted transparent;border-bottom:1px dotted var(--theme-color-grey)}.authlite-button-as-link:hover,.authlite-button-as-link:focus{color:var(--theme-color-primary);border-color:var(--theme-color-primary)}.authlite-form-element-error,.authlite-form-element-warning,.authlite-form-element-success,.authlite-form-element-info{margin-top:4px;font-size:10px;color:#cc2936}.authlite-form-element-warning{color:#ffd25a}.authlite-form-element-success{color:#86cd82}.authlite-form-element-info,.authlite-dark .authlite-form-element-info{color:#666b6a}.authlite-form-element-label{display:block;font-size:12px;margin-bottom:4px;text-transform:capitalize;word-break:keep-all;color:#666b6a}a{transition:.25s color ease-in-out,.25s border-color ease-in-out;cursor:pointer}a,a:hover,a:focus,a:active{text-decoration:none}a{color:var(--theme-color-primary);border-bottom:1px dotted transparent}a:hover,a:focus{color:var(--theme-color-primary-alt);border-color:var(--theme-color-primary-alt)}html{font-size:100%;font-size:14px}body{line-height:1.5}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6{margin-top:0;margin-bottom:.5rem;line-height:1.3}p,.p{margin-top:0;margin-bottom:1rem;font-size:1rem}h1,.h1{font-size:3.052rem}h2,.h2{font-size:2.441rem}h3,.h3{font-size:1.953rem}h4,.h4{font-size:1.563rem}h5,.h5{font-size:1.25rem}h6,.h6{font-size:1rem;font-weight:400}small,.small{font-size:.8rem}b,strong{font-weight:700}mark,.mark{background-color:#fae5c2}.authlite-margin-top{margin-top:20px}.authlite-margin-top-small{margin-top:10px}.authlite-action-bar,.authlite-action-bar-center{display:grid;grid-auto-flow:column;align-items:center;column-gap:10px}.authlite-action-bar-center{justify-content:center}*{box-sizing:border-box}.authlite-action-bar,.authlite-action-bar-center{font-size:12px}\n"] }]
        }], ctorParameters: () => [{ type: i1.FormBuilder }], propDecorators: { translationDictionary: [{
                type: Input
            }], translationName: [{
                type: Input
            }] } });

class ResendVerifyLinkFormComponent {
    constructor(fb) {
        this.fb = fb;
        this.translationDictionary = DEFAULT_TRANSLATION_DICTIONARY;
    }
    ngOnInit() {
        this.initForm();
    }
    initForm() {
        this.resendVerifyLinkForm = this.fb.group({
            email: ['', [Validators.required, Validators.email]],
        });
    }
    get resendVerifyLinkFormGreetingTitle() {
        return this.translationDictionary.RESEND_VERIFY_LINK_FORM__GREETING_TITLE;
    }
    get resendVerifyLinkFormGreetingSubtitle() {
        return this.translationDictionary.RESEND_VERIFY_LINK_FORM__GREETING_SUBTITLE;
    }
    get resendVerifyLinkFormLabelEmail() {
        return this.translationDictionary.RESEND_VERIFY_LINK_FORM__LABEL_EMAIL;
    }
    get resendVerifyLinkFormUsernameErrorMessage() {
        return this.translationDictionary['RESEND_VERIFY_LINK_ERROR__BLANK_USERNAME'];
    }
    get resendVerifyLinkFormInvalidUsername() {
        return this.translationDictionary.RESEND_VERIFY_LINK_ERROR__INVALID_USERNAME;
    }
    get resendVerifyLinkFormUserNotFound() {
        return this.translationDictionary.RESEND_VERIFY_LINK_ERROR__USER_NOT_FOUND;
    }
    onSubmit() {
        console.log('onSubmit');
        if (this.resendVerifyLinkForm.invalid) {
            this.resendVerifyLinkForm.markAllAsTouched();
            return;
        }
        const enteredEmail = this.resendVerifyLinkForm.value.email;
        if (!this.isUserExists(enteredEmail)) {
            this.resendVerifyLinkForm.setErrors({ userNotFound: true });
        }
        else {
            console.log('reset link sent to:', this.resendVerifyLinkForm.value);
        }
    }
    isUserExists(_email) {
        return false;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: ResendVerifyLinkFormComponent, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.2", type: ResendVerifyLinkFormComponent, selector: "lib-resend-verify-link-form", inputs: { translationDictionary: "translationDictionary", translationName: "translationName" }, ngImport: i0, template: "<form [formGroup]=\"resendVerifyLinkForm\" (ngSubmit)=\"onSubmit()\" class=\"authlite-resendverifylink-form\">\r\n  <div class=\"authlite-margin-top\">\r\n    <lib-tagline [title]=\"resendVerifyLinkFormGreetingTitle\" [subtitle]=\"resendVerifyLinkFormGreetingSubtitle\">\r\n    </lib-tagline>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n    <lib-form-element-message [email]=\"resendVerifyLinkFormLabelEmail\"></lib-form-element-message>\r\n    <input type=\"email\" formControlName=\"email\" class=\"authlite-input\" name=\"email\" autocomplete=\"off\" value=\"\" />\r\n    <lib-form-element-message\r\n      *ngIf=\"resendVerifyLinkForm.controls['email'].touched && resendVerifyLinkForm.controls['email'].hasError('required')\"\r\n      [blankUsername]=\"resendVerifyLinkFormUsernameErrorMessage\">\r\n    </lib-form-element-message>\r\n    <lib-form-element-message\r\n      *ngIf=\"resendVerifyLinkForm.controls['email'].touched && resendVerifyLinkForm.controls['email'].hasError('email')\"\r\n      [invalidUsername]=\"resendVerifyLinkFormInvalidUsername\">\r\n    </lib-form-element-message>\r\n    <lib-form-element-message *ngIf=\"resendVerifyLinkForm.errors?.['userNotFound']\"\r\n      [userNotFound]=\"resendVerifyLinkFormUserNotFound\">\r\n    </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-action-bar authlite-margin-top\">\r\n    <button class=\"authlite-primary-button\" type=\"submit\">\r\n      {{ translationDictionary.RESEND_VERIFY_LINK_FORM__ACTION_SEND }}\r\n    </button>\r\n  </div>\r\n  <div class=\"authlite-action-bar-center authlite-margin-top\">\r\n    {{ translationDictionary.RESEND_VERIFY_LINK_FORM__MESSAGE_ALREADY_VERIFIED }}\r\n    <button class=\"authlite-button-as-link\" type=\"submit\">\r\n      {{ translationDictionary.RESEND_VERIFY_LINK_FORM__ACTION_SIGNIN }}\r\n    </button>\r\n  </div>\r\n</form>", styles: ["*{--theme-color-primary: #107cc4;--theme-color-primary-alt: #219ef1;--theme-color-grey: #4c4c4c}*{--theme-black-900: #020202;--theme-black-800: #080808;--theme-black-700: #0e0e0e;--theme-black-600: #141414;--theme-black-500: #1a1a1a;--theme-black-400: #202020;--theme-black-300: #262626;--theme-black-200: #2c2c2c;--theme-black-100: #323232;--theme-black-50: #383838;--theme-black-900i: #fff;--theme-black-800i: #fff;--theme-black-700i: #fff;--theme-black-600i: #fff;--theme-black-500i: #fff;--theme-black-400i: #fff;--theme-black-300i: #fff;--theme-black-200i: #fff;--theme-black-100i: #fff;--theme-black-50i: #fff}*{--theme-white-900: #c6c6c6;--theme-white-800: #cccccc;--theme-white-700: #d2d2d2;--theme-white-600: #d8d8d8;--theme-white-500: #dedede;--theme-white-400: #e4e4e4;--theme-white-300: #eaeaea;--theme-white-200: #f0f0f0;--theme-white-100: #f6f6f6;--theme-white-50: #fcfcfc;--theme-white-900i: #000;--theme-white-800i: #000;--theme-white-700i: #000;--theme-white-600i: #000;--theme-white-500i: #000;--theme-white-400i: #000;--theme-white-300i: #000;--theme-white-200i: #000;--theme-white-100i: #000;--theme-white-50i: #000}*{--theme-black-extended-900: #3e3e3e;--theme-black-extended-800: #444444;--theme-black-extended-700: #4a4a4a;--theme-black-extended-600: #505050;--theme-black-extended-500: #565656;--theme-black-extended-400: #5c5c5c;--theme-black-extended-300: #626262;--theme-black-extended-200: #686868;--theme-black-extended-100: #6e6e6e;--theme-black-extended-50: #747474;--theme-black-extended-900i: #fff;--theme-black-extended-800i: #fff;--theme-black-extended-700i: #fff;--theme-black-extended-600i: #fff;--theme-black-extended-500i: #fff;--theme-black-extended-400i: #fff;--theme-black-extended-300i: #fff;--theme-black-extended-200i: #fff;--theme-black-extended-100i: #fff;--theme-black-extended-50i: #fff}*{--theme-white-extended-900: #8a8a8a;--theme-white-extended-800: #909090;--theme-white-extended-700: #969696;--theme-white-extended-600: #9c9c9c;--theme-white-extended-500: #a2a2a2;--theme-white-extended-400: #a8a8a8;--theme-white-extended-300: #aeaeae;--theme-white-extended-200: #b4b4b4;--theme-white-extended-100: #bababa;--theme-white-extended-50: #c0c0c0;--theme-white-extended-900i: #000;--theme-white-extended-800i: #000;--theme-white-extended-700i: #000;--theme-white-extended-600i: #000;--theme-white-extended-500i: #000;--theme-white-extended-400i: #000;--theme-white-extended-300i: #000;--theme-white-extended-200i: #000;--theme-white-extended-100i: #000;--theme-white-extended-50i: #000}.authlite-light{color:var(--theme-black-900)}.authlite-dark{color:var(--theme-white-50)}.authlite-input{padding:10px;text-overflow:ellipsis;font-size:14px;font-weight:400;height:40px;width:100%;line-height:24px;background-color:#f8f8f8;border:1px solid #e3e3e3;border-radius:4px;outline:none;transition:background-color .25s ease-in-out,border-color .25s ease-in-out}.authlite-input:focus{border-color:var(--theme-color-primary-alt)}.authlite-button-as-link,.authlite-button,.authlite-primary-button{padding:0 20px;font-size:14px;font-weight:400;outline:none;border:none;cursor:pointer;transition:background-color .25s ease-in-out,color .25s ease-in-out,border-color .25s ease-in-out}.authlite-button,.authlite-primary-button{height:40px;line-height:24px;border-radius:4px;background-color:#e4e4e4;color:#000}.authlite-button:hover,.authlite-button:focus{background-color:#d7d7d7}.authlite-primary-button{background-color:var(--theme-color-primary-alt);color:#fff}.authlite-primary-button:hover,.authlite-primary-button:focus{background-color:var(--theme-color-primary);color:#fff}.authlite-button-as-link{background-color:transparent;border:none;outline:none;cursor:pointer;padding:0 0 2px;color:var(--theme-color-grey);border-bottom:1px dotted transparent;border-bottom:1px dotted var(--theme-color-grey)}.authlite-button-as-link:hover,.authlite-button-as-link:focus{color:var(--theme-color-primary);border-color:var(--theme-color-primary)}.authlite-form-element-error,.authlite-form-element-warning,.authlite-form-element-success,.authlite-form-element-info{margin-top:4px;font-size:10px;color:#cc2936}.authlite-form-element-warning{color:#ffd25a}.authlite-form-element-success{color:#86cd82}.authlite-form-element-info,.authlite-dark .authlite-form-element-info{color:#666b6a}.authlite-form-element-label{display:block;font-size:12px;margin-bottom:4px;text-transform:capitalize;word-break:keep-all;color:#666b6a}a{transition:.25s color ease-in-out,.25s border-color ease-in-out;cursor:pointer}a,a:hover,a:focus,a:active{text-decoration:none}a{color:var(--theme-color-primary);border-bottom:1px dotted transparent}a:hover,a:focus{color:var(--theme-color-primary-alt);border-color:var(--theme-color-primary-alt)}html{font-size:100%;font-size:14px}body{line-height:1.5}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6{margin-top:0;margin-bottom:.5rem;line-height:1.3}p,.p{margin-top:0;margin-bottom:1rem;font-size:1rem}h1,.h1{font-size:3.052rem}h2,.h2{font-size:2.441rem}h3,.h3{font-size:1.953rem}h4,.h4{font-size:1.563rem}h5,.h5{font-size:1.25rem}h6,.h6{font-size:1rem;font-weight:400}small,.small{font-size:.8rem}b,strong{font-weight:700}mark,.mark{background-color:#fae5c2}.authlite-margin-top{margin-top:20px}.authlite-margin-top-small{margin-top:10px}.authlite-action-bar,.authlite-action-bar-center{display:grid;grid-auto-flow:column;align-items:center;column-gap:10px}.authlite-action-bar-center{justify-content:center}*{box-sizing:border-box}.authlite-resendverifylink-form{display:grid;grid-auto-flow:row;width:100%}.authlite-action-bar,.authlite-action-bar-center{font-size:12px}\n"], dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i1.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "component", type: TaglineComponent, selector: "lib-tagline", inputs: ["title", "subtitle"] }, { kind: "component", type: FormElementMessageComponent, selector: "lib-form-element-message", inputs: ["email", "password", "given_name", "family_name", "retype_password", "type", "blankUsername", "blankPassword", "invalidUsername", "userNotFound", "incorrectPassword", "blankGivenname", "blankFamilyname", "blankRetypePassword", "RetypePasswordDoesnotmatch"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: ResendVerifyLinkFormComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-resend-verify-link-form', template: "<form [formGroup]=\"resendVerifyLinkForm\" (ngSubmit)=\"onSubmit()\" class=\"authlite-resendverifylink-form\">\r\n  <div class=\"authlite-margin-top\">\r\n    <lib-tagline [title]=\"resendVerifyLinkFormGreetingTitle\" [subtitle]=\"resendVerifyLinkFormGreetingSubtitle\">\r\n    </lib-tagline>\r\n  </div>\r\n  <div class=\"authlite-margin-top\">\r\n    <lib-form-element-message [email]=\"resendVerifyLinkFormLabelEmail\"></lib-form-element-message>\r\n    <input type=\"email\" formControlName=\"email\" class=\"authlite-input\" name=\"email\" autocomplete=\"off\" value=\"\" />\r\n    <lib-form-element-message\r\n      *ngIf=\"resendVerifyLinkForm.controls['email'].touched && resendVerifyLinkForm.controls['email'].hasError('required')\"\r\n      [blankUsername]=\"resendVerifyLinkFormUsernameErrorMessage\">\r\n    </lib-form-element-message>\r\n    <lib-form-element-message\r\n      *ngIf=\"resendVerifyLinkForm.controls['email'].touched && resendVerifyLinkForm.controls['email'].hasError('email')\"\r\n      [invalidUsername]=\"resendVerifyLinkFormInvalidUsername\">\r\n    </lib-form-element-message>\r\n    <lib-form-element-message *ngIf=\"resendVerifyLinkForm.errors?.['userNotFound']\"\r\n      [userNotFound]=\"resendVerifyLinkFormUserNotFound\">\r\n    </lib-form-element-message>\r\n  </div>\r\n  <div class=\"authlite-action-bar authlite-margin-top\">\r\n    <button class=\"authlite-primary-button\" type=\"submit\">\r\n      {{ translationDictionary.RESEND_VERIFY_LINK_FORM__ACTION_SEND }}\r\n    </button>\r\n  </div>\r\n  <div class=\"authlite-action-bar-center authlite-margin-top\">\r\n    {{ translationDictionary.RESEND_VERIFY_LINK_FORM__MESSAGE_ALREADY_VERIFIED }}\r\n    <button class=\"authlite-button-as-link\" type=\"submit\">\r\n      {{ translationDictionary.RESEND_VERIFY_LINK_FORM__ACTION_SIGNIN }}\r\n    </button>\r\n  </div>\r\n</form>", styles: ["*{--theme-color-primary: #107cc4;--theme-color-primary-alt: #219ef1;--theme-color-grey: #4c4c4c}*{--theme-black-900: #020202;--theme-black-800: #080808;--theme-black-700: #0e0e0e;--theme-black-600: #141414;--theme-black-500: #1a1a1a;--theme-black-400: #202020;--theme-black-300: #262626;--theme-black-200: #2c2c2c;--theme-black-100: #323232;--theme-black-50: #383838;--theme-black-900i: #fff;--theme-black-800i: #fff;--theme-black-700i: #fff;--theme-black-600i: #fff;--theme-black-500i: #fff;--theme-black-400i: #fff;--theme-black-300i: #fff;--theme-black-200i: #fff;--theme-black-100i: #fff;--theme-black-50i: #fff}*{--theme-white-900: #c6c6c6;--theme-white-800: #cccccc;--theme-white-700: #d2d2d2;--theme-white-600: #d8d8d8;--theme-white-500: #dedede;--theme-white-400: #e4e4e4;--theme-white-300: #eaeaea;--theme-white-200: #f0f0f0;--theme-white-100: #f6f6f6;--theme-white-50: #fcfcfc;--theme-white-900i: #000;--theme-white-800i: #000;--theme-white-700i: #000;--theme-white-600i: #000;--theme-white-500i: #000;--theme-white-400i: #000;--theme-white-300i: #000;--theme-white-200i: #000;--theme-white-100i: #000;--theme-white-50i: #000}*{--theme-black-extended-900: #3e3e3e;--theme-black-extended-800: #444444;--theme-black-extended-700: #4a4a4a;--theme-black-extended-600: #505050;--theme-black-extended-500: #565656;--theme-black-extended-400: #5c5c5c;--theme-black-extended-300: #626262;--theme-black-extended-200: #686868;--theme-black-extended-100: #6e6e6e;--theme-black-extended-50: #747474;--theme-black-extended-900i: #fff;--theme-black-extended-800i: #fff;--theme-black-extended-700i: #fff;--theme-black-extended-600i: #fff;--theme-black-extended-500i: #fff;--theme-black-extended-400i: #fff;--theme-black-extended-300i: #fff;--theme-black-extended-200i: #fff;--theme-black-extended-100i: #fff;--theme-black-extended-50i: #fff}*{--theme-white-extended-900: #8a8a8a;--theme-white-extended-800: #909090;--theme-white-extended-700: #969696;--theme-white-extended-600: #9c9c9c;--theme-white-extended-500: #a2a2a2;--theme-white-extended-400: #a8a8a8;--theme-white-extended-300: #aeaeae;--theme-white-extended-200: #b4b4b4;--theme-white-extended-100: #bababa;--theme-white-extended-50: #c0c0c0;--theme-white-extended-900i: #000;--theme-white-extended-800i: #000;--theme-white-extended-700i: #000;--theme-white-extended-600i: #000;--theme-white-extended-500i: #000;--theme-white-extended-400i: #000;--theme-white-extended-300i: #000;--theme-white-extended-200i: #000;--theme-white-extended-100i: #000;--theme-white-extended-50i: #000}.authlite-light{color:var(--theme-black-900)}.authlite-dark{color:var(--theme-white-50)}.authlite-input{padding:10px;text-overflow:ellipsis;font-size:14px;font-weight:400;height:40px;width:100%;line-height:24px;background-color:#f8f8f8;border:1px solid #e3e3e3;border-radius:4px;outline:none;transition:background-color .25s ease-in-out,border-color .25s ease-in-out}.authlite-input:focus{border-color:var(--theme-color-primary-alt)}.authlite-button-as-link,.authlite-button,.authlite-primary-button{padding:0 20px;font-size:14px;font-weight:400;outline:none;border:none;cursor:pointer;transition:background-color .25s ease-in-out,color .25s ease-in-out,border-color .25s ease-in-out}.authlite-button,.authlite-primary-button{height:40px;line-height:24px;border-radius:4px;background-color:#e4e4e4;color:#000}.authlite-button:hover,.authlite-button:focus{background-color:#d7d7d7}.authlite-primary-button{background-color:var(--theme-color-primary-alt);color:#fff}.authlite-primary-button:hover,.authlite-primary-button:focus{background-color:var(--theme-color-primary);color:#fff}.authlite-button-as-link{background-color:transparent;border:none;outline:none;cursor:pointer;padding:0 0 2px;color:var(--theme-color-grey);border-bottom:1px dotted transparent;border-bottom:1px dotted var(--theme-color-grey)}.authlite-button-as-link:hover,.authlite-button-as-link:focus{color:var(--theme-color-primary);border-color:var(--theme-color-primary)}.authlite-form-element-error,.authlite-form-element-warning,.authlite-form-element-success,.authlite-form-element-info{margin-top:4px;font-size:10px;color:#cc2936}.authlite-form-element-warning{color:#ffd25a}.authlite-form-element-success{color:#86cd82}.authlite-form-element-info,.authlite-dark .authlite-form-element-info{color:#666b6a}.authlite-form-element-label{display:block;font-size:12px;margin-bottom:4px;text-transform:capitalize;word-break:keep-all;color:#666b6a}a{transition:.25s color ease-in-out,.25s border-color ease-in-out;cursor:pointer}a,a:hover,a:focus,a:active{text-decoration:none}a{color:var(--theme-color-primary);border-bottom:1px dotted transparent}a:hover,a:focus{color:var(--theme-color-primary-alt);border-color:var(--theme-color-primary-alt)}html{font-size:100%;font-size:14px}body{line-height:1.5}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6{margin-top:0;margin-bottom:.5rem;line-height:1.3}p,.p{margin-top:0;margin-bottom:1rem;font-size:1rem}h1,.h1{font-size:3.052rem}h2,.h2{font-size:2.441rem}h3,.h3{font-size:1.953rem}h4,.h4{font-size:1.563rem}h5,.h5{font-size:1.25rem}h6,.h6{font-size:1rem;font-weight:400}small,.small{font-size:.8rem}b,strong{font-weight:700}mark,.mark{background-color:#fae5c2}.authlite-margin-top{margin-top:20px}.authlite-margin-top-small{margin-top:10px}.authlite-action-bar,.authlite-action-bar-center{display:grid;grid-auto-flow:column;align-items:center;column-gap:10px}.authlite-action-bar-center{justify-content:center}*{box-sizing:border-box}.authlite-resendverifylink-form{display:grid;grid-auto-flow:row;width:100%}.authlite-action-bar,.authlite-action-bar-center{font-size:12px}\n"] }]
        }], ctorParameters: () => [{ type: i1.FormBuilder }], propDecorators: { translationDictionary: [{
                type: Input
            }], translationName: [{
                type: Input
            }] } });

class SignupSuccessPageComponent {
    constructor() {
        this.heading = '';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: SignupSuccessPageComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.2", type: SignupSuccessPageComponent, selector: "lib-signup-success-page", inputs: { heading: "heading", children: "children" }, ngImport: i0, template: "<div class=\"authlite-infopage\">\r\n    <h1>{{ heading }}</h1>\r\n    <ng-container *ngIf=\"children\">{{ children }}</ng-container>\r\n  </div>", styles: [".authlite-infopage{display:grid;justify-items:center;max-width:90vw;text-align:center;font-size:14px}.authlite-infopage h1{font-weight:400;font-size:30px}\n"], dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: SignupSuccessPageComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-signup-success-page', template: "<div class=\"authlite-infopage\">\r\n    <h1>{{ heading }}</h1>\r\n    <ng-container *ngIf=\"children\">{{ children }}</ng-container>\r\n  </div>", styles: [".authlite-infopage{display:grid;justify-items:center;max-width:90vw;text-align:center;font-size:14px}.authlite-infopage h1{font-weight:400;font-size:30px}\n"] }]
        }], propDecorators: { heading: [{
                type: Input
            }], children: [{
                type: Input
            }] } });

class LogoComponent {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: LogoComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.2", type: LogoComponent, selector: "lib-logo", ngImport: i0, template: "<div class=\"authlite-d1-logo\">\r\n    <img src=\"https://authlite-widgets.ioak.io/static/media/authlite_black.449e265c.svg\" alt=\"Authlite logo\"/>\r\n</div>", styles: [".authlite-d1-logo img{height:42px}\n"] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: LogoComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-logo', template: "<div class=\"authlite-d1-logo\">\r\n    <img src=\"https://authlite-widgets.ioak.io/static/media/authlite_black.449e265c.svg\" alt=\"Authlite logo\"/>\r\n</div>", styles: [".authlite-d1-logo img{height:42px}\n"] }]
        }] });

class HeaderComponent {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: HeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.2", type: HeaderComponent, selector: "lib-header", inputs: { logo: "logo", header: "header" }, ngImport: i0, template: "<div class=\"authlite-d1-header\">\r\n    <lib-logo></lib-logo>\r\n    {{header}}\r\n  </div>", styles: [".authlite-d1-header{display:grid;justify-items:center;row-gap:10px}\n"], dependencies: [{ kind: "component", type: LogoComponent, selector: "lib-logo" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: HeaderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-header', template: "<div class=\"authlite-d1-header\">\r\n    <lib-logo></lib-logo>\r\n    {{header}}\r\n  </div>", styles: [".authlite-d1-header{display:grid;justify-items:center;row-gap:10px}\n"] }]
        }], propDecorators: { logo: [{
                type: Input
            }], header: [{
                type: Input
            }] } });

class MainFormComponent {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: MainFormComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.2", type: MainFormComponent, selector: "lib-main-form", inputs: { logo: "logo", placeholder: "placeholder" }, ngImport: i0, template: "\r\n<div class=\"authlite-mainform\">\r\n    <lib-header></lib-header>\r\n    <lib-signin-form></lib-signin-form>\r\n    <!--<lib-signup-form></lib-signup-form>\r\n    <app-forgot-password-form></app-forgot-password-form>\r\n    <app-resend-verify-link-form></app-resend-verify-link-form>\r\n    <app-signup-success-page></app-signup-success-page>-->\r\n</div>\r\n", styles: ["@import\"https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700&display=swap\";html body *{font-family:Roboto,sans-serif}html body{font-size:14px}\n"], dependencies: [{ kind: "component", type: SigninFormComponent, selector: "lib-signin-form", inputs: ["translationDictionary", "translationName"] }, { kind: "component", type: HeaderComponent, selector: "lib-header", inputs: ["logo", "header"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: MainFormComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-main-form', template: "\r\n<div class=\"authlite-mainform\">\r\n    <lib-header></lib-header>\r\n    <lib-signin-form></lib-signin-form>\r\n    <!--<lib-signup-form></lib-signup-form>\r\n    <app-forgot-password-form></app-forgot-password-form>\r\n    <app-resend-verify-link-form></app-resend-verify-link-form>\r\n    <app-signup-success-page></app-signup-success-page>-->\r\n</div>\r\n", styles: ["@import\"https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700&display=swap\";html body *{font-family:Roboto,sans-serif}html body{font-size:14px}\n"] }]
        }], propDecorators: { logo: [{
                type: Input
            }], placeholder: [{
                type: Input
            }] } });

class DesignOneComponent {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: DesignOneComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.2", type: DesignOneComponent, selector: "lib-design-one", inputs: { logo: "logo" }, ngImport: i0, template: "<div class=\"authlite-d1\">\r\n  <div class=\"authlite-d1__left\"></div>\r\n  <div class=\"authlite-d1__right\">\r\n    <lib-main-form></lib-main-form>\r\n  </div>\r\n</div>", styles: [".authlite-d1{display:grid;grid-template-columns:0 1fr;min-height:100vh;height:100%;background-color:#fcfcfc;color:#0c0c0c}@media (min-width: 960px){.authlite-d1{grid-template-columns:auto 1fr}.authlite-d1__left{width:450px}}.authlite-d1__left{background:url(https://images.unsplash.com/photo-1547357812-b5afb3656fc1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80) center center/cover no-repeat}.authlite-d1__right{display:flex;flex-direction:column;justify-content:center;height:100%;width:100%;max-width:456px;padding:20px;margin:auto}\n"], dependencies: [{ kind: "component", type: MainFormComponent, selector: "lib-main-form", inputs: ["logo", "placeholder"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: DesignOneComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-design-one', template: "<div class=\"authlite-d1\">\r\n  <div class=\"authlite-d1__left\"></div>\r\n  <div class=\"authlite-d1__right\">\r\n    <lib-main-form></lib-main-form>\r\n  </div>\r\n</div>", styles: [".authlite-d1{display:grid;grid-template-columns:0 1fr;min-height:100vh;height:100%;background-color:#fcfcfc;color:#0c0c0c}@media (min-width: 960px){.authlite-d1{grid-template-columns:auto 1fr}.authlite-d1__left{width:450px}}.authlite-d1__left{background:url(https://images.unsplash.com/photo-1547357812-b5afb3656fc1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80) center center/cover no-repeat}.authlite-d1__right{display:flex;flex-direction:column;justify-content:center;height:100%;width:100%;max-width:456px;padding:20px;margin:auto}\n"] }]
        }], propDecorators: { logo: [{
                type: Input
            }] } });

class LoginWrapperComponent {
    constructor() {
        this.heading = '';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: LoginWrapperComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.2", type: LoginWrapperComponent, selector: "lib-login", inputs: { translationDictionary: "translationDictionary", signinGreetingTitle: "signinGreetingTitle", signinGreetingSubtitle: "signinGreetingSubtitle", signinFormLabelUsername: "signinFormLabelUsername", signinFormLabelPassword: "signinFormLabelPassword", signupGreetingTitle: "signupGreetingTitle", signupGreetingSubtitle: "signupGreetingSubtitle", signupFormLabelGivenname: "signupFormLabelGivenname", signupFormLabelFamilyname: "signupFormLabelFamilyname", signupFormLabelEmail: "signupFormLabelEmail", signupFormLabelPassword: "signupFormLabelPassword", signupFormLabelRetypePassword: "signupFormLabelRetypePassword", forgotPasswordGreetingTitle: "forgotPasswordGreetingTitle", forgotPasswordGreetingSubtitle: "forgotPasswordGreetingSubtitle", forgotPasswordFormLabelEmail: "forgotPasswordFormLabelEmail", resendVerifyLinkFormGreetingTitle: "resendVerifyLinkFormGreetingTitle", resendVerifyLinkFormGreetingSubtitle: "resendVerifyLinkFormGreetingSubtitle", resendVerifyLinkFormLabelEmail: "resendVerifyLinkFormLabelEmail", heading: "heading", children: "children" }, ngImport: i0, template: "<div class=\"authlite-login\">\r\n  <lib-design-one></lib-design-one>\r\n</div>", styles: ["@import\"https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700&display=swap\";*{--theme-color-primary: #107cc4;--theme-color-primary-alt: #219ef1;--theme-color-grey: #4c4c4c}*{--theme-black-900: #020202;--theme-black-800: #080808;--theme-black-700: #0e0e0e;--theme-black-600: #141414;--theme-black-500: #1a1a1a;--theme-black-400: #202020;--theme-black-300: #262626;--theme-black-200: #2c2c2c;--theme-black-100: #323232;--theme-black-50: #383838;--theme-black-900i: #fff;--theme-black-800i: #fff;--theme-black-700i: #fff;--theme-black-600i: #fff;--theme-black-500i: #fff;--theme-black-400i: #fff;--theme-black-300i: #fff;--theme-black-200i: #fff;--theme-black-100i: #fff;--theme-black-50i: #fff}*{--theme-white-900: #c6c6c6;--theme-white-800: #cccccc;--theme-white-700: #d2d2d2;--theme-white-600: #d8d8d8;--theme-white-500: #dedede;--theme-white-400: #e4e4e4;--theme-white-300: #eaeaea;--theme-white-200: #f0f0f0;--theme-white-100: #f6f6f6;--theme-white-50: #fcfcfc;--theme-white-900i: #000;--theme-white-800i: #000;--theme-white-700i: #000;--theme-white-600i: #000;--theme-white-500i: #000;--theme-white-400i: #000;--theme-white-300i: #000;--theme-white-200i: #000;--theme-white-100i: #000;--theme-white-50i: #000}*{--theme-black-extended-900: #3e3e3e;--theme-black-extended-800: #444444;--theme-black-extended-700: #4a4a4a;--theme-black-extended-600: #505050;--theme-black-extended-500: #565656;--theme-black-extended-400: #5c5c5c;--theme-black-extended-300: #626262;--theme-black-extended-200: #686868;--theme-black-extended-100: #6e6e6e;--theme-black-extended-50: #747474;--theme-black-extended-900i: #fff;--theme-black-extended-800i: #fff;--theme-black-extended-700i: #fff;--theme-black-extended-600i: #fff;--theme-black-extended-500i: #fff;--theme-black-extended-400i: #fff;--theme-black-extended-300i: #fff;--theme-black-extended-200i: #fff;--theme-black-extended-100i: #fff;--theme-black-extended-50i: #fff}*{--theme-white-extended-900: #8a8a8a;--theme-white-extended-800: #909090;--theme-white-extended-700: #969696;--theme-white-extended-600: #9c9c9c;--theme-white-extended-500: #a2a2a2;--theme-white-extended-400: #a8a8a8;--theme-white-extended-300: #aeaeae;--theme-white-extended-200: #b4b4b4;--theme-white-extended-100: #bababa;--theme-white-extended-50: #c0c0c0;--theme-white-extended-900i: #000;--theme-white-extended-800i: #000;--theme-white-extended-700i: #000;--theme-white-extended-600i: #000;--theme-white-extended-500i: #000;--theme-white-extended-400i: #000;--theme-white-extended-300i: #000;--theme-white-extended-200i: #000;--theme-white-extended-100i: #000;--theme-white-extended-50i: #000}.authlite-light{color:var(--theme-black-900)}.authlite-dark{color:var(--theme-white-50)}.authlite-input{padding:10px;text-overflow:ellipsis;font-size:14px;font-weight:400;height:40px;width:100%;line-height:24px;background-color:#f8f8f8;border:1px solid #e3e3e3;border-radius:4px;outline:none;transition:background-color .25s ease-in-out,border-color .25s ease-in-out}.authlite-input:focus{border-color:var(--theme-color-primary-alt)}.authlite-button-as-link,.authlite-button,.authlite-primary-button{padding:0 20px;font-size:14px;font-weight:400;outline:none;border:none;cursor:pointer;transition:background-color .25s ease-in-out,color .25s ease-in-out,border-color .25s ease-in-out}.authlite-button,.authlite-primary-button{height:40px;line-height:24px;border-radius:4px;background-color:#e4e4e4;color:#000}.authlite-button:hover,.authlite-button:focus{background-color:#d7d7d7}.authlite-primary-button{background-color:var(--theme-color-primary-alt);color:#fff}.authlite-primary-button:hover,.authlite-primary-button:focus{background-color:var(--theme-color-primary);color:#fff}.authlite-button-as-link{background-color:transparent;border:none;outline:none;cursor:pointer;padding:0 0 2px;color:var(--theme-color-grey);border-bottom:1px dotted transparent;border-bottom:1px dotted var(--theme-color-grey)}.authlite-button-as-link:hover,.authlite-button-as-link:focus{color:var(--theme-color-primary);border-color:var(--theme-color-primary)}.authlite-form-element-error,.authlite-form-element-warning,.authlite-form-element-success,.authlite-form-element-info{margin-top:4px;font-size:10px;color:#cc2936}.authlite-form-element-warning{color:#ffd25a}.authlite-form-element-success{color:#86cd82}.authlite-form-element-info,.authlite-dark .authlite-form-element-info{color:#666b6a}.authlite-form-element-label{display:block;font-size:12px;margin-bottom:4px;text-transform:capitalize;word-break:keep-all;color:#666b6a}a{transition:.25s color ease-in-out,.25s border-color ease-in-out;cursor:pointer}a,a:hover,a:focus,a:active{text-decoration:none}a{color:var(--theme-color-primary);border-bottom:1px dotted transparent}a:hover,a:focus{color:var(--theme-color-primary-alt);border-color:var(--theme-color-primary-alt)}html{font-size:100%;font-size:14px}body{line-height:1.5}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6{margin-top:0;margin-bottom:.5rem;line-height:1.3}p,.p{margin-top:0;margin-bottom:1rem;font-size:1rem}h1,.h1{font-size:3.052rem}h2,.h2{font-size:2.441rem}h3,.h3{font-size:1.953rem}h4,.h4{font-size:1.563rem}h5,.h5{font-size:1.25rem}h6,.h6{font-size:1rem;font-weight:400}small,.small{font-size:.8rem}b,strong{font-weight:700}mark,.mark{background-color:#fae5c2}.authlite-margin-top{margin-top:20px}.authlite-margin-top-small{margin-top:10px}.authlite-action-bar,.authlite-action-bar-center{display:grid;grid-auto-flow:column;align-items:center;column-gap:10px}.authlite-action-bar-center{justify-content:center}*{box-sizing:border-box}html body *{font-family:Roboto,sans-serif}html body{font-size:14px}*{font-family:Roboto,sans-serif}.authlite-d1{display:grid;grid-template-columns:0 1fr;min-height:100vh;height:100%;background-color:#fcfcfc;color:#0c0c0c}@media (min-width: 960px){.authlite-d1{grid-template-columns:auto 1fr}.authlite-d1__left{width:450px}}.authlite-d1__left{background:url(https://images.unsplash.com/photo-1547357812-b5afb3656fc1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80) center center / cover no-repeat}.authlite-d1__right{display:flex;flex-direction:column;justify-content:center;height:100%;width:100%;max-width:456px;padding:20px;margin:auto}\n"], dependencies: [{ kind: "component", type: DesignOneComponent, selector: "lib-design-one", inputs: ["logo"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: LoginWrapperComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-login', template: "<div class=\"authlite-login\">\r\n  <lib-design-one></lib-design-one>\r\n</div>", styles: ["@import\"https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700&display=swap\";*{--theme-color-primary: #107cc4;--theme-color-primary-alt: #219ef1;--theme-color-grey: #4c4c4c}*{--theme-black-900: #020202;--theme-black-800: #080808;--theme-black-700: #0e0e0e;--theme-black-600: #141414;--theme-black-500: #1a1a1a;--theme-black-400: #202020;--theme-black-300: #262626;--theme-black-200: #2c2c2c;--theme-black-100: #323232;--theme-black-50: #383838;--theme-black-900i: #fff;--theme-black-800i: #fff;--theme-black-700i: #fff;--theme-black-600i: #fff;--theme-black-500i: #fff;--theme-black-400i: #fff;--theme-black-300i: #fff;--theme-black-200i: #fff;--theme-black-100i: #fff;--theme-black-50i: #fff}*{--theme-white-900: #c6c6c6;--theme-white-800: #cccccc;--theme-white-700: #d2d2d2;--theme-white-600: #d8d8d8;--theme-white-500: #dedede;--theme-white-400: #e4e4e4;--theme-white-300: #eaeaea;--theme-white-200: #f0f0f0;--theme-white-100: #f6f6f6;--theme-white-50: #fcfcfc;--theme-white-900i: #000;--theme-white-800i: #000;--theme-white-700i: #000;--theme-white-600i: #000;--theme-white-500i: #000;--theme-white-400i: #000;--theme-white-300i: #000;--theme-white-200i: #000;--theme-white-100i: #000;--theme-white-50i: #000}*{--theme-black-extended-900: #3e3e3e;--theme-black-extended-800: #444444;--theme-black-extended-700: #4a4a4a;--theme-black-extended-600: #505050;--theme-black-extended-500: #565656;--theme-black-extended-400: #5c5c5c;--theme-black-extended-300: #626262;--theme-black-extended-200: #686868;--theme-black-extended-100: #6e6e6e;--theme-black-extended-50: #747474;--theme-black-extended-900i: #fff;--theme-black-extended-800i: #fff;--theme-black-extended-700i: #fff;--theme-black-extended-600i: #fff;--theme-black-extended-500i: #fff;--theme-black-extended-400i: #fff;--theme-black-extended-300i: #fff;--theme-black-extended-200i: #fff;--theme-black-extended-100i: #fff;--theme-black-extended-50i: #fff}*{--theme-white-extended-900: #8a8a8a;--theme-white-extended-800: #909090;--theme-white-extended-700: #969696;--theme-white-extended-600: #9c9c9c;--theme-white-extended-500: #a2a2a2;--theme-white-extended-400: #a8a8a8;--theme-white-extended-300: #aeaeae;--theme-white-extended-200: #b4b4b4;--theme-white-extended-100: #bababa;--theme-white-extended-50: #c0c0c0;--theme-white-extended-900i: #000;--theme-white-extended-800i: #000;--theme-white-extended-700i: #000;--theme-white-extended-600i: #000;--theme-white-extended-500i: #000;--theme-white-extended-400i: #000;--theme-white-extended-300i: #000;--theme-white-extended-200i: #000;--theme-white-extended-100i: #000;--theme-white-extended-50i: #000}.authlite-light{color:var(--theme-black-900)}.authlite-dark{color:var(--theme-white-50)}.authlite-input{padding:10px;text-overflow:ellipsis;font-size:14px;font-weight:400;height:40px;width:100%;line-height:24px;background-color:#f8f8f8;border:1px solid #e3e3e3;border-radius:4px;outline:none;transition:background-color .25s ease-in-out,border-color .25s ease-in-out}.authlite-input:focus{border-color:var(--theme-color-primary-alt)}.authlite-button-as-link,.authlite-button,.authlite-primary-button{padding:0 20px;font-size:14px;font-weight:400;outline:none;border:none;cursor:pointer;transition:background-color .25s ease-in-out,color .25s ease-in-out,border-color .25s ease-in-out}.authlite-button,.authlite-primary-button{height:40px;line-height:24px;border-radius:4px;background-color:#e4e4e4;color:#000}.authlite-button:hover,.authlite-button:focus{background-color:#d7d7d7}.authlite-primary-button{background-color:var(--theme-color-primary-alt);color:#fff}.authlite-primary-button:hover,.authlite-primary-button:focus{background-color:var(--theme-color-primary);color:#fff}.authlite-button-as-link{background-color:transparent;border:none;outline:none;cursor:pointer;padding:0 0 2px;color:var(--theme-color-grey);border-bottom:1px dotted transparent;border-bottom:1px dotted var(--theme-color-grey)}.authlite-button-as-link:hover,.authlite-button-as-link:focus{color:var(--theme-color-primary);border-color:var(--theme-color-primary)}.authlite-form-element-error,.authlite-form-element-warning,.authlite-form-element-success,.authlite-form-element-info{margin-top:4px;font-size:10px;color:#cc2936}.authlite-form-element-warning{color:#ffd25a}.authlite-form-element-success{color:#86cd82}.authlite-form-element-info,.authlite-dark .authlite-form-element-info{color:#666b6a}.authlite-form-element-label{display:block;font-size:12px;margin-bottom:4px;text-transform:capitalize;word-break:keep-all;color:#666b6a}a{transition:.25s color ease-in-out,.25s border-color ease-in-out;cursor:pointer}a,a:hover,a:focus,a:active{text-decoration:none}a{color:var(--theme-color-primary);border-bottom:1px dotted transparent}a:hover,a:focus{color:var(--theme-color-primary-alt);border-color:var(--theme-color-primary-alt)}html{font-size:100%;font-size:14px}body{line-height:1.5}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6{margin-top:0;margin-bottom:.5rem;line-height:1.3}p,.p{margin-top:0;margin-bottom:1rem;font-size:1rem}h1,.h1{font-size:3.052rem}h2,.h2{font-size:2.441rem}h3,.h3{font-size:1.953rem}h4,.h4{font-size:1.563rem}h5,.h5{font-size:1.25rem}h6,.h6{font-size:1rem;font-weight:400}small,.small{font-size:.8rem}b,strong{font-weight:700}mark,.mark{background-color:#fae5c2}.authlite-margin-top{margin-top:20px}.authlite-margin-top-small{margin-top:10px}.authlite-action-bar,.authlite-action-bar-center{display:grid;grid-auto-flow:column;align-items:center;column-gap:10px}.authlite-action-bar-center{justify-content:center}*{box-sizing:border-box}html body *{font-family:Roboto,sans-serif}html body{font-size:14px}*{font-family:Roboto,sans-serif}.authlite-d1{display:grid;grid-template-columns:0 1fr;min-height:100vh;height:100%;background-color:#fcfcfc;color:#0c0c0c}@media (min-width: 960px){.authlite-d1{grid-template-columns:auto 1fr}.authlite-d1__left{width:450px}}.authlite-d1__left{background:url(https://images.unsplash.com/photo-1547357812-b5afb3656fc1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80) center center / cover no-repeat}.authlite-d1__right{display:flex;flex-direction:column;justify-content:center;height:100%;width:100%;max-width:456px;padding:20px;margin:auto}\n"] }]
        }], propDecorators: { translationDictionary: [{
                type: Input
            }], signinGreetingTitle: [{
                type: Input
            }], signinGreetingSubtitle: [{
                type: Input
            }], signinFormLabelUsername: [{
                type: Input
            }], signinFormLabelPassword: [{
                type: Input
            }], signupGreetingTitle: [{
                type: Input
            }], signupGreetingSubtitle: [{
                type: Input
            }], signupFormLabelGivenname: [{
                type: Input
            }], signupFormLabelFamilyname: [{
                type: Input
            }], signupFormLabelEmail: [{
                type: Input
            }], signupFormLabelPassword: [{
                type: Input
            }], signupFormLabelRetypePassword: [{
                type: Input
            }], forgotPasswordGreetingTitle: [{
                type: Input
            }], forgotPasswordGreetingSubtitle: [{
                type: Input
            }], forgotPasswordFormLabelEmail: [{
                type: Input
            }], resendVerifyLinkFormGreetingTitle: [{
                type: Input
            }], resendVerifyLinkFormGreetingSubtitle: [{
                type: Input
            }], resendVerifyLinkFormLabelEmail: [{
                type: Input
            }], heading: [{
                type: Input
            }], children: [{
                type: Input
            }] } });

class AuthliteFormsWidgetsModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: AuthliteFormsWidgetsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.1.2", ngImport: i0, type: AuthliteFormsWidgetsModule, declarations: [AuthliteFormsWidgetsComponent,
            SigninFormComponent,
            SignupFormComponent,
            ForgotPasswordFormComponent,
            ResendVerifyLinkFormComponent,
            SignupSuccessPageComponent,
            CheckboxComponent,
            TaglineComponent,
            FormElementMessageComponent,
            LogoComponent,
            MainFormComponent,
            DesignOneComponent,
            LoginWrapperComponent,
            HeaderComponent], imports: [CommonModule,
            ReactiveFormsModule,
            RouterModule,
            FormsModule], exports: [AuthliteFormsWidgetsComponent,
            SigninFormComponent,
            SignupFormComponent,
            ForgotPasswordFormComponent,
            ResendVerifyLinkFormComponent,
            SignupSuccessPageComponent,
            CheckboxComponent,
            TaglineComponent,
            FormElementMessageComponent,
            LogoComponent,
            MainFormComponent,
            DesignOneComponent,
            LoginWrapperComponent,
            HeaderComponent] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: AuthliteFormsWidgetsModule, imports: [CommonModule,
            ReactiveFormsModule,
            RouterModule,
            FormsModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: AuthliteFormsWidgetsModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        AuthliteFormsWidgetsComponent,
                        SigninFormComponent,
                        SignupFormComponent,
                        ForgotPasswordFormComponent,
                        ResendVerifyLinkFormComponent,
                        SignupSuccessPageComponent,
                        CheckboxComponent,
                        TaglineComponent,
                        FormElementMessageComponent,
                        LogoComponent,
                        MainFormComponent,
                        DesignOneComponent,
                        LoginWrapperComponent,
                        HeaderComponent
                    ],
                    imports: [
                        CommonModule,
                        ReactiveFormsModule,
                        RouterModule,
                        FormsModule,
                        //AppRoutingModule
                    ],
                    exports: [
                        AuthliteFormsWidgetsComponent,
                        SigninFormComponent,
                        SignupFormComponent,
                        ForgotPasswordFormComponent,
                        ResendVerifyLinkFormComponent,
                        SignupSuccessPageComponent,
                        CheckboxComponent,
                        TaglineComponent,
                        FormElementMessageComponent,
                        LogoComponent,
                        MainFormComponent,
                        DesignOneComponent,
                        LoginWrapperComponent,
                        HeaderComponent
                    ]
                }]
        }] });

/*
 * Public API Surface of authlite-forms-widgets
 */

/**
 * Generated bundle index. Do not edit.
 */

export { AuthliteFormsWidgetsComponent, AuthliteFormsWidgetsModule, AuthliteFormsWidgetsService, CheckboxComponent, DEFAULT_TRANSLATION_DICTIONARY, DesignOneComponent, ForgotPasswordFormComponent, FormElementMessageComponent, HeaderComponent, LoginWrapperComponent, LogoComponent, MainFormComponent, ResendVerifyLinkFormComponent, SigninFormComponent, SignupFormComponent, SignupSuccessPageComponent, TaglineComponent, TranslationName, getTranslation };
//# sourceMappingURL=authlite-forms-widgets.mjs.map
